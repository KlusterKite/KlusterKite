schema {
  query: Query
  mutation: Mutations
}

type Boolean_MutationPayload {
  result: Boolean
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

# ClusterKit node monitoring
# The root provider
type ClusterKitMonitoring_ClusterKitNodeApi implements IClusterKitMonitoring, IClusterKitNodeApi, Node {
  # ClusterKit node monitoring
  clusterKitMonitoringApi: ClusterKitMonitoring_Root

  # The ClusterKit node managing API
  clusterKitNodesApi: ClusterKitNodeApi_Root

  # The current user
  me: ClusterKitNodeApi_CurrentUserApi
  id: ID

  # The node global searcher according to Relay specification
  __node(
    # The node global id
    id: ID
  ): Node
}

# Global cluster actors tree scan result
type ClusterKitMonitoring_ClusterTree implements IClusterKitMonitoring_ClusterTree, Node {
  # Gets the list of nodes
  nodes(filter: ClusterKitMonitoring_Pair_System_String_Node__Filter_Input, sort: [ClusterKitMonitoring_Pair_System_String_Node__Sort], id: String, offset: Int, limit: Int): ClusterKitMonitoring_Pair_System_String_Node__Connection

  # Gets the sum of queue size across tree
  queueSizeSum: Int

  # Gets the maximum queue size among tree nodes
  maxQueueSize: Int
  id: ID
}

# The actor's description
type ClusterKitMonitoring_Node implements IClusterKitMonitoring_Node, Node {
  # the actor's type
  actorType: String

  # the actor's last message
  currentMessage: String

  # the actor's dispatcher id
  dispatcherId: String

  # the actor's dispatcher type
  dispatcherType: String

  # the maximum queue size among it's children
  maxQueueSize: Int

  # the actor's name
  name: String

  # the actor's queue size
  queueSize: Int

  # the maximum queue size among it's children
  queueSizeSum: Int

  # the actor's children
  children(filter: ClusterKitMonitoring_Node_Filter_Input, sort: [ClusterKitMonitoring_Node_Sort], id: String, offset: Int, limit: Int): ClusterKitMonitoring_Node_Connection
  id: ID
}

# The list of connected ClusterKitMonitoring_Node
#  The actor's description
type ClusterKitMonitoring_Node_Connection implements IClusterKitMonitoring_Node_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitMonitoring_Node_Edge]
}

# The ClusterKitMonitoring_Node in a connected list
#  The actor's description
type ClusterKitMonitoring_Node_Edge implements IClusterKitMonitoring_Node_Edge {
  # A value to use with paging positioning
  cursor: String

  # The actor's description
  node: ClusterKitMonitoring_Node
}

input ClusterKitMonitoring_Node_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitMonitoring_Node_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitMonitoring_Node_Filter_Input

  # actorType exactly equals to the parameter, actorType: the actor's type
  actorType: String

  # actorType not equals to the parameter, actorType: the actor's type
  actorType_not: String

  # actorType is a substring of the parameter, actorType: the actor's type
  actorType_in: String

  # actorType is not a substring of the parameter, actorType: the actor's type
  actorType_not_in: String

  # actorType contains the parameter as substring, actorType: the actor's type
  actorType_contains: String

  # actorType doesn't contain the parameter as substring, actorType: the actor's type
  actorType_not_contains: String

  # actorType starts with the parameter value, actorType: the actor's type
  actorType_starts_with: String

  # actorType doesn't start with the parameter value, actorType: the actor's type
  actorType_not_starts_with: String

  # actorType ends with the parameter value, actorType: the actor's type
  actorType_ends_with: String

  # actorType doesn't end with the parameter value, actorType: the actor's type
  actorType_not_ends_with: String

  # actorType lowercased equals the parameter, actorType: the actor's type
  actorType_l: String

  # actorType lowercased doesn't equal the parameter, actorType: the actor's type
  actorType_l_not: String

  # actorType lowercased is a substring of the parameter, actorType: the actor's type
  actorType_l_in: String

  # actorType lowercased is not a substring of the parameter, actorType: the actor's type
  actorType_l_not_in: String

  # actorType lowercased contains the parameter as substring, actorType: the actor's type
  actorType_l_contains: String

  # actorType lowercased doesn't contain the parameter as substring, actorType: the actor's type
  actorType_l_not_contains: String

  # actorType lowercased starts with the parameter value, actorType: the actor's type
  actorType_l_starts_with: String

  # actorType lowercased doesn't start with the parameter value, actorType: the actor's type
  actorType_l_not_starts_with: String

  # actorType lowercased ends with the parameter value, actorType: the actor's type
  actorType_l_ends_with: String

  # actorType lowercased doesn't end with the parameter value, actorType: the actor's type
  actorType_l_not_ends_with: String

  # currentMessage exactly equals to the parameter, currentMessage: the actor's last message
  currentMessage: String

  # currentMessage not equals to the parameter, currentMessage: the actor's last message
  currentMessage_not: String

  # currentMessage is a substring of the parameter, currentMessage: the actor's last message
  currentMessage_in: String

  # currentMessage is not a substring of the parameter, currentMessage: the actor's last message
  currentMessage_not_in: String

  # currentMessage contains the parameter as substring, currentMessage: the actor's last message
  currentMessage_contains: String

  # currentMessage doesn't contain the parameter as substring, currentMessage: the actor's last message
  currentMessage_not_contains: String

  # currentMessage starts with the parameter value, currentMessage: the actor's last message
  currentMessage_starts_with: String

  # currentMessage doesn't start with the parameter value, currentMessage: the actor's last message
  currentMessage_not_starts_with: String

  # currentMessage ends with the parameter value, currentMessage: the actor's last message
  currentMessage_ends_with: String

  # currentMessage doesn't end with the parameter value, currentMessage: the actor's last message
  currentMessage_not_ends_with: String

  # currentMessage lowercased equals the parameter, currentMessage: the actor's last message
  currentMessage_l: String

  # currentMessage lowercased doesn't equal the parameter, currentMessage: the actor's last message
  currentMessage_l_not: String

  # currentMessage lowercased is a substring of the parameter, currentMessage: the actor's last message
  currentMessage_l_in: String

  # currentMessage lowercased is not a substring of the parameter, currentMessage: the actor's last message
  currentMessage_l_not_in: String

  # currentMessage lowercased contains the parameter as substring, currentMessage: the actor's last message
  currentMessage_l_contains: String

  # currentMessage lowercased doesn't contain the parameter as substring, currentMessage: the actor's last message
  currentMessage_l_not_contains: String

  # currentMessage lowercased starts with the parameter value, currentMessage: the actor's last message
  currentMessage_l_starts_with: String

  # currentMessage lowercased doesn't start with the parameter value, currentMessage: the actor's last message
  currentMessage_l_not_starts_with: String

  # currentMessage lowercased ends with the parameter value, currentMessage: the actor's last message
  currentMessage_l_ends_with: String

  # currentMessage lowercased doesn't end with the parameter value, currentMessage: the actor's last message
  currentMessage_l_not_ends_with: String

  # dispatcherId exactly equals to the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId: String

  # dispatcherId not equals to the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_not: String

  # dispatcherId is a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_in: String

  # dispatcherId is not a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_not_in: String

  # dispatcherId contains the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_contains: String

  # dispatcherId doesn't contain the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_not_contains: String

  # dispatcherId starts with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_starts_with: String

  # dispatcherId doesn't start with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_not_starts_with: String

  # dispatcherId ends with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_ends_with: String

  # dispatcherId doesn't end with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_not_ends_with: String

  # dispatcherId lowercased equals the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l: String

  # dispatcherId lowercased doesn't equal the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not: String

  # dispatcherId lowercased is a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_in: String

  # dispatcherId lowercased is not a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_in: String

  # dispatcherId lowercased contains the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_l_contains: String

  # dispatcherId lowercased doesn't contain the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_contains: String

  # dispatcherId lowercased starts with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_starts_with: String

  # dispatcherId lowercased doesn't start with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_starts_with: String

  # dispatcherId lowercased ends with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_ends_with: String

  # dispatcherId lowercased doesn't end with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_ends_with: String

  # dispatcherType exactly equals to the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType: String

  # dispatcherType not equals to the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_not: String

  # dispatcherType is a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_in: String

  # dispatcherType is not a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_not_in: String

  # dispatcherType contains the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_contains: String

  # dispatcherType doesn't contain the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_not_contains: String

  # dispatcherType starts with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_starts_with: String

  # dispatcherType doesn't start with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_not_starts_with: String

  # dispatcherType ends with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_ends_with: String

  # dispatcherType doesn't end with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_not_ends_with: String

  # dispatcherType lowercased equals the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l: String

  # dispatcherType lowercased doesn't equal the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not: String

  # dispatcherType lowercased is a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_in: String

  # dispatcherType lowercased is not a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_in: String

  # dispatcherType lowercased contains the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_l_contains: String

  # dispatcherType lowercased doesn't contain the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_contains: String

  # dispatcherType lowercased starts with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_starts_with: String

  # dispatcherType lowercased doesn't start with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_starts_with: String

  # dispatcherType lowercased ends with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_ends_with: String

  # dispatcherType lowercased doesn't end with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_ends_with: String

  # maxQueueSize exactly equals to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize: Int

  # maxQueueSize not equals to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_not: Int

  # maxQueueSize is less then the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_lt: Int

  # maxQueueSize is less then or equal to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_lte: Int

  # maxQueueSize is greater then the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_gt: Int

  # maxQueueSize is greater then or equal to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_gte: Int

  # name exactly equals to the parameter, name: the actor's name
  name: String

  # name not equals to the parameter, name: the actor's name
  name_not: String

  # name is a substring of the parameter, name: the actor's name
  name_in: String

  # name is not a substring of the parameter, name: the actor's name
  name_not_in: String

  # name contains the parameter as substring, name: the actor's name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the actor's name
  name_not_contains: String

  # name starts with the parameter value, name: the actor's name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the actor's name
  name_not_starts_with: String

  # name ends with the parameter value, name: the actor's name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the actor's name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the actor's name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the actor's name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the actor's name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the actor's name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the actor's name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the actor's name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the actor's name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the actor's name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the actor's name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the actor's name
  name_l_not_ends_with: String

  # queueSize exactly equals to the parameter, queueSize: the actor's queue size
  queueSize: Int

  # queueSize not equals to the parameter, queueSize: the actor's queue size
  queueSize_not: Int

  # queueSize is less then the parameter, queueSize: the actor's queue size
  queueSize_lt: Int

  # queueSize is less then or equal to the parameter, queueSize: the actor's queue size
  queueSize_lte: Int

  # queueSize is greater then the parameter, queueSize: the actor's queue size
  queueSize_gt: Int

  # queueSize is greater then or equal to the parameter, queueSize: the actor's queue size
  queueSize_gte: Int

  # queueSizeSum exactly equals to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum: Int

  # queueSizeSum not equals to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_not: Int

  # queueSizeSum is less then the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_lt: Int

  # queueSizeSum is less then or equal to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_lte: Int

  # queueSizeSum is greater then the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_gt: Int

  # queueSizeSum is greater then or equal to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_gte: Int
}

enum ClusterKitMonitoring_Node_Sort {
  actorType_asc
  actorType_desc
  currentMessage_asc
  currentMessage_desc
  dispatcherId_asc
  dispatcherId_desc
  dispatcherType_asc
  dispatcherType_desc
  maxQueueSize_asc
  maxQueueSize_desc
  name_asc
  name_desc
  queueSize_asc
  queueSize_desc
  queueSizeSum_asc
  queueSizeSum_desc
}

# Represents a dictionary key-value pair
type ClusterKitMonitoring_Pair_System_String_Node_ implements IClusterKitMonitoring_Pair_System_String_Node_, Node {
  # Gets a dictionary key
  key: String

  # Gets a dictionary value
  value: ClusterKitMonitoring_Node
  id: ID
}

# The list of connected ClusterKitMonitoring_Pair_System_String_Node_
#  Represents a dictionary key-value pair
type ClusterKitMonitoring_Pair_System_String_Node__Connection implements IClusterKitMonitoring_Pair_System_String_Node__Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitMonitoring_Pair_System_String_Node__Edge]
}

# The ClusterKitMonitoring_Pair_System_String_Node_ in a connected list
#  Represents a dictionary key-value pair
type ClusterKitMonitoring_Pair_System_String_Node__Edge implements IClusterKitMonitoring_Pair_System_String_Node__Edge {
  # A value to use with paging positioning
  cursor: String

  # Represents a dictionary key-value pair
  node: ClusterKitMonitoring_Pair_System_String_Node_
}

input ClusterKitMonitoring_Pair_System_String_Node__Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitMonitoring_Pair_System_String_Node__Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitMonitoring_Pair_System_String_Node__Filter_Input

  # key exactly equals to the parameter, key: Gets a dictionary key
  key: String

  # key not equals to the parameter, key: Gets a dictionary key
  key_not: String

  # key is a substring of the parameter, key: Gets a dictionary key
  key_in: String

  # key is not a substring of the parameter, key: Gets a dictionary key
  key_not_in: String

  # key contains the parameter as substring, key: Gets a dictionary key
  key_contains: String

  # key doesn't contain the parameter as substring, key: Gets a dictionary key
  key_not_contains: String

  # key starts with the parameter value, key: Gets a dictionary key
  key_starts_with: String

  # key doesn't start with the parameter value, key: Gets a dictionary key
  key_not_starts_with: String

  # key ends with the parameter value, key: Gets a dictionary key
  key_ends_with: String

  # key doesn't end with the parameter value, key: Gets a dictionary key
  key_not_ends_with: String

  # key lowercased equals the parameter, key: Gets a dictionary key
  key_l: String

  # key lowercased doesn't equal the parameter, key: Gets a dictionary key
  key_l_not: String

  # key lowercased is a substring of the parameter, key: Gets a dictionary key
  key_l_in: String

  # key lowercased is not a substring of the parameter, key: Gets a dictionary key
  key_l_not_in: String

  # key lowercased contains the parameter as substring, key: Gets a dictionary key
  key_l_contains: String

  # key lowercased doesn't contain the parameter as substring, key: Gets a dictionary key
  key_l_not_contains: String

  # key lowercased starts with the parameter value, key: Gets a dictionary key
  key_l_starts_with: String

  # key lowercased doesn't start with the parameter value, key: Gets a dictionary key
  key_l_not_starts_with: String

  # key lowercased ends with the parameter value, key: Gets a dictionary key
  key_l_ends_with: String

  # key lowercased doesn't end with the parameter value, key: Gets a dictionary key
  key_l_not_ends_with: String
}

enum ClusterKitMonitoring_Pair_System_String_Node__Sort {
  key_asc
  key_desc
}

# ClusterKit monitoring api
type ClusterKitMonitoring_Root implements IClusterKitMonitoring_Root, Node {
  # Gets the last cluster scan result. Changes as system receives the scan results from nodes
  getClusterTree: ClusterKitMonitoring_ClusterTree
  id: ID
}

input ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan_Input {
  clientMutationId: String
}

# Akka system address
type ClusterKitNodeApi_AkkaAddress implements IClusterKitNodeApi_AkkaAddress, Node {
  # the address string representation
  asString: String

  # the address host
  host: String

  # the address port
  port: Int

  # the address protocol
  protocol: String

  # the address system name
  system: String
  id: ID
}

# Short user description
type ClusterKitNodeApi_ClusterKitUserDescription implements IClusterKitNodeApi_ClusterKitUserDescription, Node {
  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
  id: ID
}

# Publishes access to the authenticated user information
type ClusterKitNodeApi_ClusterManagement implements IClusterKitNodeApi_ClusterManagement, Node {
  # The current cluster resources state
  resourceState: ClusterKitNodeApi_ResourceState

  # The current cluster release
  currentRelease: ClusterKitNodeApi_Release

  # The current cluster release
  currentMigration: ClusterKitNodeApi_Migration
  id: ID
}

# The compatible node template
type ClusterKitNodeApi_CompatibleTemplate implements IClusterKitNodeApi_CompatibleTemplate, Node {
  # the relation id
  __id: Int

  # the compatible release id
  compatibleReleaseId: Int

  # the parent release id
  releaseId: Int

  # the template code
  templateCode: String

  # the compatible release
  compatibleRelease: ClusterKitNodeApi_Release

  # the parent release
  release: ClusterKitNodeApi_Release
  id: ID
}

# The list of connected ClusterKitNodeApi_CompatibleTemplate
#  The compatible node template
type ClusterKitNodeApi_CompatibleTemplate_Connection implements IClusterKitNodeApi_CompatibleTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_CompatibleTemplate_Edge]
}

# The ClusterKitNodeApi_CompatibleTemplate in a connected list
#  The compatible node template
type ClusterKitNodeApi_CompatibleTemplate_Edge implements IClusterKitNodeApi_CompatibleTemplate_Edge {
  # A value to use with paging positioning
  cursor: String

  # The compatible node template
  node: ClusterKitNodeApi_CompatibleTemplate
}

input ClusterKitNodeApi_CompatibleTemplate_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_CompatibleTemplate_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_CompatibleTemplate_Filter_Input

  # id exactly equals to the parameter, id: the relation id
  id: Int

  # id not equals to the parameter, id: the relation id
  id_not: Int

  # id is less then the parameter, id: the relation id
  id_lt: Int

  # id is less then or equal to the parameter, id: the relation id
  id_lte: Int

  # id is greater then the parameter, id: the relation id
  id_gt: Int

  # id is greater then or equal to the parameter, id: the relation id
  id_gte: Int

  # compatibleReleaseId exactly equals to the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId: Int

  # compatibleReleaseId not equals to the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId_not: Int

  # compatibleReleaseId is less then the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId_lt: Int

  # compatibleReleaseId is less then or equal to the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId_lte: Int

  # compatibleReleaseId is greater then the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId_gt: Int

  # compatibleReleaseId is greater then or equal to the parameter, compatibleReleaseId: the compatible release id
  compatibleReleaseId_gte: Int

  # releaseId exactly equals to the parameter, releaseId: the parent release id
  releaseId: Int

  # releaseId not equals to the parameter, releaseId: the parent release id
  releaseId_not: Int

  # releaseId is less then the parameter, releaseId: the parent release id
  releaseId_lt: Int

  # releaseId is less then or equal to the parameter, releaseId: the parent release id
  releaseId_lte: Int

  # releaseId is greater then the parameter, releaseId: the parent release id
  releaseId_gt: Int

  # releaseId is greater then or equal to the parameter, releaseId: the parent release id
  releaseId_gte: Int

  # templateCode exactly equals to the parameter, templateCode: the template code
  templateCode: String

  # templateCode not equals to the parameter, templateCode: the template code
  templateCode_not: String

  # templateCode is a substring of the parameter, templateCode: the template code
  templateCode_in: String

  # templateCode is not a substring of the parameter, templateCode: the template code
  templateCode_not_in: String

  # templateCode contains the parameter as substring, templateCode: the template code
  templateCode_contains: String

  # templateCode doesn't contain the parameter as substring, templateCode: the template code
  templateCode_not_contains: String

  # templateCode starts with the parameter value, templateCode: the template code
  templateCode_starts_with: String

  # templateCode doesn't start with the parameter value, templateCode: the template code
  templateCode_not_starts_with: String

  # templateCode ends with the parameter value, templateCode: the template code
  templateCode_ends_with: String

  # templateCode doesn't end with the parameter value, templateCode: the template code
  templateCode_not_ends_with: String

  # templateCode lowercased equals the parameter, templateCode: the template code
  templateCode_l: String

  # templateCode lowercased doesn't equal the parameter, templateCode: the template code
  templateCode_l_not: String

  # templateCode lowercased is a substring of the parameter, templateCode: the template code
  templateCode_l_in: String

  # templateCode lowercased is not a substring of the parameter, templateCode: the template code
  templateCode_l_not_in: String

  # templateCode lowercased contains the parameter as substring, templateCode: the template code
  templateCode_l_contains: String

  # templateCode lowercased doesn't contain the parameter as substring, templateCode: the template code
  templateCode_l_not_contains: String

  # templateCode lowercased starts with the parameter value, templateCode: the template code
  templateCode_l_starts_with: String

  # templateCode lowercased doesn't start with the parameter value, templateCode: the template code
  templateCode_l_not_starts_with: String

  # templateCode lowercased ends with the parameter value, templateCode: the template code
  templateCode_l_ends_with: String

  # templateCode lowercased doesn't end with the parameter value, templateCode: the template code
  templateCode_l_not_ends_with: String
}

enum ClusterKitNodeApi_CompatibleTemplate_Sort {
  id_asc
  id_desc
  compatibleReleaseId_asc
  compatibleReleaseId_desc
  releaseId_asc
  releaseId_desc
  templateCode_asc
  templateCode_desc
}

# Publishes access to the authenticated user information
type ClusterKitNodeApi_CurrentUserApi implements IClusterKitNodeApi_CurrentUserApi, Node {
  # Authenticated user
  clusterKitUser: ClusterKitNodeApi_ClusterKitUserDescription

  # The current user privileges
  clusterKitUserPrivileges: [String]

  # The current application privileges
  clusterKitClientPrivileges: [String]
  id: ID
}

enum ClusterKitNodeApi_EnFeedType {
  Public
  Private
}

enum ClusterKitNodeApi_EnMigrationActorMigrationPosition {
  Source
  Destination
  PartiallyMigrated
  NoMigrationNeeded
  Broken
}

enum ClusterKitNodeApi_EnMigrationDirection {
  Upgrade
  Downgrade
  Stay
  Undefined
}

enum ClusterKitNodeApi_EnMigrationSide {
  Source
  Destination
}

enum ClusterKitNodeApi_EnMigrationState {
  Preparing
  Ready
  Failed
  Completed
  Rollbacked
}

enum ClusterKitNodeApi_EnMigratorPosition {
  New
  Merged
  Obsolete
}

enum ClusterKitNodeApi_EnReleaseState {
  Draft
  Ready
  Active
  Faulted
  Obsolete
}

enum ClusterKitNodeApi_EnResourcePosition {
  NotCreated
  Source
  Undefined
  Destination
  SourceAndDestination
  Obsolete
}

# The mutation error description
type ClusterKitNodeApi_ErrorDescription implements IClusterKitNodeApi_ErrorDescription, Node {
  # The error number
  number: Int

  # The related field name
  field: String

  # The error message
  message: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ErrorDescription
#  The mutation error description
type ClusterKitNodeApi_ErrorDescription_Connection implements IClusterKitNodeApi_ErrorDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ErrorDescription_Edge]
}

# The ClusterKitNodeApi_ErrorDescription in a connected list
#  The mutation error description
type ClusterKitNodeApi_ErrorDescription_Edge implements IClusterKitNodeApi_ErrorDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # The mutation error description
  node: ClusterKitNodeApi_ErrorDescription
}

input ClusterKitNodeApi_ErrorDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ErrorDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ErrorDescription_Filter_Input

  # number exactly equals to the parameter, number: The error number
  number: Int

  # number not equals to the parameter, number: The error number
  number_not: Int

  # number is less then the parameter, number: The error number
  number_lt: Int

  # number is less then or equal to the parameter, number: The error number
  number_lte: Int

  # number is greater then the parameter, number: The error number
  number_gt: Int

  # number is greater then or equal to the parameter, number: The error number
  number_gte: Int

  # field exactly equals to the parameter, field: The related field name
  field: String

  # field not equals to the parameter, field: The related field name
  field_not: String

  # field is a substring of the parameter, field: The related field name
  field_in: String

  # field is not a substring of the parameter, field: The related field name
  field_not_in: String

  # field contains the parameter as substring, field: The related field name
  field_contains: String

  # field doesn't contain the parameter as substring, field: The related field name
  field_not_contains: String

  # field starts with the parameter value, field: The related field name
  field_starts_with: String

  # field doesn't start with the parameter value, field: The related field name
  field_not_starts_with: String

  # field ends with the parameter value, field: The related field name
  field_ends_with: String

  # field doesn't end with the parameter value, field: The related field name
  field_not_ends_with: String

  # field lowercased equals the parameter, field: The related field name
  field_l: String

  # field lowercased doesn't equal the parameter, field: The related field name
  field_l_not: String

  # field lowercased is a substring of the parameter, field: The related field name
  field_l_in: String

  # field lowercased is not a substring of the parameter, field: The related field name
  field_l_not_in: String

  # field lowercased contains the parameter as substring, field: The related field name
  field_l_contains: String

  # field lowercased doesn't contain the parameter as substring, field: The related field name
  field_l_not_contains: String

  # field lowercased starts with the parameter value, field: The related field name
  field_l_starts_with: String

  # field lowercased doesn't start with the parameter value, field: The related field name
  field_l_not_starts_with: String

  # field lowercased ends with the parameter value, field: The related field name
  field_l_ends_with: String

  # field lowercased doesn't end with the parameter value, field: The related field name
  field_l_not_ends_with: String

  # message exactly equals to the parameter, message: The error message
  message: String

  # message not equals to the parameter, message: The error message
  message_not: String

  # message is a substring of the parameter, message: The error message
  message_in: String

  # message is not a substring of the parameter, message: The error message
  message_not_in: String

  # message contains the parameter as substring, message: The error message
  message_contains: String

  # message doesn't contain the parameter as substring, message: The error message
  message_not_contains: String

  # message starts with the parameter value, message: The error message
  message_starts_with: String

  # message doesn't start with the parameter value, message: The error message
  message_not_starts_with: String

  # message ends with the parameter value, message: The error message
  message_ends_with: String

  # message doesn't end with the parameter value, message: The error message
  message_not_ends_with: String

  # message lowercased equals the parameter, message: The error message
  message_l: String

  # message lowercased doesn't equal the parameter, message: The error message
  message_l_not: String

  # message lowercased is a substring of the parameter, message: The error message
  message_l_in: String

  # message lowercased is not a substring of the parameter, message: The error message
  message_l_not_in: String

  # message lowercased contains the parameter as substring, message: The error message
  message_l_contains: String

  # message lowercased doesn't contain the parameter as substring, message: The error message
  message_l_not_contains: String

  # message lowercased starts with the parameter value, message: The error message
  message_l_starts_with: String

  # message lowercased doesn't start with the parameter value, message: The error message
  message_l_not_starts_with: String

  # message lowercased ends with the parameter value, message: The error message
  message_l_ends_with: String

  # message lowercased doesn't end with the parameter value, message: The error message
  message_l_not_ends_with: String
}

enum ClusterKitNodeApi_ErrorDescription_Sort {
  number_asc
  number_desc
  field_asc
  field_desc
  message_asc
  message_desc
}

# The history record describing cluster migration
type ClusterKitNodeApi_Migration implements IClusterKitNodeApi_Migration, Node {
  # The migration id
  __id: Int

  # a value indicating that current migration is in process
  isActive: Boolean

  # the migration state
  state: ClusterKitNodeApi_EnMigrationState

  # the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection

  # the migration start time
  started: Date

  # the migration finish time
  finished: Date

  # the list of migration operations
  operations(filter: ClusterKitNodeApi_MigrationOperation_Filter_Input, sort: [ClusterKitNodeApi_MigrationOperation_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_MigrationOperation_Connection

  # the list of migration errors
  errors(filter: ClusterKitNodeApi_MigrationError_Filter_Input, sort: [ClusterKitNodeApi_MigrationError_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_MigrationError_Connection

  # the previous release id
  fromReleaseId: Int

  # the new release id
  toReleaseId: Int

  # the previous release
  fromRelease: ClusterKitNodeApi_Release

  # the new release
  toRelease: ClusterKitNodeApi_Release
  id: ID
}

# The MigrationActor state with active migration
type ClusterKitNodeApi_MigrationActorMigrationState implements IClusterKitNodeApi_MigrationActorMigrationState, Node {
  # the current migration position
  position: ClusterKitNodeApi_EnMigrationActorMigrationPosition

  # the list of migration states
  templateStates(filter: ClusterKitNodeApi_MigratorTemplateMigrationState_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplateMigrationState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_MigratorTemplateMigrationState_Connection
  id: ID
}

# The MigrationActor state with no active migration
type ClusterKitNodeApi_MigrationActorReleaseState implements IClusterKitNodeApi_MigrationActorReleaseState, Node {
  # the list of template states
  states(filter: ClusterKitNodeApi_MigratorTemplateReleaseState_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplateReleaseState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_MigratorTemplateReleaseState_Connection
  id: ID
}

# The error description during the resource check and/or migration
type ClusterKitNodeApi_MigrationError implements IClusterKitNodeApi_MigrationError, Node {
  # the error occurrence time
  created: Date

  # the resource name
  errorMessage: String

  # the error stack trace
  errorStackTrace: String

  # the migration id
  __id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: ClusterKitNodeApi_Release

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
  id: ID
}

# The list of connected ClusterKitNodeApi_MigrationError
#  The error description during the resource check and/or migration
type ClusterKitNodeApi_MigrationError_Connection implements IClusterKitNodeApi_MigrationError_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigrationError_Edge]
}

# The ClusterKitNodeApi_MigrationError in a connected list
#  The error description during the resource check and/or migration
type ClusterKitNodeApi_MigrationError_Edge implements IClusterKitNodeApi_MigrationError_Edge {
  # A value to use with paging positioning
  cursor: String

  # The error description during the resource check and/or migration
  node: ClusterKitNodeApi_MigrationError
}

input ClusterKitNodeApi_MigrationError_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigrationError_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigrationError_Filter_Input

  # created exactly equals to the parameter, created: the error occurrence time
  created: Date

  # created not equals to the parameter, created: the error occurrence time
  created_not: Date

  # created is less then the parameter, created: the error occurrence time
  created_lt: Date

  # created is less then or equal to the parameter, created: the error occurrence time
  created_lte: Date

  # created is greater then the parameter, created: the error occurrence time
  created_gt: Date

  # created is greater then or equal to the parameter, created: the error occurrence time
  created_gte: Date

  # errorMessage exactly equals to the parameter, errorMessage: the resource name
  errorMessage: String

  # errorMessage not equals to the parameter, errorMessage: the resource name
  errorMessage_not: String

  # errorMessage is a substring of the parameter, errorMessage: the resource name
  errorMessage_in: String

  # errorMessage is not a substring of the parameter, errorMessage: the resource name
  errorMessage_not_in: String

  # errorMessage contains the parameter as substring, errorMessage: the resource name
  errorMessage_contains: String

  # errorMessage doesn't contain the parameter as substring, errorMessage: the resource name
  errorMessage_not_contains: String

  # errorMessage starts with the parameter value, errorMessage: the resource name
  errorMessage_starts_with: String

  # errorMessage doesn't start with the parameter value, errorMessage: the resource name
  errorMessage_not_starts_with: String

  # errorMessage ends with the parameter value, errorMessage: the resource name
  errorMessage_ends_with: String

  # errorMessage doesn't end with the parameter value, errorMessage: the resource name
  errorMessage_not_ends_with: String

  # errorMessage lowercased equals the parameter, errorMessage: the resource name
  errorMessage_l: String

  # errorMessage lowercased doesn't equal the parameter, errorMessage: the resource name
  errorMessage_l_not: String

  # errorMessage lowercased is a substring of the parameter, errorMessage: the resource name
  errorMessage_l_in: String

  # errorMessage lowercased is not a substring of the parameter, errorMessage: the resource name
  errorMessage_l_not_in: String

  # errorMessage lowercased contains the parameter as substring, errorMessage: the resource name
  errorMessage_l_contains: String

  # errorMessage lowercased doesn't contain the parameter as substring, errorMessage: the resource name
  errorMessage_l_not_contains: String

  # errorMessage lowercased starts with the parameter value, errorMessage: the resource name
  errorMessage_l_starts_with: String

  # errorMessage lowercased doesn't start with the parameter value, errorMessage: the resource name
  errorMessage_l_not_starts_with: String

  # errorMessage lowercased ends with the parameter value, errorMessage: the resource name
  errorMessage_l_ends_with: String

  # errorMessage lowercased doesn't end with the parameter value, errorMessage: the resource name
  errorMessage_l_not_ends_with: String

  # errorStackTrace exactly equals to the parameter, errorStackTrace: the error stack trace
  errorStackTrace: String

  # errorStackTrace not equals to the parameter, errorStackTrace: the error stack trace
  errorStackTrace_not: String

  # errorStackTrace is a substring of the parameter, errorStackTrace: the error stack trace
  errorStackTrace_in: String

  # errorStackTrace is not a substring of the parameter, errorStackTrace: the error stack trace
  errorStackTrace_not_in: String

  # errorStackTrace contains the parameter as substring, errorStackTrace: the error stack trace
  errorStackTrace_contains: String

  # errorStackTrace doesn't contain the parameter as substring, errorStackTrace: the error stack trace
  errorStackTrace_not_contains: String

  # errorStackTrace starts with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_starts_with: String

  # errorStackTrace doesn't start with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_not_starts_with: String

  # errorStackTrace ends with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_ends_with: String

  # errorStackTrace doesn't end with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_not_ends_with: String

  # errorStackTrace lowercased equals the parameter, errorStackTrace: the error stack trace
  errorStackTrace_l: String

  # errorStackTrace lowercased doesn't equal the parameter, errorStackTrace: the error stack trace
  errorStackTrace_l_not: String

  # errorStackTrace lowercased is a substring of the parameter, errorStackTrace: the error stack trace
  errorStackTrace_l_in: String

  # errorStackTrace lowercased is not a substring of the parameter, errorStackTrace: the error stack trace
  errorStackTrace_l_not_in: String

  # errorStackTrace lowercased contains the parameter as substring, errorStackTrace: the error stack trace
  errorStackTrace_l_contains: String

  # errorStackTrace lowercased doesn't contain the parameter as substring, errorStackTrace: the error stack trace
  errorStackTrace_l_not_contains: String

  # errorStackTrace lowercased starts with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_l_starts_with: String

  # errorStackTrace lowercased doesn't start with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_l_not_starts_with: String

  # errorStackTrace lowercased ends with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_l_ends_with: String

  # errorStackTrace lowercased doesn't end with the parameter value, errorStackTrace: the error stack trace
  errorStackTrace_l_not_ends_with: String

  # id exactly equals to the parameter, id: the migration id
  id: Int

  # id not equals to the parameter, id: the migration id
  id_not: Int

  # id is less then the parameter, id: the migration id
  id_lt: Int

  # id is less then or equal to the parameter, id: the migration id
  id_lte: Int

  # id is greater then the parameter, id: the migration id
  id_gt: Int

  # id is greater then or equal to the parameter, id: the migration id
  id_gte: Int

  # migrationId exactly equals to the parameter, migrationId: the migration id
  migrationId: Int

  # migrationId not equals to the parameter, migrationId: the migration id
  migrationId_not: Int

  # migrationId is less then the parameter, migrationId: the migration id
  migrationId_lt: Int

  # migrationId is less then or equal to the parameter, migrationId: the migration id
  migrationId_lte: Int

  # migrationId is greater then the parameter, migrationId: the migration id
  migrationId_gt: Int

  # migrationId is greater then or equal to the parameter, migrationId: the migration id
  migrationId_gte: Int

  # releaseId exactly equals to the parameter, releaseId: the release id
  releaseId: Int

  # releaseId not equals to the parameter, releaseId: the release id
  releaseId_not: Int

  # releaseId is less then the parameter, releaseId: the release id
  releaseId_lt: Int

  # releaseId is less then or equal to the parameter, releaseId: the release id
  releaseId_lte: Int

  # releaseId is greater then the parameter, releaseId: the release id
  releaseId_gt: Int

  # releaseId is greater then or equal to the parameter, releaseId: the release id
  releaseId_gte: Int

  # migratorTemplateCode exactly equals to the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode: String

  # migratorTemplateCode not equals to the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not: String

  # migratorTemplateCode is a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_in: String

  # migratorTemplateCode is not a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_in: String

  # migratorTemplateCode contains the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_contains: String

  # migratorTemplateCode doesn't contain the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_contains: String

  # migratorTemplateCode starts with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_starts_with: String

  # migratorTemplateCode doesn't start with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_starts_with: String

  # migratorTemplateCode ends with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_ends_with: String

  # migratorTemplateCode doesn't end with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_ends_with: String

  # migratorTemplateCode lowercased equals the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l: String

  # migratorTemplateCode lowercased doesn't equal the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not: String

  # migratorTemplateCode lowercased is a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_in: String

  # migratorTemplateCode lowercased is not a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_in: String

  # migratorTemplateCode lowercased contains the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_contains: String

  # migratorTemplateCode lowercased doesn't contain the parameter as substring,
  # migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_contains: String

  # migratorTemplateCode lowercased starts with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_starts_with: String

  # migratorTemplateCode lowercased doesn't start with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_starts_with: String

  # migratorTemplateCode lowercased ends with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_ends_with: String

  # migratorTemplateCode lowercased doesn't end with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_ends_with: String

  # migratorTemplateName exactly equals to the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName: String

  # migratorTemplateName not equals to the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_not: String

  # migratorTemplateName is a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_in: String

  # migratorTemplateName is not a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_not_in: String

  # migratorTemplateName contains the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_contains: String

  # migratorTemplateName doesn't contain the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_not_contains: String

  # migratorTemplateName starts with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_starts_with: String

  # migratorTemplateName doesn't start with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_not_starts_with: String

  # migratorTemplateName ends with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_ends_with: String

  # migratorTemplateName doesn't end with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_not_ends_with: String

  # migratorTemplateName lowercased equals the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l: String

  # migratorTemplateName lowercased doesn't equal the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not: String

  # migratorTemplateName lowercased is a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_in: String

  # migratorTemplateName lowercased is not a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_in: String

  # migratorTemplateName lowercased contains the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_l_contains: String

  # migratorTemplateName lowercased doesn't contain the parameter as substring,
  # migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_contains: String

  # migratorTemplateName lowercased starts with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_starts_with: String

  # migratorTemplateName lowercased doesn't start with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_starts_with: String

  # migratorTemplateName lowercased ends with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_ends_with: String

  # migratorTemplateName lowercased doesn't end with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_ends_with: String

  # migratorTypeName exactly equals to the parameter, migratorTypeName: the migrator type name
  migratorTypeName: String

  # migratorTypeName not equals to the parameter, migratorTypeName: the migrator type name
  migratorTypeName_not: String

  # migratorTypeName is a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_in: String

  # migratorTypeName is not a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_not_in: String

  # migratorTypeName contains the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_contains: String

  # migratorTypeName doesn't contain the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_not_contains: String

  # migratorTypeName starts with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_starts_with: String

  # migratorTypeName doesn't start with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_not_starts_with: String

  # migratorTypeName ends with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_ends_with: String

  # migratorTypeName doesn't end with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_not_ends_with: String

  # migratorTypeName lowercased equals the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l: String

  # migratorTypeName lowercased doesn't equal the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_not: String

  # migratorTypeName lowercased is a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_in: String

  # migratorTypeName lowercased is not a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_not_in: String

  # migratorTypeName lowercased contains the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_l_contains: String

  # migratorTypeName lowercased doesn't contain the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_l_not_contains: String

  # migratorTypeName lowercased starts with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_starts_with: String

  # migratorTypeName lowercased doesn't start with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_not_starts_with: String

  # migratorTypeName lowercased ends with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_ends_with: String

  # migratorTypeName lowercased doesn't end with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_not_ends_with: String

  # migratorName exactly equals to the parameter, migratorName: the migrator name
  migratorName: String

  # migratorName not equals to the parameter, migratorName: the migrator name
  migratorName_not: String

  # migratorName is a substring of the parameter, migratorName: the migrator name
  migratorName_in: String

  # migratorName is not a substring of the parameter, migratorName: the migrator name
  migratorName_not_in: String

  # migratorName contains the parameter as substring, migratorName: the migrator name
  migratorName_contains: String

  # migratorName doesn't contain the parameter as substring, migratorName: the migrator name
  migratorName_not_contains: String

  # migratorName starts with the parameter value, migratorName: the migrator name
  migratorName_starts_with: String

  # migratorName doesn't start with the parameter value, migratorName: the migrator name
  migratorName_not_starts_with: String

  # migratorName ends with the parameter value, migratorName: the migrator name
  migratorName_ends_with: String

  # migratorName doesn't end with the parameter value, migratorName: the migrator name
  migratorName_not_ends_with: String

  # migratorName lowercased equals the parameter, migratorName: the migrator name
  migratorName_l: String

  # migratorName lowercased doesn't equal the parameter, migratorName: the migrator name
  migratorName_l_not: String

  # migratorName lowercased is a substring of the parameter, migratorName: the migrator name
  migratorName_l_in: String

  # migratorName lowercased is not a substring of the parameter, migratorName: the migrator name
  migratorName_l_not_in: String

  # migratorName lowercased contains the parameter as substring, migratorName: the migrator name
  migratorName_l_contains: String

  # migratorName lowercased doesn't contain the parameter as substring, migratorName: the migrator name
  migratorName_l_not_contains: String

  # migratorName lowercased starts with the parameter value, migratorName: the migrator name
  migratorName_l_starts_with: String

  # migratorName lowercased doesn't start with the parameter value, migratorName: the migrator name
  migratorName_l_not_starts_with: String

  # migratorName lowercased ends with the parameter value, migratorName: the migrator name
  migratorName_l_ends_with: String

  # migratorName lowercased doesn't end with the parameter value, migratorName: the migrator name
  migratorName_l_not_ends_with: String

  # resourceCode exactly equals to the parameter, resourceCode: the resource code
  resourceCode: String

  # resourceCode not equals to the parameter, resourceCode: the resource code
  resourceCode_not: String

  # resourceCode is a substring of the parameter, resourceCode: the resource code
  resourceCode_in: String

  # resourceCode is not a substring of the parameter, resourceCode: the resource code
  resourceCode_not_in: String

  # resourceCode contains the parameter as substring, resourceCode: the resource code
  resourceCode_contains: String

  # resourceCode doesn't contain the parameter as substring, resourceCode: the resource code
  resourceCode_not_contains: String

  # resourceCode starts with the parameter value, resourceCode: the resource code
  resourceCode_starts_with: String

  # resourceCode doesn't start with the parameter value, resourceCode: the resource code
  resourceCode_not_starts_with: String

  # resourceCode ends with the parameter value, resourceCode: the resource code
  resourceCode_ends_with: String

  # resourceCode doesn't end with the parameter value, resourceCode: the resource code
  resourceCode_not_ends_with: String

  # resourceCode lowercased equals the parameter, resourceCode: the resource code
  resourceCode_l: String

  # resourceCode lowercased doesn't equal the parameter, resourceCode: the resource code
  resourceCode_l_not: String

  # resourceCode lowercased is a substring of the parameter, resourceCode: the resource code
  resourceCode_l_in: String

  # resourceCode lowercased is not a substring of the parameter, resourceCode: the resource code
  resourceCode_l_not_in: String

  # resourceCode lowercased contains the parameter as substring, resourceCode: the resource code
  resourceCode_l_contains: String

  # resourceCode lowercased doesn't contain the parameter as substring, resourceCode: the resource code
  resourceCode_l_not_contains: String

  # resourceCode lowercased starts with the parameter value, resourceCode: the resource code
  resourceCode_l_starts_with: String

  # resourceCode lowercased doesn't start with the parameter value, resourceCode: the resource code
  resourceCode_l_not_starts_with: String

  # resourceCode lowercased ends with the parameter value, resourceCode: the resource code
  resourceCode_l_ends_with: String

  # resourceCode lowercased doesn't end with the parameter value, resourceCode: the resource code
  resourceCode_l_not_ends_with: String

  # resourceName exactly equals to the parameter, resourceName: the resource name
  resourceName: String

  # resourceName not equals to the parameter, resourceName: the resource name
  resourceName_not: String

  # resourceName is a substring of the parameter, resourceName: the resource name
  resourceName_in: String

  # resourceName is not a substring of the parameter, resourceName: the resource name
  resourceName_not_in: String

  # resourceName contains the parameter as substring, resourceName: the resource name
  resourceName_contains: String

  # resourceName doesn't contain the parameter as substring, resourceName: the resource name
  resourceName_not_contains: String

  # resourceName starts with the parameter value, resourceName: the resource name
  resourceName_starts_with: String

  # resourceName doesn't start with the parameter value, resourceName: the resource name
  resourceName_not_starts_with: String

  # resourceName ends with the parameter value, resourceName: the resource name
  resourceName_ends_with: String

  # resourceName doesn't end with the parameter value, resourceName: the resource name
  resourceName_not_ends_with: String

  # resourceName lowercased equals the parameter, resourceName: the resource name
  resourceName_l: String

  # resourceName lowercased doesn't equal the parameter, resourceName: the resource name
  resourceName_l_not: String

  # resourceName lowercased is a substring of the parameter, resourceName: the resource name
  resourceName_l_in: String

  # resourceName lowercased is not a substring of the parameter, resourceName: the resource name
  resourceName_l_not_in: String

  # resourceName lowercased contains the parameter as substring, resourceName: the resource name
  resourceName_l_contains: String

  # resourceName lowercased doesn't contain the parameter as substring, resourceName: the resource name
  resourceName_l_not_contains: String

  # resourceName lowercased starts with the parameter value, resourceName: the resource name
  resourceName_l_starts_with: String

  # resourceName lowercased doesn't start with the parameter value, resourceName: the resource name
  resourceName_l_not_starts_with: String

  # resourceName lowercased ends with the parameter value, resourceName: the resource name
  resourceName_l_ends_with: String

  # resourceName lowercased doesn't end with the parameter value, resourceName: the resource name
  resourceName_l_not_ends_with: String
}

# The error description during the resource check and/or migration
input ClusterKitNodeApi_MigrationError_Input {
  # the error occurrence time
  created: Date

  # the resource name
  errorMessage: String

  # the error stack trace
  errorStackTrace: String

  # the migration id
  id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: ClusterKitNodeApi_Release_Input

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
}

enum ClusterKitNodeApi_MigrationError_Sort {
  created_asc
  created_desc
  errorMessage_asc
  errorMessage_desc
  errorStackTrace_asc
  errorStackTrace_desc
  id_asc
  id_desc
  migrationId_asc
  migrationId_desc
  releaseId_asc
  releaseId_desc
  migratorTemplateCode_asc
  migratorTemplateCode_desc
  migratorTemplateName_asc
  migratorTemplateName_desc
  migratorTypeName_asc
  migratorTypeName_desc
  migratorName_asc
  migratorName_desc
  resourceCode_asc
  resourceCode_desc
  resourceName_asc
  resourceName_desc
}

# The cluster migration operation
type ClusterKitNodeApi_MigrationOperation implements IClusterKitNodeApi_MigrationOperation, Node {
  # the operation execution start time
  started: Date

  # the operation execution finish time
  finished: Date

  # the source migration point
  sourcePoint: String

  # the destination migration point
  destinationPoint: String

  # the execution error id
  errorId: Int

  # the execution error
  error: ClusterKitNodeApi_MigrationError

  # the migration id
  __id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: ClusterKitNodeApi_Release

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
  id: ID
}

# The list of connected ClusterKitNodeApi_MigrationOperation
#  The cluster migration operation
type ClusterKitNodeApi_MigrationOperation_Connection implements IClusterKitNodeApi_MigrationOperation_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigrationOperation_Edge]
}

# The ClusterKitNodeApi_MigrationOperation in a connected list
#  The cluster migration operation
type ClusterKitNodeApi_MigrationOperation_Edge implements IClusterKitNodeApi_MigrationOperation_Edge {
  # A value to use with paging positioning
  cursor: String

  # The cluster migration operation
  node: ClusterKitNodeApi_MigrationOperation
}

input ClusterKitNodeApi_MigrationOperation_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigrationOperation_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigrationOperation_Filter_Input

  # started exactly equals to the parameter, started: the operation execution start time
  started: Date

  # started not equals to the parameter, started: the operation execution start time
  started_not: Date

  # started is less then the parameter, started: the operation execution start time
  started_lt: Date

  # started is less then or equal to the parameter, started: the operation execution start time
  started_lte: Date

  # started is greater then the parameter, started: the operation execution start time
  started_gt: Date

  # started is greater then or equal to the parameter, started: the operation execution start time
  started_gte: Date

  # finished exactly equals to the parameter, finished: the operation execution finish time
  finished: Date

  # finished not equals to the parameter, finished: the operation execution finish time
  finished_not: Date

  # finished is less then the parameter, finished: the operation execution finish time
  finished_lt: Date

  # finished is less then or equal to the parameter, finished: the operation execution finish time
  finished_lte: Date

  # finished is greater then the parameter, finished: the operation execution finish time
  finished_gt: Date

  # finished is greater then or equal to the parameter, finished: the operation execution finish time
  finished_gte: Date

  # sourcePoint exactly equals to the parameter, sourcePoint: the source migration point
  sourcePoint: String

  # sourcePoint not equals to the parameter, sourcePoint: the source migration point
  sourcePoint_not: String

  # sourcePoint is a substring of the parameter, sourcePoint: the source migration point
  sourcePoint_in: String

  # sourcePoint is not a substring of the parameter, sourcePoint: the source migration point
  sourcePoint_not_in: String

  # sourcePoint contains the parameter as substring, sourcePoint: the source migration point
  sourcePoint_contains: String

  # sourcePoint doesn't contain the parameter as substring, sourcePoint: the source migration point
  sourcePoint_not_contains: String

  # sourcePoint starts with the parameter value, sourcePoint: the source migration point
  sourcePoint_starts_with: String

  # sourcePoint doesn't start with the parameter value, sourcePoint: the source migration point
  sourcePoint_not_starts_with: String

  # sourcePoint ends with the parameter value, sourcePoint: the source migration point
  sourcePoint_ends_with: String

  # sourcePoint doesn't end with the parameter value, sourcePoint: the source migration point
  sourcePoint_not_ends_with: String

  # sourcePoint lowercased equals the parameter, sourcePoint: the source migration point
  sourcePoint_l: String

  # sourcePoint lowercased doesn't equal the parameter, sourcePoint: the source migration point
  sourcePoint_l_not: String

  # sourcePoint lowercased is a substring of the parameter, sourcePoint: the source migration point
  sourcePoint_l_in: String

  # sourcePoint lowercased is not a substring of the parameter, sourcePoint: the source migration point
  sourcePoint_l_not_in: String

  # sourcePoint lowercased contains the parameter as substring, sourcePoint: the source migration point
  sourcePoint_l_contains: String

  # sourcePoint lowercased doesn't contain the parameter as substring, sourcePoint: the source migration point
  sourcePoint_l_not_contains: String

  # sourcePoint lowercased starts with the parameter value, sourcePoint: the source migration point
  sourcePoint_l_starts_with: String

  # sourcePoint lowercased doesn't start with the parameter value, sourcePoint: the source migration point
  sourcePoint_l_not_starts_with: String

  # sourcePoint lowercased ends with the parameter value, sourcePoint: the source migration point
  sourcePoint_l_ends_with: String

  # sourcePoint lowercased doesn't end with the parameter value, sourcePoint: the source migration point
  sourcePoint_l_not_ends_with: String

  # destinationPoint exactly equals to the parameter, destinationPoint: the destination migration point
  destinationPoint: String

  # destinationPoint not equals to the parameter, destinationPoint: the destination migration point
  destinationPoint_not: String

  # destinationPoint is a substring of the parameter, destinationPoint: the destination migration point
  destinationPoint_in: String

  # destinationPoint is not a substring of the parameter, destinationPoint: the destination migration point
  destinationPoint_not_in: String

  # destinationPoint contains the parameter as substring, destinationPoint: the destination migration point
  destinationPoint_contains: String

  # destinationPoint doesn't contain the parameter as substring, destinationPoint: the destination migration point
  destinationPoint_not_contains: String

  # destinationPoint starts with the parameter value, destinationPoint: the destination migration point
  destinationPoint_starts_with: String

  # destinationPoint doesn't start with the parameter value, destinationPoint: the destination migration point
  destinationPoint_not_starts_with: String

  # destinationPoint ends with the parameter value, destinationPoint: the destination migration point
  destinationPoint_ends_with: String

  # destinationPoint doesn't end with the parameter value, destinationPoint: the destination migration point
  destinationPoint_not_ends_with: String

  # destinationPoint lowercased equals the parameter, destinationPoint: the destination migration point
  destinationPoint_l: String

  # destinationPoint lowercased doesn't equal the parameter, destinationPoint: the destination migration point
  destinationPoint_l_not: String

  # destinationPoint lowercased is a substring of the parameter, destinationPoint: the destination migration point
  destinationPoint_l_in: String

  # destinationPoint lowercased is not a substring of the parameter, destinationPoint: the destination migration point
  destinationPoint_l_not_in: String

  # destinationPoint lowercased contains the parameter as substring, destinationPoint: the destination migration point
  destinationPoint_l_contains: String

  # destinationPoint lowercased doesn't contain the parameter as substring, destinationPoint: the destination migration point
  destinationPoint_l_not_contains: String

  # destinationPoint lowercased starts with the parameter value, destinationPoint: the destination migration point
  destinationPoint_l_starts_with: String

  # destinationPoint lowercased doesn't start with the parameter value, destinationPoint: the destination migration point
  destinationPoint_l_not_starts_with: String

  # destinationPoint lowercased ends with the parameter value, destinationPoint: the destination migration point
  destinationPoint_l_ends_with: String

  # destinationPoint lowercased doesn't end with the parameter value, destinationPoint: the destination migration point
  destinationPoint_l_not_ends_with: String

  # errorId exactly equals to the parameter, errorId: the execution error id
  errorId: Int

  # errorId not equals to the parameter, errorId: the execution error id
  errorId_not: Int

  # errorId is less then the parameter, errorId: the execution error id
  errorId_lt: Int

  # errorId is less then or equal to the parameter, errorId: the execution error id
  errorId_lte: Int

  # errorId is greater then the parameter, errorId: the execution error id
  errorId_gt: Int

  # errorId is greater then or equal to the parameter, errorId: the execution error id
  errorId_gte: Int

  # id exactly equals to the parameter, id: the migration id
  id: Int

  # id not equals to the parameter, id: the migration id
  id_not: Int

  # id is less then the parameter, id: the migration id
  id_lt: Int

  # id is less then or equal to the parameter, id: the migration id
  id_lte: Int

  # id is greater then the parameter, id: the migration id
  id_gt: Int

  # id is greater then or equal to the parameter, id: the migration id
  id_gte: Int

  # migrationId exactly equals to the parameter, migrationId: the migration id
  migrationId: Int

  # migrationId not equals to the parameter, migrationId: the migration id
  migrationId_not: Int

  # migrationId is less then the parameter, migrationId: the migration id
  migrationId_lt: Int

  # migrationId is less then or equal to the parameter, migrationId: the migration id
  migrationId_lte: Int

  # migrationId is greater then the parameter, migrationId: the migration id
  migrationId_gt: Int

  # migrationId is greater then or equal to the parameter, migrationId: the migration id
  migrationId_gte: Int

  # releaseId exactly equals to the parameter, releaseId: the release id
  releaseId: Int

  # releaseId not equals to the parameter, releaseId: the release id
  releaseId_not: Int

  # releaseId is less then the parameter, releaseId: the release id
  releaseId_lt: Int

  # releaseId is less then or equal to the parameter, releaseId: the release id
  releaseId_lte: Int

  # releaseId is greater then the parameter, releaseId: the release id
  releaseId_gt: Int

  # releaseId is greater then or equal to the parameter, releaseId: the release id
  releaseId_gte: Int

  # migratorTemplateCode exactly equals to the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode: String

  # migratorTemplateCode not equals to the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not: String

  # migratorTemplateCode is a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_in: String

  # migratorTemplateCode is not a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_in: String

  # migratorTemplateCode contains the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_contains: String

  # migratorTemplateCode doesn't contain the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_contains: String

  # migratorTemplateCode starts with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_starts_with: String

  # migratorTemplateCode doesn't start with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_starts_with: String

  # migratorTemplateCode ends with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_ends_with: String

  # migratorTemplateCode doesn't end with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_not_ends_with: String

  # migratorTemplateCode lowercased equals the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l: String

  # migratorTemplateCode lowercased doesn't equal the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not: String

  # migratorTemplateCode lowercased is a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_in: String

  # migratorTemplateCode lowercased is not a substring of the parameter, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_in: String

  # migratorTemplateCode lowercased contains the parameter as substring, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_contains: String

  # migratorTemplateCode lowercased doesn't contain the parameter as substring,
  # migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_contains: String

  # migratorTemplateCode lowercased starts with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_starts_with: String

  # migratorTemplateCode lowercased doesn't start with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_starts_with: String

  # migratorTemplateCode lowercased ends with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_ends_with: String

  # migratorTemplateCode lowercased doesn't end with the parameter value, migratorTemplateCode: the migrator template code
  migratorTemplateCode_l_not_ends_with: String

  # migratorTemplateName exactly equals to the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName: String

  # migratorTemplateName not equals to the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_not: String

  # migratorTemplateName is a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_in: String

  # migratorTemplateName is not a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_not_in: String

  # migratorTemplateName contains the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_contains: String

  # migratorTemplateName doesn't contain the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_not_contains: String

  # migratorTemplateName starts with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_starts_with: String

  # migratorTemplateName doesn't start with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_not_starts_with: String

  # migratorTemplateName ends with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_ends_with: String

  # migratorTemplateName doesn't end with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_not_ends_with: String

  # migratorTemplateName lowercased equals the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l: String

  # migratorTemplateName lowercased doesn't equal the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not: String

  # migratorTemplateName lowercased is a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_in: String

  # migratorTemplateName lowercased is not a substring of the parameter, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_in: String

  # migratorTemplateName lowercased contains the parameter as substring, migratorTemplateName: the migrator template name
  migratorTemplateName_l_contains: String

  # migratorTemplateName lowercased doesn't contain the parameter as substring,
  # migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_contains: String

  # migratorTemplateName lowercased starts with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_starts_with: String

  # migratorTemplateName lowercased doesn't start with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_starts_with: String

  # migratorTemplateName lowercased ends with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_ends_with: String

  # migratorTemplateName lowercased doesn't end with the parameter value, migratorTemplateName: the migrator template name
  migratorTemplateName_l_not_ends_with: String

  # migratorTypeName exactly equals to the parameter, migratorTypeName: the migrator type name
  migratorTypeName: String

  # migratorTypeName not equals to the parameter, migratorTypeName: the migrator type name
  migratorTypeName_not: String

  # migratorTypeName is a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_in: String

  # migratorTypeName is not a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_not_in: String

  # migratorTypeName contains the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_contains: String

  # migratorTypeName doesn't contain the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_not_contains: String

  # migratorTypeName starts with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_starts_with: String

  # migratorTypeName doesn't start with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_not_starts_with: String

  # migratorTypeName ends with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_ends_with: String

  # migratorTypeName doesn't end with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_not_ends_with: String

  # migratorTypeName lowercased equals the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l: String

  # migratorTypeName lowercased doesn't equal the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_not: String

  # migratorTypeName lowercased is a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_in: String

  # migratorTypeName lowercased is not a substring of the parameter, migratorTypeName: the migrator type name
  migratorTypeName_l_not_in: String

  # migratorTypeName lowercased contains the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_l_contains: String

  # migratorTypeName lowercased doesn't contain the parameter as substring, migratorTypeName: the migrator type name
  migratorTypeName_l_not_contains: String

  # migratorTypeName lowercased starts with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_starts_with: String

  # migratorTypeName lowercased doesn't start with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_not_starts_with: String

  # migratorTypeName lowercased ends with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_ends_with: String

  # migratorTypeName lowercased doesn't end with the parameter value, migratorTypeName: the migrator type name
  migratorTypeName_l_not_ends_with: String

  # migratorName exactly equals to the parameter, migratorName: the migrator name
  migratorName: String

  # migratorName not equals to the parameter, migratorName: the migrator name
  migratorName_not: String

  # migratorName is a substring of the parameter, migratorName: the migrator name
  migratorName_in: String

  # migratorName is not a substring of the parameter, migratorName: the migrator name
  migratorName_not_in: String

  # migratorName contains the parameter as substring, migratorName: the migrator name
  migratorName_contains: String

  # migratorName doesn't contain the parameter as substring, migratorName: the migrator name
  migratorName_not_contains: String

  # migratorName starts with the parameter value, migratorName: the migrator name
  migratorName_starts_with: String

  # migratorName doesn't start with the parameter value, migratorName: the migrator name
  migratorName_not_starts_with: String

  # migratorName ends with the parameter value, migratorName: the migrator name
  migratorName_ends_with: String

  # migratorName doesn't end with the parameter value, migratorName: the migrator name
  migratorName_not_ends_with: String

  # migratorName lowercased equals the parameter, migratorName: the migrator name
  migratorName_l: String

  # migratorName lowercased doesn't equal the parameter, migratorName: the migrator name
  migratorName_l_not: String

  # migratorName lowercased is a substring of the parameter, migratorName: the migrator name
  migratorName_l_in: String

  # migratorName lowercased is not a substring of the parameter, migratorName: the migrator name
  migratorName_l_not_in: String

  # migratorName lowercased contains the parameter as substring, migratorName: the migrator name
  migratorName_l_contains: String

  # migratorName lowercased doesn't contain the parameter as substring, migratorName: the migrator name
  migratorName_l_not_contains: String

  # migratorName lowercased starts with the parameter value, migratorName: the migrator name
  migratorName_l_starts_with: String

  # migratorName lowercased doesn't start with the parameter value, migratorName: the migrator name
  migratorName_l_not_starts_with: String

  # migratorName lowercased ends with the parameter value, migratorName: the migrator name
  migratorName_l_ends_with: String

  # migratorName lowercased doesn't end with the parameter value, migratorName: the migrator name
  migratorName_l_not_ends_with: String

  # resourceCode exactly equals to the parameter, resourceCode: the resource code
  resourceCode: String

  # resourceCode not equals to the parameter, resourceCode: the resource code
  resourceCode_not: String

  # resourceCode is a substring of the parameter, resourceCode: the resource code
  resourceCode_in: String

  # resourceCode is not a substring of the parameter, resourceCode: the resource code
  resourceCode_not_in: String

  # resourceCode contains the parameter as substring, resourceCode: the resource code
  resourceCode_contains: String

  # resourceCode doesn't contain the parameter as substring, resourceCode: the resource code
  resourceCode_not_contains: String

  # resourceCode starts with the parameter value, resourceCode: the resource code
  resourceCode_starts_with: String

  # resourceCode doesn't start with the parameter value, resourceCode: the resource code
  resourceCode_not_starts_with: String

  # resourceCode ends with the parameter value, resourceCode: the resource code
  resourceCode_ends_with: String

  # resourceCode doesn't end with the parameter value, resourceCode: the resource code
  resourceCode_not_ends_with: String

  # resourceCode lowercased equals the parameter, resourceCode: the resource code
  resourceCode_l: String

  # resourceCode lowercased doesn't equal the parameter, resourceCode: the resource code
  resourceCode_l_not: String

  # resourceCode lowercased is a substring of the parameter, resourceCode: the resource code
  resourceCode_l_in: String

  # resourceCode lowercased is not a substring of the parameter, resourceCode: the resource code
  resourceCode_l_not_in: String

  # resourceCode lowercased contains the parameter as substring, resourceCode: the resource code
  resourceCode_l_contains: String

  # resourceCode lowercased doesn't contain the parameter as substring, resourceCode: the resource code
  resourceCode_l_not_contains: String

  # resourceCode lowercased starts with the parameter value, resourceCode: the resource code
  resourceCode_l_starts_with: String

  # resourceCode lowercased doesn't start with the parameter value, resourceCode: the resource code
  resourceCode_l_not_starts_with: String

  # resourceCode lowercased ends with the parameter value, resourceCode: the resource code
  resourceCode_l_ends_with: String

  # resourceCode lowercased doesn't end with the parameter value, resourceCode: the resource code
  resourceCode_l_not_ends_with: String

  # resourceName exactly equals to the parameter, resourceName: the resource name
  resourceName: String

  # resourceName not equals to the parameter, resourceName: the resource name
  resourceName_not: String

  # resourceName is a substring of the parameter, resourceName: the resource name
  resourceName_in: String

  # resourceName is not a substring of the parameter, resourceName: the resource name
  resourceName_not_in: String

  # resourceName contains the parameter as substring, resourceName: the resource name
  resourceName_contains: String

  # resourceName doesn't contain the parameter as substring, resourceName: the resource name
  resourceName_not_contains: String

  # resourceName starts with the parameter value, resourceName: the resource name
  resourceName_starts_with: String

  # resourceName doesn't start with the parameter value, resourceName: the resource name
  resourceName_not_starts_with: String

  # resourceName ends with the parameter value, resourceName: the resource name
  resourceName_ends_with: String

  # resourceName doesn't end with the parameter value, resourceName: the resource name
  resourceName_not_ends_with: String

  # resourceName lowercased equals the parameter, resourceName: the resource name
  resourceName_l: String

  # resourceName lowercased doesn't equal the parameter, resourceName: the resource name
  resourceName_l_not: String

  # resourceName lowercased is a substring of the parameter, resourceName: the resource name
  resourceName_l_in: String

  # resourceName lowercased is not a substring of the parameter, resourceName: the resource name
  resourceName_l_not_in: String

  # resourceName lowercased contains the parameter as substring, resourceName: the resource name
  resourceName_l_contains: String

  # resourceName lowercased doesn't contain the parameter as substring, resourceName: the resource name
  resourceName_l_not_contains: String

  # resourceName lowercased starts with the parameter value, resourceName: the resource name
  resourceName_l_starts_with: String

  # resourceName lowercased doesn't start with the parameter value, resourceName: the resource name
  resourceName_l_not_starts_with: String

  # resourceName lowercased ends with the parameter value, resourceName: the resource name
  resourceName_l_ends_with: String

  # resourceName lowercased doesn't end with the parameter value, resourceName: the resource name
  resourceName_l_not_ends_with: String
}

# The cluster migration operation
input ClusterKitNodeApi_MigrationOperation_Input {
  # the operation execution start time
  started: Date

  # the operation execution finish time
  finished: Date

  # the source migration point
  sourcePoint: String

  # the destination migration point
  destinationPoint: String

  # the execution error id
  errorId: Int

  # the execution error
  error: ClusterKitNodeApi_MigrationError_Input

  # the migration id
  id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: ClusterKitNodeApi_Release_Input

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
}

enum ClusterKitNodeApi_MigrationOperation_Sort {
  started_asc
  started_desc
  finished_asc
  finished_desc
  sourcePoint_asc
  sourcePoint_desc
  destinationPoint_asc
  destinationPoint_desc
  errorId_asc
  errorId_desc
  id_asc
  id_desc
  migrationId_asc
  migrationId_desc
  releaseId_asc
  releaseId_desc
  migratorTemplateCode_asc
  migratorTemplateCode_desc
  migratorTemplateName_asc
  migratorTemplateName_desc
  migratorTypeName_asc
  migratorTypeName_desc
  migratorName_asc
  migratorName_desc
  resourceCode_asc
  resourceCode_desc
  resourceName_asc
  resourceName_desc
}

# The list of connected ClusterKitNodeApi_Migration
#  The history record describing cluster migration
type ClusterKitNodeApi_Migration_Connection implements IClusterKitNodeApi_Migration_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_Migration_Edge]
}

# The ClusterKitNodeApi_Migration in a connected list
#  The history record describing cluster migration
type ClusterKitNodeApi_Migration_Edge implements IClusterKitNodeApi_Migration_Edge {
  # A value to use with paging positioning
  cursor: String

  # The history record describing cluster migration
  node: ClusterKitNodeApi_Migration
}

input ClusterKitNodeApi_Migration_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_Migration_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_Migration_Filter_Input

  # id exactly equals to the parameter, id: The migration id
  id: Int

  # id not equals to the parameter, id: The migration id
  id_not: Int

  # id is less then the parameter, id: The migration id
  id_lt: Int

  # id is less then or equal to the parameter, id: The migration id
  id_lte: Int

  # id is greater then the parameter, id: The migration id
  id_gt: Int

  # id is greater then or equal to the parameter, id: The migration id
  id_gte: Int

  # isActive exactly equals to the parameter, isActive: a value indicating that current migration is in process
  isActive: Boolean

  # isActive not equals to the parameter, isActive: a value indicating that current migration is in process
  isActive_not: Boolean

  # state exactly equals to the parameter, state: the migration state
  state: ClusterKitNodeApi_EnMigrationState

  # state not equals to the parameter, state: the migration state
  state_not: ClusterKitNodeApi_EnMigrationState

  # direction exactly equals to the parameter, direction: the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection

  # direction not equals to the parameter, direction: the migration direction
  direction_not: ClusterKitNodeApi_EnMigrationDirection

  # started exactly equals to the parameter, started: the migration start time
  started: Date

  # started not equals to the parameter, started: the migration start time
  started_not: Date

  # started is less then the parameter, started: the migration start time
  started_lt: Date

  # started is less then or equal to the parameter, started: the migration start time
  started_lte: Date

  # started is greater then the parameter, started: the migration start time
  started_gt: Date

  # started is greater then or equal to the parameter, started: the migration start time
  started_gte: Date

  # finished exactly equals to the parameter, finished: the migration finish time
  finished: Date

  # finished not equals to the parameter, finished: the migration finish time
  finished_not: Date

  # finished is less then the parameter, finished: the migration finish time
  finished_lt: Date

  # finished is less then or equal to the parameter, finished: the migration finish time
  finished_lte: Date

  # finished is greater then the parameter, finished: the migration finish time
  finished_gt: Date

  # finished is greater then or equal to the parameter, finished: the migration finish time
  finished_gte: Date

  # fromReleaseId exactly equals to the parameter, fromReleaseId: the previous release id
  fromReleaseId: Int

  # fromReleaseId not equals to the parameter, fromReleaseId: the previous release id
  fromReleaseId_not: Int

  # fromReleaseId is less then the parameter, fromReleaseId: the previous release id
  fromReleaseId_lt: Int

  # fromReleaseId is less then or equal to the parameter, fromReleaseId: the previous release id
  fromReleaseId_lte: Int

  # fromReleaseId is greater then the parameter, fromReleaseId: the previous release id
  fromReleaseId_gt: Int

  # fromReleaseId is greater then or equal to the parameter, fromReleaseId: the previous release id
  fromReleaseId_gte: Int

  # toReleaseId exactly equals to the parameter, toReleaseId: the new release id
  toReleaseId: Int

  # toReleaseId not equals to the parameter, toReleaseId: the new release id
  toReleaseId_not: Int

  # toReleaseId is less then the parameter, toReleaseId: the new release id
  toReleaseId_lt: Int

  # toReleaseId is less then or equal to the parameter, toReleaseId: the new release id
  toReleaseId_lte: Int

  # toReleaseId is greater then the parameter, toReleaseId: the new release id
  toReleaseId_gt: Int

  # toReleaseId is greater then or equal to the parameter, toReleaseId: the new release id
  toReleaseId_gte: Int
}

enum ClusterKitNodeApi_Migration_Sort {
  id_asc
  id_desc
  isActive_asc
  isActive_desc
  state_asc
  state_desc
  direction_asc
  direction_desc
  started_asc
  started_desc
  finished_asc
  finished_desc
  fromReleaseId_asc
  fromReleaseId_desc
  toReleaseId_asc
  toReleaseId_desc
}

# The migrator state according to the migration
type ClusterKitNodeApi_MigratorMigrationState implements IClusterKitNodeApi_MigratorMigrationState, Node {
  # the migrator type name
  typeName: String

  # the migrator name
  name: String

  # the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # the list of resources states
  resources(filter: ClusterKitNodeApi_ResourceMigrationState_Filter_Input, sort: [ClusterKitNodeApi_ResourceMigrationState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_ResourceMigrationState_Connection

  # the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection
  id: ID
}

# The list of connected ClusterKitNodeApi_MigratorMigrationState
#  The migrator state according to the migration
type ClusterKitNodeApi_MigratorMigrationState_Connection implements IClusterKitNodeApi_MigratorMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigratorMigrationState_Edge]
}

# The ClusterKitNodeApi_MigratorMigrationState in a connected list
#  The migrator state according to the migration
type ClusterKitNodeApi_MigratorMigrationState_Edge implements IClusterKitNodeApi_MigratorMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The migrator state according to the migration
  node: ClusterKitNodeApi_MigratorMigrationState
}

input ClusterKitNodeApi_MigratorMigrationState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigratorMigrationState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigratorMigrationState_Filter_Input

  # typeName exactly equals to the parameter, typeName: the migrator type name
  typeName: String

  # typeName not equals to the parameter, typeName: the migrator type name
  typeName_not: String

  # typeName is a substring of the parameter, typeName: the migrator type name
  typeName_in: String

  # typeName is not a substring of the parameter, typeName: the migrator type name
  typeName_not_in: String

  # typeName contains the parameter as substring, typeName: the migrator type name
  typeName_contains: String

  # typeName doesn't contain the parameter as substring, typeName: the migrator type name
  typeName_not_contains: String

  # typeName starts with the parameter value, typeName: the migrator type name
  typeName_starts_with: String

  # typeName doesn't start with the parameter value, typeName: the migrator type name
  typeName_not_starts_with: String

  # typeName ends with the parameter value, typeName: the migrator type name
  typeName_ends_with: String

  # typeName doesn't end with the parameter value, typeName: the migrator type name
  typeName_not_ends_with: String

  # typeName lowercased equals the parameter, typeName: the migrator type name
  typeName_l: String

  # typeName lowercased doesn't equal the parameter, typeName: the migrator type name
  typeName_l_not: String

  # typeName lowercased is a substring of the parameter, typeName: the migrator type name
  typeName_l_in: String

  # typeName lowercased is not a substring of the parameter, typeName: the migrator type name
  typeName_l_not_in: String

  # typeName lowercased contains the parameter as substring, typeName: the migrator type name
  typeName_l_contains: String

  # typeName lowercased doesn't contain the parameter as substring, typeName: the migrator type name
  typeName_l_not_contains: String

  # typeName lowercased starts with the parameter value, typeName: the migrator type name
  typeName_l_starts_with: String

  # typeName lowercased doesn't start with the parameter value, typeName: the migrator type name
  typeName_l_not_starts_with: String

  # typeName lowercased ends with the parameter value, typeName: the migrator type name
  typeName_l_ends_with: String

  # typeName lowercased doesn't end with the parameter value, typeName: the migrator type name
  typeName_l_not_ends_with: String

  # name exactly equals to the parameter, name: the migrator name
  name: String

  # name not equals to the parameter, name: the migrator name
  name_not: String

  # name is a substring of the parameter, name: the migrator name
  name_in: String

  # name is not a substring of the parameter, name: the migrator name
  name_not_in: String

  # name contains the parameter as substring, name: the migrator name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the migrator name
  name_not_contains: String

  # name starts with the parameter value, name: the migrator name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the migrator name
  name_not_starts_with: String

  # name ends with the parameter value, name: the migrator name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the migrator name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the migrator name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the migrator name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the migrator name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the migrator name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the migrator name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the migrator name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the migrator name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the migrator name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the migrator name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the migrator name
  name_l_not_ends_with: String

  # position exactly equals to the parameter, position: the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # position not equals to the parameter, position: the current migrator position
  position_not: ClusterKitNodeApi_EnMigratorPosition

  # direction exactly equals to the parameter, direction: the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection

  # direction not equals to the parameter, direction: the migration direction
  direction_not: ClusterKitNodeApi_EnMigrationDirection
}

enum ClusterKitNodeApi_MigratorMigrationState_Sort {
  typeName_asc
  typeName_desc
  name_asc
  name_desc
  position_asc
  position_desc
  direction_asc
  direction_desc
}

# The state of migrators resources
type ClusterKitNodeApi_MigratorReleaseState implements IClusterKitNodeApi_MigratorReleaseState, Node {
  # the migrator type name
  typeName: String

  # the migrator name
  name: String

  # the migrator defined migration points
  migrationPoints: [String]

  # the last defined point for current release
  lastDefinedPoint: String

  # the state of defined resources
  resources(filter: ClusterKitNodeApi_ResourceReleaseState_Filter_Input, sort: [ClusterKitNodeApi_ResourceReleaseState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_ResourceReleaseState_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_MigratorReleaseState
#  The state of migrators resources
type ClusterKitNodeApi_MigratorReleaseState_Connection implements IClusterKitNodeApi_MigratorReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigratorReleaseState_Edge]
}

# The ClusterKitNodeApi_MigratorReleaseState in a connected list
#  The state of migrators resources
type ClusterKitNodeApi_MigratorReleaseState_Edge implements IClusterKitNodeApi_MigratorReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The state of migrators resources
  node: ClusterKitNodeApi_MigratorReleaseState
}

input ClusterKitNodeApi_MigratorReleaseState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigratorReleaseState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigratorReleaseState_Filter_Input

  # typeName exactly equals to the parameter, typeName: the migrator type name
  typeName: String

  # typeName not equals to the parameter, typeName: the migrator type name
  typeName_not: String

  # typeName is a substring of the parameter, typeName: the migrator type name
  typeName_in: String

  # typeName is not a substring of the parameter, typeName: the migrator type name
  typeName_not_in: String

  # typeName contains the parameter as substring, typeName: the migrator type name
  typeName_contains: String

  # typeName doesn't contain the parameter as substring, typeName: the migrator type name
  typeName_not_contains: String

  # typeName starts with the parameter value, typeName: the migrator type name
  typeName_starts_with: String

  # typeName doesn't start with the parameter value, typeName: the migrator type name
  typeName_not_starts_with: String

  # typeName ends with the parameter value, typeName: the migrator type name
  typeName_ends_with: String

  # typeName doesn't end with the parameter value, typeName: the migrator type name
  typeName_not_ends_with: String

  # typeName lowercased equals the parameter, typeName: the migrator type name
  typeName_l: String

  # typeName lowercased doesn't equal the parameter, typeName: the migrator type name
  typeName_l_not: String

  # typeName lowercased is a substring of the parameter, typeName: the migrator type name
  typeName_l_in: String

  # typeName lowercased is not a substring of the parameter, typeName: the migrator type name
  typeName_l_not_in: String

  # typeName lowercased contains the parameter as substring, typeName: the migrator type name
  typeName_l_contains: String

  # typeName lowercased doesn't contain the parameter as substring, typeName: the migrator type name
  typeName_l_not_contains: String

  # typeName lowercased starts with the parameter value, typeName: the migrator type name
  typeName_l_starts_with: String

  # typeName lowercased doesn't start with the parameter value, typeName: the migrator type name
  typeName_l_not_starts_with: String

  # typeName lowercased ends with the parameter value, typeName: the migrator type name
  typeName_l_ends_with: String

  # typeName lowercased doesn't end with the parameter value, typeName: the migrator type name
  typeName_l_not_ends_with: String

  # name exactly equals to the parameter, name: the migrator name
  name: String

  # name not equals to the parameter, name: the migrator name
  name_not: String

  # name is a substring of the parameter, name: the migrator name
  name_in: String

  # name is not a substring of the parameter, name: the migrator name
  name_not_in: String

  # name contains the parameter as substring, name: the migrator name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the migrator name
  name_not_contains: String

  # name starts with the parameter value, name: the migrator name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the migrator name
  name_not_starts_with: String

  # name ends with the parameter value, name: the migrator name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the migrator name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the migrator name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the migrator name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the migrator name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the migrator name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the migrator name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the migrator name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the migrator name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the migrator name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the migrator name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the migrator name
  name_l_not_ends_with: String

  # lastDefinedPoint exactly equals to the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint: String

  # lastDefinedPoint not equals to the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_not: String

  # lastDefinedPoint is a substring of the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_in: String

  # lastDefinedPoint is not a substring of the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_not_in: String

  # lastDefinedPoint contains the parameter as substring, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_contains: String

  # lastDefinedPoint doesn't contain the parameter as substring, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_not_contains: String

  # lastDefinedPoint starts with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_starts_with: String

  # lastDefinedPoint doesn't start with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_not_starts_with: String

  # lastDefinedPoint ends with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_ends_with: String

  # lastDefinedPoint doesn't end with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_not_ends_with: String

  # lastDefinedPoint lowercased equals the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l: String

  # lastDefinedPoint lowercased doesn't equal the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_not: String

  # lastDefinedPoint lowercased is a substring of the parameter, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_in: String

  # lastDefinedPoint lowercased is not a substring of the parameter,
  # lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_not_in: String

  # lastDefinedPoint lowercased contains the parameter as substring,
  # lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_contains: String

  # lastDefinedPoint lowercased doesn't contain the parameter as substring,
  # lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_not_contains: String

  # lastDefinedPoint lowercased starts with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_starts_with: String

  # lastDefinedPoint lowercased doesn't start with the parameter value,
  # lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_not_starts_with: String

  # lastDefinedPoint lowercased ends with the parameter value, lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_ends_with: String

  # lastDefinedPoint lowercased doesn't end with the parameter value,
  # lastDefinedPoint: the last defined point for current release
  lastDefinedPoint_l_not_ends_with: String
}

enum ClusterKitNodeApi_MigratorReleaseState_Sort {
  typeName_asc
  typeName_desc
  name_asc
  name_desc
  lastDefinedPoint_asc
  lastDefinedPoint_desc
}

# A cluster migrator template definition
type ClusterKitNodeApi_MigratorTemplate implements IClusterKitNodeApi_MigratorTemplate, Node {
  # The program readable migrator template name
  code: String

  # The akka configuration for migrator
  configuration: String

  # The human readable migrator template name
  name: String

  # The migrator description for other users
  notes: String

  # The priority weight for migrator, when deciding witch migrator should be
  # called first. During cluster upgrade process migrators a called from most
  # prioritised to less. During downgrade in backwards order.
  priority: Float

  # The list of package requirements
  packageRequirements(filter: ClusterKitNodeApi_PackageRequirement_Filter_Input, sort: [ClusterKitNodeApi_PackageRequirement_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_PackageRequirement_Connection

  # The list of packages to install for current template
  packagesToInstall(filter: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input, sort: [ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection
  id: ID
}

# The migrator template state according to the migration
type ClusterKitNodeApi_MigratorTemplateMigrationState implements IClusterKitNodeApi_MigratorTemplateMigrationState, Node {
  # the template code
  code: String

  # the migrator template from source release
  sourceTemplate: ClusterKitNodeApi_MigratorTemplate

  # the migrator template from destination release
  destinationTemplate: ClusterKitNodeApi_MigratorTemplate

  # the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # the list of states of migratorsn
  migrators(filter: ClusterKitNodeApi_MigratorMigrationState_Filter_Input, sort: [ClusterKitNodeApi_MigratorMigrationState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_MigratorMigrationState_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_MigratorTemplateMigrationState
#  The migrator template state according to the migration
type ClusterKitNodeApi_MigratorTemplateMigrationState_Connection implements IClusterKitNodeApi_MigratorTemplateMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigratorTemplateMigrationState_Edge]
}

# The ClusterKitNodeApi_MigratorTemplateMigrationState in a connected list
#  The migrator template state according to the migration
type ClusterKitNodeApi_MigratorTemplateMigrationState_Edge implements IClusterKitNodeApi_MigratorTemplateMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The migrator template state according to the migration
  node: ClusterKitNodeApi_MigratorTemplateMigrationState
}

input ClusterKitNodeApi_MigratorTemplateMigrationState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigratorTemplateMigrationState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigratorTemplateMigrationState_Filter_Input

  # code exactly equals to the parameter, code: the template code
  code: String

  # code not equals to the parameter, code: the template code
  code_not: String

  # code is a substring of the parameter, code: the template code
  code_in: String

  # code is not a substring of the parameter, code: the template code
  code_not_in: String

  # code contains the parameter as substring, code: the template code
  code_contains: String

  # code doesn't contain the parameter as substring, code: the template code
  code_not_contains: String

  # code starts with the parameter value, code: the template code
  code_starts_with: String

  # code doesn't start with the parameter value, code: the template code
  code_not_starts_with: String

  # code ends with the parameter value, code: the template code
  code_ends_with: String

  # code doesn't end with the parameter value, code: the template code
  code_not_ends_with: String

  # code lowercased equals the parameter, code: the template code
  code_l: String

  # code lowercased doesn't equal the parameter, code: the template code
  code_l_not: String

  # code lowercased is a substring of the parameter, code: the template code
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: the template code
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: the template code
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: the template code
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: the template code
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: the template code
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: the template code
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: the template code
  code_l_not_ends_with: String

  # position exactly equals to the parameter, position: the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # position not equals to the parameter, position: the current migrator position
  position_not: ClusterKitNodeApi_EnMigratorPosition
}

enum ClusterKitNodeApi_MigratorTemplateMigrationState_Sort {
  code_asc
  code_desc
  position_asc
  position_desc
}

# The state of resources of the migrator template
type ClusterKitNodeApi_MigratorTemplateReleaseState implements IClusterKitNodeApi_MigratorTemplateReleaseState, Node {
  # the template code
  code: String

  # the migrator template
  template: ClusterKitNodeApi_MigratorTemplate

  # the migrator states
  migratorsStates(filter: ClusterKitNodeApi_MigratorReleaseState_Filter_Input, sort: [ClusterKitNodeApi_MigratorReleaseState_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_MigratorReleaseState_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_MigratorTemplateReleaseState
#  The state of resources of the migrator template
type ClusterKitNodeApi_MigratorTemplateReleaseState_Connection implements IClusterKitNodeApi_MigratorTemplateReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigratorTemplateReleaseState_Edge]
}

# The ClusterKitNodeApi_MigratorTemplateReleaseState in a connected list
#  The state of resources of the migrator template
type ClusterKitNodeApi_MigratorTemplateReleaseState_Edge implements IClusterKitNodeApi_MigratorTemplateReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The state of resources of the migrator template
  node: ClusterKitNodeApi_MigratorTemplateReleaseState
}

input ClusterKitNodeApi_MigratorTemplateReleaseState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigratorTemplateReleaseState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigratorTemplateReleaseState_Filter_Input

  # code exactly equals to the parameter, code: the template code
  code: String

  # code not equals to the parameter, code: the template code
  code_not: String

  # code is a substring of the parameter, code: the template code
  code_in: String

  # code is not a substring of the parameter, code: the template code
  code_not_in: String

  # code contains the parameter as substring, code: the template code
  code_contains: String

  # code doesn't contain the parameter as substring, code: the template code
  code_not_contains: String

  # code starts with the parameter value, code: the template code
  code_starts_with: String

  # code doesn't start with the parameter value, code: the template code
  code_not_starts_with: String

  # code ends with the parameter value, code: the template code
  code_ends_with: String

  # code doesn't end with the parameter value, code: the template code
  code_not_ends_with: String

  # code lowercased equals the parameter, code: the template code
  code_l: String

  # code lowercased doesn't equal the parameter, code: the template code
  code_l_not: String

  # code lowercased is a substring of the parameter, code: the template code
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: the template code
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: the template code
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: the template code
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: the template code
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: the template code
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: the template code
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: the template code
  code_l_not_ends_with: String
}

enum ClusterKitNodeApi_MigratorTemplateReleaseState_Sort {
  code_asc
  code_desc
}

# The list of connected ClusterKitNodeApi_MigratorTemplate
#  A cluster migrator template definition
type ClusterKitNodeApi_MigratorTemplate_Connection implements IClusterKitNodeApi_MigratorTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_MigratorTemplate_Edge]
}

# The ClusterKitNodeApi_MigratorTemplate in a connected list
#  A cluster migrator template definition
type ClusterKitNodeApi_MigratorTemplate_Edge implements IClusterKitNodeApi_MigratorTemplate_Edge {
  # A value to use with paging positioning
  cursor: String

  # A cluster migrator template definition
  node: ClusterKitNodeApi_MigratorTemplate
}

input ClusterKitNodeApi_MigratorTemplate_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_MigratorTemplate_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_MigratorTemplate_Filter_Input

  # code exactly equals to the parameter, code: The program readable migrator template name
  code: String

  # code not equals to the parameter, code: The program readable migrator template name
  code_not: String

  # code is a substring of the parameter, code: The program readable migrator template name
  code_in: String

  # code is not a substring of the parameter, code: The program readable migrator template name
  code_not_in: String

  # code contains the parameter as substring, code: The program readable migrator template name
  code_contains: String

  # code doesn't contain the parameter as substring, code: The program readable migrator template name
  code_not_contains: String

  # code starts with the parameter value, code: The program readable migrator template name
  code_starts_with: String

  # code doesn't start with the parameter value, code: The program readable migrator template name
  code_not_starts_with: String

  # code ends with the parameter value, code: The program readable migrator template name
  code_ends_with: String

  # code doesn't end with the parameter value, code: The program readable migrator template name
  code_not_ends_with: String

  # code lowercased equals the parameter, code: The program readable migrator template name
  code_l: String

  # code lowercased doesn't equal the parameter, code: The program readable migrator template name
  code_l_not: String

  # code lowercased is a substring of the parameter, code: The program readable migrator template name
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: The program readable migrator template name
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: The program readable migrator template name
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: The program readable migrator template name
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: The program readable migrator template name
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: The program readable migrator template name
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: The program readable migrator template name
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: The program readable migrator template name
  code_l_not_ends_with: String

  # configuration exactly equals to the parameter, configuration: The akka configuration for migrator
  configuration: String

  # configuration not equals to the parameter, configuration: The akka configuration for migrator
  configuration_not: String

  # configuration is a substring of the parameter, configuration: The akka configuration for migrator
  configuration_in: String

  # configuration is not a substring of the parameter, configuration: The akka configuration for migrator
  configuration_not_in: String

  # configuration contains the parameter as substring, configuration: The akka configuration for migrator
  configuration_contains: String

  # configuration doesn't contain the parameter as substring, configuration: The akka configuration for migrator
  configuration_not_contains: String

  # configuration starts with the parameter value, configuration: The akka configuration for migrator
  configuration_starts_with: String

  # configuration doesn't start with the parameter value, configuration: The akka configuration for migrator
  configuration_not_starts_with: String

  # configuration ends with the parameter value, configuration: The akka configuration for migrator
  configuration_ends_with: String

  # configuration doesn't end with the parameter value, configuration: The akka configuration for migrator
  configuration_not_ends_with: String

  # configuration lowercased equals the parameter, configuration: The akka configuration for migrator
  configuration_l: String

  # configuration lowercased doesn't equal the parameter, configuration: The akka configuration for migrator
  configuration_l_not: String

  # configuration lowercased is a substring of the parameter, configuration: The akka configuration for migrator
  configuration_l_in: String

  # configuration lowercased is not a substring of the parameter, configuration: The akka configuration for migrator
  configuration_l_not_in: String

  # configuration lowercased contains the parameter as substring, configuration: The akka configuration for migrator
  configuration_l_contains: String

  # configuration lowercased doesn't contain the parameter as substring, configuration: The akka configuration for migrator
  configuration_l_not_contains: String

  # configuration lowercased starts with the parameter value, configuration: The akka configuration for migrator
  configuration_l_starts_with: String

  # configuration lowercased doesn't start with the parameter value, configuration: The akka configuration for migrator
  configuration_l_not_starts_with: String

  # configuration lowercased ends with the parameter value, configuration: The akka configuration for migrator
  configuration_l_ends_with: String

  # configuration lowercased doesn't end with the parameter value, configuration: The akka configuration for migrator
  configuration_l_not_ends_with: String

  # name exactly equals to the parameter, name: The human readable migrator template name
  name: String

  # name not equals to the parameter, name: The human readable migrator template name
  name_not: String

  # name is a substring of the parameter, name: The human readable migrator template name
  name_in: String

  # name is not a substring of the parameter, name: The human readable migrator template name
  name_not_in: String

  # name contains the parameter as substring, name: The human readable migrator template name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The human readable migrator template name
  name_not_contains: String

  # name starts with the parameter value, name: The human readable migrator template name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The human readable migrator template name
  name_not_starts_with: String

  # name ends with the parameter value, name: The human readable migrator template name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The human readable migrator template name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The human readable migrator template name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The human readable migrator template name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The human readable migrator template name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The human readable migrator template name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The human readable migrator template name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The human readable migrator template name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The human readable migrator template name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The human readable migrator template name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The human readable migrator template name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The human readable migrator template name
  name_l_not_ends_with: String

  # notes exactly equals to the parameter, notes: The migrator description for other users
  notes: String

  # notes not equals to the parameter, notes: The migrator description for other users
  notes_not: String

  # notes is a substring of the parameter, notes: The migrator description for other users
  notes_in: String

  # notes is not a substring of the parameter, notes: The migrator description for other users
  notes_not_in: String

  # notes contains the parameter as substring, notes: The migrator description for other users
  notes_contains: String

  # notes doesn't contain the parameter as substring, notes: The migrator description for other users
  notes_not_contains: String

  # notes starts with the parameter value, notes: The migrator description for other users
  notes_starts_with: String

  # notes doesn't start with the parameter value, notes: The migrator description for other users
  notes_not_starts_with: String

  # notes ends with the parameter value, notes: The migrator description for other users
  notes_ends_with: String

  # notes doesn't end with the parameter value, notes: The migrator description for other users
  notes_not_ends_with: String

  # notes lowercased equals the parameter, notes: The migrator description for other users
  notes_l: String

  # notes lowercased doesn't equal the parameter, notes: The migrator description for other users
  notes_l_not: String

  # notes lowercased is a substring of the parameter, notes: The migrator description for other users
  notes_l_in: String

  # notes lowercased is not a substring of the parameter, notes: The migrator description for other users
  notes_l_not_in: String

  # notes lowercased contains the parameter as substring, notes: The migrator description for other users
  notes_l_contains: String

  # notes lowercased doesn't contain the parameter as substring, notes: The migrator description for other users
  notes_l_not_contains: String

  # notes lowercased starts with the parameter value, notes: The migrator description for other users
  notes_l_starts_with: String

  # notes lowercased doesn't start with the parameter value, notes: The migrator description for other users
  notes_l_not_starts_with: String

  # notes lowercased ends with the parameter value, notes: The migrator description for other users
  notes_l_ends_with: String

  # notes lowercased doesn't end with the parameter value, notes: The migrator description for other users
  notes_l_not_ends_with: String

  # priority exactly equals to the parameter, priority: The priority weight for
  # migrator, when deciding witch migrator should be called first. During cluster
  # upgrade process migrators a called from most prioritised to less. During
  # downgrade in backwards order.
  priority: Float

  # priority not equals to the parameter, priority: The priority weight for
  # migrator, when deciding witch migrator should be called first. During cluster
  # upgrade process migrators a called from most prioritised to less. During
  # downgrade in backwards order.
  priority_not: Float

  # priority is less then the parameter, priority: The priority weight for
  # migrator, when deciding witch migrator should be called first. During cluster
  # upgrade process migrators a called from most prioritised to less. During
  # downgrade in backwards order.
  priority_lt: Float

  # priority is less then or equal to the parameter, priority: The priority weight
  # for migrator, when deciding witch migrator should be called first. During
  # cluster upgrade process migrators a called from most prioritised to less.
  # During downgrade in backwards order.
  priority_lte: Float

  # priority is greater then the parameter, priority: The priority weight for
  # migrator, when deciding witch migrator should be called first. During cluster
  # upgrade process migrators a called from most prioritised to less. During
  # downgrade in backwards order.
  priority_gt: Float

  # priority is greater then or equal to the parameter, priority: The priority
  # weight for migrator, when deciding witch migrator should be called first.
  # During cluster upgrade process migrators a called from most prioritised to
  # less. During downgrade in backwards order.
  priority_gte: Float
}

# A cluster migrator template definition
input ClusterKitNodeApi_MigratorTemplate_Input {
  # The program readable migrator template name
  code: String

  # The akka configuration for migrator
  configuration: String

  # The human readable migrator template name
  name: String

  # The migrator description for other users
  notes: String

  # The priority weight for migrator, when deciding witch migrator should be
  # called first. During cluster upgrade process migrators a called from most
  # prioritised to less. During downgrade in backwards order.
  priority: Float

  # The list of package requirements
  packageRequirements: [ClusterKitNodeApi_PackageRequirement_Input]
}

enum ClusterKitNodeApi_MigratorTemplate_Sort {
  code_asc
  code_desc
  configuration_asc
  configuration_desc
  name_asc
  name_desc
  notes_asc
  notes_desc
  priority_asc
  priority_desc
}

# The standard mutation result
type ClusterKitNodeApi_MutationResult_System_Boolean_ implements IClusterKitNodeApi_MutationResult_System_Boolean_, Node {
  # The mutated object result
  result: Boolean

  # The list of mutation errors
  errors(filter: ClusterKitNodeApi_ErrorDescription_Filter_Input, sort: [ClusterKitNodeApi_ErrorDescription_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_ErrorDescription_Connection
  id: ID
}

type ClusterKitNodeApi_MutationResult_System_Boolean__MutationPayload {
  result: ClusterKitNodeApi_MutationResult_System_Boolean_
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

# Description of node configuration
type ClusterKitNodeApi_NodeDescription implements IClusterKitNodeApi_NodeDescription, Node {
  # symbolic container type code
  containerType: String

  # a value indicating whether the current node is cluster leader
  isClusterLeader: Boolean

  # a value indicating whether software and or configuration is obsolete and needed to be upgraded
  isObsolete: Boolean

  # a value indicating whether this is complete description
  isInitialized: Boolean

  # the list of roles, where current node is leader
  leaderInRoles: [String]

  # The node's address
  nodeAddress: ClusterKitNodeApi_AkkaAddress

  # request id to indicate node instance startup
  nodeId: Uid

  # node template code
  nodeTemplate: String

  # the installed release id
  releaseId: Int

  # the list of cluster roles
  roles: [String]

  # node start time
  startTimeStamp: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_NodeDescription
#  Description of node configuration
type ClusterKitNodeApi_NodeDescription_Connection implements IClusterKitNodeApi_NodeDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_NodeDescription_Edge]
}

# The ClusterKitNodeApi_NodeDescription in a connected list
#  Description of node configuration
type ClusterKitNodeApi_NodeDescription_Edge implements IClusterKitNodeApi_NodeDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # Description of node configuration
  node: ClusterKitNodeApi_NodeDescription
}

input ClusterKitNodeApi_NodeDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_NodeDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_NodeDescription_Filter_Input

  # containerType exactly equals to the parameter, containerType: symbolic container type code
  containerType: String

  # containerType not equals to the parameter, containerType: symbolic container type code
  containerType_not: String

  # containerType is a substring of the parameter, containerType: symbolic container type code
  containerType_in: String

  # containerType is not a substring of the parameter, containerType: symbolic container type code
  containerType_not_in: String

  # containerType contains the parameter as substring, containerType: symbolic container type code
  containerType_contains: String

  # containerType doesn't contain the parameter as substring, containerType: symbolic container type code
  containerType_not_contains: String

  # containerType starts with the parameter value, containerType: symbolic container type code
  containerType_starts_with: String

  # containerType doesn't start with the parameter value, containerType: symbolic container type code
  containerType_not_starts_with: String

  # containerType ends with the parameter value, containerType: symbolic container type code
  containerType_ends_with: String

  # containerType doesn't end with the parameter value, containerType: symbolic container type code
  containerType_not_ends_with: String

  # containerType lowercased equals the parameter, containerType: symbolic container type code
  containerType_l: String

  # containerType lowercased doesn't equal the parameter, containerType: symbolic container type code
  containerType_l_not: String

  # containerType lowercased is a substring of the parameter, containerType: symbolic container type code
  containerType_l_in: String

  # containerType lowercased is not a substring of the parameter, containerType: symbolic container type code
  containerType_l_not_in: String

  # containerType lowercased contains the parameter as substring, containerType: symbolic container type code
  containerType_l_contains: String

  # containerType lowercased doesn't contain the parameter as substring, containerType: symbolic container type code
  containerType_l_not_contains: String

  # containerType lowercased starts with the parameter value, containerType: symbolic container type code
  containerType_l_starts_with: String

  # containerType lowercased doesn't start with the parameter value, containerType: symbolic container type code
  containerType_l_not_starts_with: String

  # containerType lowercased ends with the parameter value, containerType: symbolic container type code
  containerType_l_ends_with: String

  # containerType lowercased doesn't end with the parameter value, containerType: symbolic container type code
  containerType_l_not_ends_with: String

  # isClusterLeader exactly equals to the parameter, isClusterLeader: a value
  # indicating whether the current node is cluster leader
  isClusterLeader: Boolean

  # isClusterLeader not equals to the parameter, isClusterLeader: a value
  # indicating whether the current node is cluster leader
  isClusterLeader_not: Boolean

  # isObsolete exactly equals to the parameter, isObsolete: a value indicating
  # whether software and or configuration is obsolete and needed to be upgraded
  isObsolete: Boolean

  # isObsolete not equals to the parameter, isObsolete: a value indicating whether
  # software and or configuration is obsolete and needed to be upgraded
  isObsolete_not: Boolean

  # isInitialized exactly equals to the parameter, isInitialized: a value indicating whether this is complete description
  isInitialized: Boolean

  # isInitialized not equals to the parameter, isInitialized: a value indicating whether this is complete description
  isInitialized_not: Boolean

  # nodeId exactly equals to the parameter, nodeId: request id to indicate node instance startup
  nodeId: Uid

  # nodeId not equals to the parameter, nodeId: request id to indicate node instance startup
  nodeId_not: Uid

  # nodeTemplate exactly equals to the parameter, nodeTemplate: node template code
  nodeTemplate: String

  # nodeTemplate not equals to the parameter, nodeTemplate: node template code
  nodeTemplate_not: String

  # nodeTemplate is a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_in: String

  # nodeTemplate is not a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_not_in: String

  # nodeTemplate contains the parameter as substring, nodeTemplate: node template code
  nodeTemplate_contains: String

  # nodeTemplate doesn't contain the parameter as substring, nodeTemplate: node template code
  nodeTemplate_not_contains: String

  # nodeTemplate starts with the parameter value, nodeTemplate: node template code
  nodeTemplate_starts_with: String

  # nodeTemplate doesn't start with the parameter value, nodeTemplate: node template code
  nodeTemplate_not_starts_with: String

  # nodeTemplate ends with the parameter value, nodeTemplate: node template code
  nodeTemplate_ends_with: String

  # nodeTemplate doesn't end with the parameter value, nodeTemplate: node template code
  nodeTemplate_not_ends_with: String

  # nodeTemplate lowercased equals the parameter, nodeTemplate: node template code
  nodeTemplate_l: String

  # nodeTemplate lowercased doesn't equal the parameter, nodeTemplate: node template code
  nodeTemplate_l_not: String

  # nodeTemplate lowercased is a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_l_in: String

  # nodeTemplate lowercased is not a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_l_not_in: String

  # nodeTemplate lowercased contains the parameter as substring, nodeTemplate: node template code
  nodeTemplate_l_contains: String

  # nodeTemplate lowercased doesn't contain the parameter as substring, nodeTemplate: node template code
  nodeTemplate_l_not_contains: String

  # nodeTemplate lowercased starts with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_starts_with: String

  # nodeTemplate lowercased doesn't start with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_not_starts_with: String

  # nodeTemplate lowercased ends with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_ends_with: String

  # nodeTemplate lowercased doesn't end with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_not_ends_with: String

  # releaseId exactly equals to the parameter, releaseId: the installed release id
  releaseId: Int

  # releaseId not equals to the parameter, releaseId: the installed release id
  releaseId_not: Int

  # releaseId is less then the parameter, releaseId: the installed release id
  releaseId_lt: Int

  # releaseId is less then or equal to the parameter, releaseId: the installed release id
  releaseId_lte: Int

  # releaseId is greater then the parameter, releaseId: the installed release id
  releaseId_gt: Int

  # releaseId is greater then or equal to the parameter, releaseId: the installed release id
  releaseId_gte: Int

  # startTimeStamp exactly equals to the parameter, startTimeStamp: node start time
  startTimeStamp: Int

  # startTimeStamp not equals to the parameter, startTimeStamp: node start time
  startTimeStamp_not: Int

  # startTimeStamp is less then the parameter, startTimeStamp: node start time
  startTimeStamp_lt: Int

  # startTimeStamp is less then or equal to the parameter, startTimeStamp: node start time
  startTimeStamp_lte: Int

  # startTimeStamp is greater then the parameter, startTimeStamp: node start time
  startTimeStamp_gt: Int

  # startTimeStamp is greater then or equal to the parameter, startTimeStamp: node start time
  startTimeStamp_gte: Int
}

enum ClusterKitNodeApi_NodeDescription_Sort {
  containerType_asc
  containerType_desc
  isClusterLeader_asc
  isClusterLeader_desc
  isObsolete_asc
  isObsolete_desc
  isInitialized_asc
  isInitialized_desc
  nodeId_asc
  nodeId_desc
  nodeTemplate_asc
  nodeTemplate_desc
  releaseId_asc
  releaseId_desc
  startTimeStamp_asc
  startTimeStamp_desc
}

# Node template description
type ClusterKitNodeApi_NodeTemplate implements IClusterKitNodeApi_NodeTemplate, Node {
  # The program readable node template name
  code: String

  # The akka configuration template for node
  configuration: String

  # The list of container types to install node templates
  containerTypes: [String]

  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances: Int

  # The human readable node template name
  name: String

  # The template description for other users
  notes: String

  # The priority weight for service, when deciding witch template should be brought up
  priority: Float

  # The list of package requirements
  packageRequirements(filter: ClusterKitNodeApi_PackageRequirement_Filter_Input, sort: [ClusterKitNodeApi_PackageRequirement_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_PackageRequirement_Connection

  # The list of packages to install for current template
  packagesToInstall(filter: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input, sort: [ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection

  # A value indicating whether no other nodes from previous releases are compatible
  forceUpdate: Boolean
  id: ID
}

# The list of connected ClusterKitNodeApi_NodeTemplate
#  Node template description
type ClusterKitNodeApi_NodeTemplate_Connection implements IClusterKitNodeApi_NodeTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_NodeTemplate_Edge]
}

# The ClusterKitNodeApi_NodeTemplate in a connected list
#  Node template description
type ClusterKitNodeApi_NodeTemplate_Edge implements IClusterKitNodeApi_NodeTemplate_Edge {
  # A value to use with paging positioning
  cursor: String

  # Node template description
  node: ClusterKitNodeApi_NodeTemplate
}

input ClusterKitNodeApi_NodeTemplate_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_NodeTemplate_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_NodeTemplate_Filter_Input

  # code exactly equals to the parameter, code: The program readable node template name
  code: String

  # code not equals to the parameter, code: The program readable node template name
  code_not: String

  # code is a substring of the parameter, code: The program readable node template name
  code_in: String

  # code is not a substring of the parameter, code: The program readable node template name
  code_not_in: String

  # code contains the parameter as substring, code: The program readable node template name
  code_contains: String

  # code doesn't contain the parameter as substring, code: The program readable node template name
  code_not_contains: String

  # code starts with the parameter value, code: The program readable node template name
  code_starts_with: String

  # code doesn't start with the parameter value, code: The program readable node template name
  code_not_starts_with: String

  # code ends with the parameter value, code: The program readable node template name
  code_ends_with: String

  # code doesn't end with the parameter value, code: The program readable node template name
  code_not_ends_with: String

  # code lowercased equals the parameter, code: The program readable node template name
  code_l: String

  # code lowercased doesn't equal the parameter, code: The program readable node template name
  code_l_not: String

  # code lowercased is a substring of the parameter, code: The program readable node template name
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: The program readable node template name
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: The program readable node template name
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: The program readable node template name
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: The program readable node template name
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: The program readable node template name
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: The program readable node template name
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: The program readable node template name
  code_l_not_ends_with: String

  # configuration exactly equals to the parameter, configuration: The akka configuration template for node
  configuration: String

  # configuration not equals to the parameter, configuration: The akka configuration template for node
  configuration_not: String

  # configuration is a substring of the parameter, configuration: The akka configuration template for node
  configuration_in: String

  # configuration is not a substring of the parameter, configuration: The akka configuration template for node
  configuration_not_in: String

  # configuration contains the parameter as substring, configuration: The akka configuration template for node
  configuration_contains: String

  # configuration doesn't contain the parameter as substring, configuration: The akka configuration template for node
  configuration_not_contains: String

  # configuration starts with the parameter value, configuration: The akka configuration template for node
  configuration_starts_with: String

  # configuration doesn't start with the parameter value, configuration: The akka configuration template for node
  configuration_not_starts_with: String

  # configuration ends with the parameter value, configuration: The akka configuration template for node
  configuration_ends_with: String

  # configuration doesn't end with the parameter value, configuration: The akka configuration template for node
  configuration_not_ends_with: String

  # configuration lowercased equals the parameter, configuration: The akka configuration template for node
  configuration_l: String

  # configuration lowercased doesn't equal the parameter, configuration: The akka configuration template for node
  configuration_l_not: String

  # configuration lowercased is a substring of the parameter, configuration: The akka configuration template for node
  configuration_l_in: String

  # configuration lowercased is not a substring of the parameter, configuration: The akka configuration template for node
  configuration_l_not_in: String

  # configuration lowercased contains the parameter as substring, configuration: The akka configuration template for node
  configuration_l_contains: String

  # configuration lowercased doesn't contain the parameter as substring,
  # configuration: The akka configuration template for node
  configuration_l_not_contains: String

  # configuration lowercased starts with the parameter value, configuration: The akka configuration template for node
  configuration_l_starts_with: String

  # configuration lowercased doesn't start with the parameter value, configuration: The akka configuration template for node
  configuration_l_not_starts_with: String

  # configuration lowercased ends with the parameter value, configuration: The akka configuration template for node
  configuration_l_ends_with: String

  # configuration lowercased doesn't end with the parameter value, configuration: The akka configuration template for node
  configuration_l_not_ends_with: String

  # maximumNeededInstances exactly equals to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # maximumNeededInstances not equals to the parameter, maximumNeededInstances:
  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_not: Int

  # maximumNeededInstances is less then the parameter, maximumNeededInstances: The
  # maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_lt: Int

  # maximumNeededInstances is less then or equal to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_lte: Int

  # maximumNeededInstances is greater then the parameter, maximumNeededInstances:
  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_gt: Int

  # maximumNeededInstances is greater then or equal to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_gte: Int

  # minimumRequiredInstances exactly equals to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances: Int

  # minimumRequiredInstances not equals to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_not: Int

  # minimumRequiredInstances is less then the parameter, minimumRequiredInstances:
  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances_lt: Int

  # minimumRequiredInstances is less then or equal to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_lte: Int

  # minimumRequiredInstances is greater then the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_gt: Int

  # minimumRequiredInstances is greater then or equal to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_gte: Int

  # name exactly equals to the parameter, name: The human readable node template name
  name: String

  # name not equals to the parameter, name: The human readable node template name
  name_not: String

  # name is a substring of the parameter, name: The human readable node template name
  name_in: String

  # name is not a substring of the parameter, name: The human readable node template name
  name_not_in: String

  # name contains the parameter as substring, name: The human readable node template name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The human readable node template name
  name_not_contains: String

  # name starts with the parameter value, name: The human readable node template name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The human readable node template name
  name_not_starts_with: String

  # name ends with the parameter value, name: The human readable node template name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The human readable node template name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The human readable node template name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The human readable node template name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The human readable node template name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The human readable node template name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The human readable node template name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The human readable node template name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The human readable node template name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The human readable node template name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The human readable node template name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The human readable node template name
  name_l_not_ends_with: String

  # notes exactly equals to the parameter, notes: The template description for other users
  notes: String

  # notes not equals to the parameter, notes: The template description for other users
  notes_not: String

  # notes is a substring of the parameter, notes: The template description for other users
  notes_in: String

  # notes is not a substring of the parameter, notes: The template description for other users
  notes_not_in: String

  # notes contains the parameter as substring, notes: The template description for other users
  notes_contains: String

  # notes doesn't contain the parameter as substring, notes: The template description for other users
  notes_not_contains: String

  # notes starts with the parameter value, notes: The template description for other users
  notes_starts_with: String

  # notes doesn't start with the parameter value, notes: The template description for other users
  notes_not_starts_with: String

  # notes ends with the parameter value, notes: The template description for other users
  notes_ends_with: String

  # notes doesn't end with the parameter value, notes: The template description for other users
  notes_not_ends_with: String

  # notes lowercased equals the parameter, notes: The template description for other users
  notes_l: String

  # notes lowercased doesn't equal the parameter, notes: The template description for other users
  notes_l_not: String

  # notes lowercased is a substring of the parameter, notes: The template description for other users
  notes_l_in: String

  # notes lowercased is not a substring of the parameter, notes: The template description for other users
  notes_l_not_in: String

  # notes lowercased contains the parameter as substring, notes: The template description for other users
  notes_l_contains: String

  # notes lowercased doesn't contain the parameter as substring, notes: The template description for other users
  notes_l_not_contains: String

  # notes lowercased starts with the parameter value, notes: The template description for other users
  notes_l_starts_with: String

  # notes lowercased doesn't start with the parameter value, notes: The template description for other users
  notes_l_not_starts_with: String

  # notes lowercased ends with the parameter value, notes: The template description for other users
  notes_l_ends_with: String

  # notes lowercased doesn't end with the parameter value, notes: The template description for other users
  notes_l_not_ends_with: String

  # priority exactly equals to the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority: Float

  # priority not equals to the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_not: Float

  # priority is less then the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_lt: Float

  # priority is less then or equal to the parameter, priority: The priority weight
  # for service, when deciding witch template should be brought up
  priority_lte: Float

  # priority is greater then the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_gt: Float

  # priority is greater then or equal to the parameter, priority: The priority
  # weight for service, when deciding witch template should be brought up
  priority_gte: Float

  # forceUpdate exactly equals to the parameter, forceUpdate: A value indicating
  # whether no other nodes from previous releases are compatible
  forceUpdate: Boolean

  # forceUpdate not equals to the parameter, forceUpdate: A value indicating
  # whether no other nodes from previous releases are compatible
  forceUpdate_not: Boolean
}

# Node template description
input ClusterKitNodeApi_NodeTemplate_Input {
  # The program readable node template name
  code: String

  # The akka configuration template for node
  configuration: String

  # The list of container types to install node templates
  containerTypes: [String]

  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances: Int

  # The human readable node template name
  name: String

  # The template description for other users
  notes: String

  # The priority weight for service, when deciding witch template should be brought up
  priority: Float

  # The list of package requirements
  packageRequirements: [ClusterKitNodeApi_PackageRequirement_Input]

  # A value indicating whether no other nodes from previous releases are compatible
  forceUpdate: Boolean
}

enum ClusterKitNodeApi_NodeTemplate_Sort {
  code_asc
  code_desc
  configuration_asc
  configuration_desc
  maximumNeededInstances_asc
  maximumNeededInstances_desc
  minimumRequiredInstances_asc
  minimumRequiredInstances_desc
  name_asc
  name_desc
  notes_asc
  notes_desc
  priority_asc
  priority_desc
  forceUpdate_asc
  forceUpdate_desc
}

# The link to the nuget feed to download updates
type ClusterKitNodeApi_NugetFeed implements IClusterKitNodeApi_NugetFeed, Node {
  # The seed url address
  address: String

  # The user password for basic authentication
  password: String

  # The  type of feed
  type: ClusterKitNodeApi_EnFeedType

  # The username for basic authentication
  userName: String
  id: ID
}

# The list of connected ClusterKitNodeApi_NugetFeed
#  The link to the nuget feed to download updates
type ClusterKitNodeApi_NugetFeed_Connection implements IClusterKitNodeApi_NugetFeed_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_NugetFeed_Edge]
}

# The ClusterKitNodeApi_NugetFeed in a connected list
#  The link to the nuget feed to download updates
type ClusterKitNodeApi_NugetFeed_Edge implements IClusterKitNodeApi_NugetFeed_Edge {
  # A value to use with paging positioning
  cursor: String

  # The link to the nuget feed to download updates
  node: ClusterKitNodeApi_NugetFeed
}

input ClusterKitNodeApi_NugetFeed_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_NugetFeed_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_NugetFeed_Filter_Input

  # address exactly equals to the parameter, address: The seed url address
  address: String

  # address not equals to the parameter, address: The seed url address
  address_not: String

  # address is a substring of the parameter, address: The seed url address
  address_in: String

  # address is not a substring of the parameter, address: The seed url address
  address_not_in: String

  # address contains the parameter as substring, address: The seed url address
  address_contains: String

  # address doesn't contain the parameter as substring, address: The seed url address
  address_not_contains: String

  # address starts with the parameter value, address: The seed url address
  address_starts_with: String

  # address doesn't start with the parameter value, address: The seed url address
  address_not_starts_with: String

  # address ends with the parameter value, address: The seed url address
  address_ends_with: String

  # address doesn't end with the parameter value, address: The seed url address
  address_not_ends_with: String

  # address lowercased equals the parameter, address: The seed url address
  address_l: String

  # address lowercased doesn't equal the parameter, address: The seed url address
  address_l_not: String

  # address lowercased is a substring of the parameter, address: The seed url address
  address_l_in: String

  # address lowercased is not a substring of the parameter, address: The seed url address
  address_l_not_in: String

  # address lowercased contains the parameter as substring, address: The seed url address
  address_l_contains: String

  # address lowercased doesn't contain the parameter as substring, address: The seed url address
  address_l_not_contains: String

  # address lowercased starts with the parameter value, address: The seed url address
  address_l_starts_with: String

  # address lowercased doesn't start with the parameter value, address: The seed url address
  address_l_not_starts_with: String

  # address lowercased ends with the parameter value, address: The seed url address
  address_l_ends_with: String

  # address lowercased doesn't end with the parameter value, address: The seed url address
  address_l_not_ends_with: String

  # password exactly equals to the parameter, password: The user password for basic authentication
  password: String

  # password not equals to the parameter, password: The user password for basic authentication
  password_not: String

  # password is a substring of the parameter, password: The user password for basic authentication
  password_in: String

  # password is not a substring of the parameter, password: The user password for basic authentication
  password_not_in: String

  # password contains the parameter as substring, password: The user password for basic authentication
  password_contains: String

  # password doesn't contain the parameter as substring, password: The user password for basic authentication
  password_not_contains: String

  # password starts with the parameter value, password: The user password for basic authentication
  password_starts_with: String

  # password doesn't start with the parameter value, password: The user password for basic authentication
  password_not_starts_with: String

  # password ends with the parameter value, password: The user password for basic authentication
  password_ends_with: String

  # password doesn't end with the parameter value, password: The user password for basic authentication
  password_not_ends_with: String

  # password lowercased equals the parameter, password: The user password for basic authentication
  password_l: String

  # password lowercased doesn't equal the parameter, password: The user password for basic authentication
  password_l_not: String

  # password lowercased is a substring of the parameter, password: The user password for basic authentication
  password_l_in: String

  # password lowercased is not a substring of the parameter, password: The user password for basic authentication
  password_l_not_in: String

  # password lowercased contains the parameter as substring, password: The user password for basic authentication
  password_l_contains: String

  # password lowercased doesn't contain the parameter as substring, password: The user password for basic authentication
  password_l_not_contains: String

  # password lowercased starts with the parameter value, password: The user password for basic authentication
  password_l_starts_with: String

  # password lowercased doesn't start with the parameter value, password: The user password for basic authentication
  password_l_not_starts_with: String

  # password lowercased ends with the parameter value, password: The user password for basic authentication
  password_l_ends_with: String

  # password lowercased doesn't end with the parameter value, password: The user password for basic authentication
  password_l_not_ends_with: String

  # type exactly equals to the parameter, type: The  type of feed
  type: ClusterKitNodeApi_EnFeedType

  # type not equals to the parameter, type: The  type of feed
  type_not: ClusterKitNodeApi_EnFeedType

  # userName exactly equals to the parameter, userName: The username for basic authentication
  userName: String

  # userName not equals to the parameter, userName: The username for basic authentication
  userName_not: String

  # userName is a substring of the parameter, userName: The username for basic authentication
  userName_in: String

  # userName is not a substring of the parameter, userName: The username for basic authentication
  userName_not_in: String

  # userName contains the parameter as substring, userName: The username for basic authentication
  userName_contains: String

  # userName doesn't contain the parameter as substring, userName: The username for basic authentication
  userName_not_contains: String

  # userName starts with the parameter value, userName: The username for basic authentication
  userName_starts_with: String

  # userName doesn't start with the parameter value, userName: The username for basic authentication
  userName_not_starts_with: String

  # userName ends with the parameter value, userName: The username for basic authentication
  userName_ends_with: String

  # userName doesn't end with the parameter value, userName: The username for basic authentication
  userName_not_ends_with: String

  # userName lowercased equals the parameter, userName: The username for basic authentication
  userName_l: String

  # userName lowercased doesn't equal the parameter, userName: The username for basic authentication
  userName_l_not: String

  # userName lowercased is a substring of the parameter, userName: The username for basic authentication
  userName_l_in: String

  # userName lowercased is not a substring of the parameter, userName: The username for basic authentication
  userName_l_not_in: String

  # userName lowercased contains the parameter as substring, userName: The username for basic authentication
  userName_l_contains: String

  # userName lowercased doesn't contain the parameter as substring, userName: The username for basic authentication
  userName_l_not_contains: String

  # userName lowercased starts with the parameter value, userName: The username for basic authentication
  userName_l_starts_with: String

  # userName lowercased doesn't start with the parameter value, userName: The username for basic authentication
  userName_l_not_starts_with: String

  # userName lowercased ends with the parameter value, userName: The username for basic authentication
  userName_l_ends_with: String

  # userName lowercased doesn't end with the parameter value, userName: The username for basic authentication
  userName_l_not_ends_with: String
}

# The link to the nuget feed to download updates
input ClusterKitNodeApi_NugetFeed_Input {
  # The seed url address
  address: String

  # The user password for basic authentication
  password: String

  # The  type of feed
  type: ClusterKitNodeApi_EnFeedType

  # The username for basic authentication
  userName: String
}

enum ClusterKitNodeApi_NugetFeed_Sort {
  address_asc
  address_desc
  password_asc
  password_desc
  type_asc
  type_desc
  userName_asc
  userName_desc
}

# Short description of NuGet package family
type ClusterKitNodeApi_NugetPackageFamily implements IClusterKitNodeApi_NugetPackageFamily, Node {
  # The package id (name and version)
  __id: String

  # The package name
  name: String

  # The package version
  version: String

  # The list of available versions
  availableVersions: [String]
  id: ID
}

# The list of connected ClusterKitNodeApi_NugetPackageFamily
#  Short description of NuGet package family
type ClusterKitNodeApi_NugetPackageFamily_Connection implements IClusterKitNodeApi_NugetPackageFamily_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_NugetPackageFamily_Edge]
}

# The ClusterKitNodeApi_NugetPackageFamily in a connected list
#  Short description of NuGet package family
type ClusterKitNodeApi_NugetPackageFamily_Edge implements IClusterKitNodeApi_NugetPackageFamily_Edge {
  # A value to use with paging positioning
  cursor: String

  # Short description of NuGet package family
  node: ClusterKitNodeApi_NugetPackageFamily
}

input ClusterKitNodeApi_NugetPackageFamily_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_NugetPackageFamily_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_NugetPackageFamily_Filter_Input

  # id exactly equals to the parameter, id: The package id (name and version)
  id: String

  # id not equals to the parameter, id: The package id (name and version)
  id_not: String

  # id is a substring of the parameter, id: The package id (name and version)
  id_in: String

  # id is not a substring of the parameter, id: The package id (name and version)
  id_not_in: String

  # id contains the parameter as substring, id: The package id (name and version)
  id_contains: String

  # id doesn't contain the parameter as substring, id: The package id (name and version)
  id_not_contains: String

  # id starts with the parameter value, id: The package id (name and version)
  id_starts_with: String

  # id doesn't start with the parameter value, id: The package id (name and version)
  id_not_starts_with: String

  # id ends with the parameter value, id: The package id (name and version)
  id_ends_with: String

  # id doesn't end with the parameter value, id: The package id (name and version)
  id_not_ends_with: String

  # id lowercased equals the parameter, id: The package id (name and version)
  id_l: String

  # id lowercased doesn't equal the parameter, id: The package id (name and version)
  id_l_not: String

  # id lowercased is a substring of the parameter, id: The package id (name and version)
  id_l_in: String

  # id lowercased is not a substring of the parameter, id: The package id (name and version)
  id_l_not_in: String

  # id lowercased contains the parameter as substring, id: The package id (name and version)
  id_l_contains: String

  # id lowercased doesn't contain the parameter as substring, id: The package id (name and version)
  id_l_not_contains: String

  # id lowercased starts with the parameter value, id: The package id (name and version)
  id_l_starts_with: String

  # id lowercased doesn't start with the parameter value, id: The package id (name and version)
  id_l_not_starts_with: String

  # id lowercased ends with the parameter value, id: The package id (name and version)
  id_l_ends_with: String

  # id lowercased doesn't end with the parameter value, id: The package id (name and version)
  id_l_not_ends_with: String

  # name exactly equals to the parameter, name: The package name
  name: String

  # name not equals to the parameter, name: The package name
  name_not: String

  # name is a substring of the parameter, name: The package name
  name_in: String

  # name is not a substring of the parameter, name: The package name
  name_not_in: String

  # name contains the parameter as substring, name: The package name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The package name
  name_not_contains: String

  # name starts with the parameter value, name: The package name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The package name
  name_not_starts_with: String

  # name ends with the parameter value, name: The package name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The package name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The package name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The package name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The package name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The package name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The package name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The package name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The package name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The package name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The package name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The package name
  name_l_not_ends_with: String

  # version exactly equals to the parameter, version: The package version
  version: String

  # version not equals to the parameter, version: The package version
  version_not: String

  # version is a substring of the parameter, version: The package version
  version_in: String

  # version is not a substring of the parameter, version: The package version
  version_not_in: String

  # version contains the parameter as substring, version: The package version
  version_contains: String

  # version doesn't contain the parameter as substring, version: The package version
  version_not_contains: String

  # version starts with the parameter value, version: The package version
  version_starts_with: String

  # version doesn't start with the parameter value, version: The package version
  version_not_starts_with: String

  # version ends with the parameter value, version: The package version
  version_ends_with: String

  # version doesn't end with the parameter value, version: The package version
  version_not_ends_with: String

  # version lowercased equals the parameter, version: The package version
  version_l: String

  # version lowercased doesn't equal the parameter, version: The package version
  version_l_not: String

  # version lowercased is a substring of the parameter, version: The package version
  version_l_in: String

  # version lowercased is not a substring of the parameter, version: The package version
  version_l_not_in: String

  # version lowercased contains the parameter as substring, version: The package version
  version_l_contains: String

  # version lowercased doesn't contain the parameter as substring, version: The package version
  version_l_not_contains: String

  # version lowercased starts with the parameter value, version: The package version
  version_l_starts_with: String

  # version lowercased doesn't start with the parameter value, version: The package version
  version_l_not_starts_with: String

  # version lowercased ends with the parameter value, version: The package version
  version_l_ends_with: String

  # version lowercased doesn't end with the parameter value, version: The package version
  version_l_not_ends_with: String
}

enum ClusterKitNodeApi_NugetPackageFamily_Sort {
  id_asc
  id_desc
  name_asc
  name_desc
  version_asc
  version_desc
}

# Short description of NuGet package
type ClusterKitNodeApi_PackageDescription implements IClusterKitNodeApi_PackageDescription, Node {
  # the package Id
  __id: String

  # the package version
  version: String
  id: ID
}

# The list of connected ClusterKitNodeApi_PackageDescription
#  Short description of NuGet package
type ClusterKitNodeApi_PackageDescription_Connection implements IClusterKitNodeApi_PackageDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_PackageDescription_Edge]
}

# The ClusterKitNodeApi_PackageDescription in a connected list
#  Short description of NuGet package
type ClusterKitNodeApi_PackageDescription_Edge implements IClusterKitNodeApi_PackageDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # Short description of NuGet package
  node: ClusterKitNodeApi_PackageDescription
}

input ClusterKitNodeApi_PackageDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_PackageDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_PackageDescription_Filter_Input

  # id exactly equals to the parameter, id: the package Id
  id: String

  # id not equals to the parameter, id: the package Id
  id_not: String

  # id is a substring of the parameter, id: the package Id
  id_in: String

  # id is not a substring of the parameter, id: the package Id
  id_not_in: String

  # id contains the parameter as substring, id: the package Id
  id_contains: String

  # id doesn't contain the parameter as substring, id: the package Id
  id_not_contains: String

  # id starts with the parameter value, id: the package Id
  id_starts_with: String

  # id doesn't start with the parameter value, id: the package Id
  id_not_starts_with: String

  # id ends with the parameter value, id: the package Id
  id_ends_with: String

  # id doesn't end with the parameter value, id: the package Id
  id_not_ends_with: String

  # id lowercased equals the parameter, id: the package Id
  id_l: String

  # id lowercased doesn't equal the parameter, id: the package Id
  id_l_not: String

  # id lowercased is a substring of the parameter, id: the package Id
  id_l_in: String

  # id lowercased is not a substring of the parameter, id: the package Id
  id_l_not_in: String

  # id lowercased contains the parameter as substring, id: the package Id
  id_l_contains: String

  # id lowercased doesn't contain the parameter as substring, id: the package Id
  id_l_not_contains: String

  # id lowercased starts with the parameter value, id: the package Id
  id_l_starts_with: String

  # id lowercased doesn't start with the parameter value, id: the package Id
  id_l_not_starts_with: String

  # id lowercased ends with the parameter value, id: the package Id
  id_l_ends_with: String

  # id lowercased doesn't end with the parameter value, id: the package Id
  id_l_not_ends_with: String

  # version exactly equals to the parameter, version: the package version
  version: String

  # version not equals to the parameter, version: the package version
  version_not: String

  # version is a substring of the parameter, version: the package version
  version_in: String

  # version is not a substring of the parameter, version: the package version
  version_not_in: String

  # version contains the parameter as substring, version: the package version
  version_contains: String

  # version doesn't contain the parameter as substring, version: the package version
  version_not_contains: String

  # version starts with the parameter value, version: the package version
  version_starts_with: String

  # version doesn't start with the parameter value, version: the package version
  version_not_starts_with: String

  # version ends with the parameter value, version: the package version
  version_ends_with: String

  # version doesn't end with the parameter value, version: the package version
  version_not_ends_with: String

  # version lowercased equals the parameter, version: the package version
  version_l: String

  # version lowercased doesn't equal the parameter, version: the package version
  version_l_not: String

  # version lowercased is a substring of the parameter, version: the package version
  version_l_in: String

  # version lowercased is not a substring of the parameter, version: the package version
  version_l_not_in: String

  # version lowercased contains the parameter as substring, version: the package version
  version_l_contains: String

  # version lowercased doesn't contain the parameter as substring, version: the package version
  version_l_not_contains: String

  # version lowercased starts with the parameter value, version: the package version
  version_l_starts_with: String

  # version lowercased doesn't start with the parameter value, version: the package version
  version_l_not_starts_with: String

  # version lowercased ends with the parameter value, version: the package version
  version_l_ends_with: String

  # version lowercased doesn't end with the parameter value, version: the package version
  version_l_not_ends_with: String
}

# Short description of NuGet package
input ClusterKitNodeApi_PackageDescription_Input {
  # the package Id
  id: String

  # the package version
  version: String
}

enum ClusterKitNodeApi_PackageDescription_Sort {
  id_asc
  id_desc
  version_asc
  version_desc
}

# The package requirement for the template
type ClusterKitNodeApi_PackageRequirement implements IClusterKitNodeApi_PackageRequirement, Node {
  # the Nuget package id
  __id: String

  # the required specific version (in case of null the default version for release will be used)
  specificVersion: String
  id: ID
}

# The list of connected ClusterKitNodeApi_PackageRequirement
#  The package requirement for the template
type ClusterKitNodeApi_PackageRequirement_Connection implements IClusterKitNodeApi_PackageRequirement_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_PackageRequirement_Edge]
}

# The ClusterKitNodeApi_PackageRequirement in a connected list
#  The package requirement for the template
type ClusterKitNodeApi_PackageRequirement_Edge implements IClusterKitNodeApi_PackageRequirement_Edge {
  # A value to use with paging positioning
  cursor: String

  # The package requirement for the template
  node: ClusterKitNodeApi_PackageRequirement
}

input ClusterKitNodeApi_PackageRequirement_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_PackageRequirement_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_PackageRequirement_Filter_Input

  # id exactly equals to the parameter, id: the Nuget package id
  id: String

  # id not equals to the parameter, id: the Nuget package id
  id_not: String

  # id is a substring of the parameter, id: the Nuget package id
  id_in: String

  # id is not a substring of the parameter, id: the Nuget package id
  id_not_in: String

  # id contains the parameter as substring, id: the Nuget package id
  id_contains: String

  # id doesn't contain the parameter as substring, id: the Nuget package id
  id_not_contains: String

  # id starts with the parameter value, id: the Nuget package id
  id_starts_with: String

  # id doesn't start with the parameter value, id: the Nuget package id
  id_not_starts_with: String

  # id ends with the parameter value, id: the Nuget package id
  id_ends_with: String

  # id doesn't end with the parameter value, id: the Nuget package id
  id_not_ends_with: String

  # id lowercased equals the parameter, id: the Nuget package id
  id_l: String

  # id lowercased doesn't equal the parameter, id: the Nuget package id
  id_l_not: String

  # id lowercased is a substring of the parameter, id: the Nuget package id
  id_l_in: String

  # id lowercased is not a substring of the parameter, id: the Nuget package id
  id_l_not_in: String

  # id lowercased contains the parameter as substring, id: the Nuget package id
  id_l_contains: String

  # id lowercased doesn't contain the parameter as substring, id: the Nuget package id
  id_l_not_contains: String

  # id lowercased starts with the parameter value, id: the Nuget package id
  id_l_starts_with: String

  # id lowercased doesn't start with the parameter value, id: the Nuget package id
  id_l_not_starts_with: String

  # id lowercased ends with the parameter value, id: the Nuget package id
  id_l_ends_with: String

  # id lowercased doesn't end with the parameter value, id: the Nuget package id
  id_l_not_ends_with: String

  # specificVersion exactly equals to the parameter, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion: String

  # specificVersion not equals to the parameter, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion_not: String

  # specificVersion is a substring of the parameter, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion_in: String

  # specificVersion is not a substring of the parameter, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_not_in: String

  # specificVersion contains the parameter as substring, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_contains: String

  # specificVersion doesn't contain the parameter as substring, specificVersion:
  # the required specific version (in case of null the default version for release will be used)
  specificVersion_not_contains: String

  # specificVersion starts with the parameter value, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion_starts_with: String

  # specificVersion doesn't start with the parameter value, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_not_starts_with: String

  # specificVersion ends with the parameter value, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion_ends_with: String

  # specificVersion doesn't end with the parameter value, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_not_ends_with: String

  # specificVersion lowercased equals the parameter, specificVersion: the required
  # specific version (in case of null the default version for release will be used)
  specificVersion_l: String

  # specificVersion lowercased doesn't equal the parameter, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_l_not: String

  # specificVersion lowercased is a substring of the parameter, specificVersion:
  # the required specific version (in case of null the default version for release will be used)
  specificVersion_l_in: String

  # specificVersion lowercased is not a substring of the parameter,
  # specificVersion: the required specific version (in case of null the default
  # version for release will be used)
  specificVersion_l_not_in: String

  # specificVersion lowercased contains the parameter as substring,
  # specificVersion: the required specific version (in case of null the default
  # version for release will be used)
  specificVersion_l_contains: String

  # specificVersion lowercased doesn't contain the parameter as substring,
  # specificVersion: the required specific version (in case of null the default
  # version for release will be used)
  specificVersion_l_not_contains: String

  # specificVersion lowercased starts with the parameter value, specificVersion:
  # the required specific version (in case of null the default version for release will be used)
  specificVersion_l_starts_with: String

  # specificVersion lowercased doesn't start with the parameter value,
  # specificVersion: the required specific version (in case of null the default
  # version for release will be used)
  specificVersion_l_not_starts_with: String

  # specificVersion lowercased ends with the parameter value, specificVersion: the
  # required specific version (in case of null the default version for release will be used)
  specificVersion_l_ends_with: String

  # specificVersion lowercased doesn't end with the parameter value,
  # specificVersion: the required specific version (in case of null the default
  # version for release will be used)
  specificVersion_l_not_ends_with: String
}

# The package requirement for the template
input ClusterKitNodeApi_PackageRequirement_Input {
  # the Nuget package id
  id: String

  # the required specific version (in case of null the default version for release will be used)
  specificVersion: String
}

enum ClusterKitNodeApi_PackageRequirement_Sort {
  id_asc
  id_desc
  specificVersion_asc
  specificVersion_desc
}

# Represents a dictionary key-value pair
type ClusterKitNodeApi_Pair_System_String_List_PackageDescription__ implements IClusterKitNodeApi_Pair_System_String_List_PackageDescription__, Node {
  # Gets a dictionary key
  key: String

  # Gets a dictionary value
  value(filter: ClusterKitNodeApi_PackageDescription_Filter_Input, sort: [ClusterKitNodeApi_PackageDescription_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_PackageDescription_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_Pair_System_String_List_PackageDescription__
#  Represents a dictionary key-value pair
type ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection implements IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Edge]
}

# The ClusterKitNodeApi_Pair_System_String_List_PackageDescription__ in a connected list
#  Represents a dictionary key-value pair
type ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Edge implements IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Edge {
  # A value to use with paging positioning
  cursor: String

  # Represents a dictionary key-value pair
  node: ClusterKitNodeApi_Pair_System_String_List_PackageDescription__
}

input ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input

  # key exactly equals to the parameter, key: Gets a dictionary key
  key: String

  # key not equals to the parameter, key: Gets a dictionary key
  key_not: String

  # key is a substring of the parameter, key: Gets a dictionary key
  key_in: String

  # key is not a substring of the parameter, key: Gets a dictionary key
  key_not_in: String

  # key contains the parameter as substring, key: Gets a dictionary key
  key_contains: String

  # key doesn't contain the parameter as substring, key: Gets a dictionary key
  key_not_contains: String

  # key starts with the parameter value, key: Gets a dictionary key
  key_starts_with: String

  # key doesn't start with the parameter value, key: Gets a dictionary key
  key_not_starts_with: String

  # key ends with the parameter value, key: Gets a dictionary key
  key_ends_with: String

  # key doesn't end with the parameter value, key: Gets a dictionary key
  key_not_ends_with: String

  # key lowercased equals the parameter, key: Gets a dictionary key
  key_l: String

  # key lowercased doesn't equal the parameter, key: Gets a dictionary key
  key_l_not: String

  # key lowercased is a substring of the parameter, key: Gets a dictionary key
  key_l_in: String

  # key lowercased is not a substring of the parameter, key: Gets a dictionary key
  key_l_not_in: String

  # key lowercased contains the parameter as substring, key: Gets a dictionary key
  key_l_contains: String

  # key lowercased doesn't contain the parameter as substring, key: Gets a dictionary key
  key_l_not_contains: String

  # key lowercased starts with the parameter value, key: Gets a dictionary key
  key_l_starts_with: String

  # key lowercased doesn't start with the parameter value, key: Gets a dictionary key
  key_l_not_starts_with: String

  # key lowercased ends with the parameter value, key: Gets a dictionary key
  key_l_ends_with: String

  # key lowercased doesn't end with the parameter value, key: Gets a dictionary key
  key_l_not_ends_with: String
}

enum ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Sort {
  key_asc
  key_desc
}

# The cluster configuration with all program modules versions, node templates and configurations
type ClusterKitNodeApi_Release implements IClusterKitNodeApi_Release, Node {
  # The release id
  __id: Int

  # the release major version number
  majorVersion: Int

  # the release minor version number
  minorVersion: Int

  # the release name
  name: String

  # the release notes
  notes: String

  # Release creation date
  created: Date

  # Release start date (the date when cluster was switched on this configuration first time)
  started: Date

  # Release finish date (the date when cluster was switched from this configuration last time)
  finished: Date

  # The release state
  state: ClusterKitNodeApi_EnReleaseState

  # A value indicating whether this release was considered stable
  isStable: Boolean

  # the release configuration
  configuration: ClusterKitNodeApi_ReleaseConfiguration

  # the list of compatible node templates
  compatibleTemplates(filter: ClusterKitNodeApi_CompatibleTemplate_Filter_Input, sort: [ClusterKitNodeApi_CompatibleTemplate_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_CompatibleTemplate_Connection

  # the list of migration operations
  operations(filter: ClusterKitNodeApi_MigrationOperation_Filter_Input, sort: [ClusterKitNodeApi_MigrationOperation_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_MigrationOperation_Connection

  # the list of migration errors
  errors(filter: ClusterKitNodeApi_MigrationError_Filter_Input, sort: [ClusterKitNodeApi_MigrationError_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_MigrationError_Connection
  id: ID
}

# The release configuration description
type ClusterKitNodeApi_ReleaseConfiguration implements IClusterKitNodeApi_ReleaseConfiguration, Node {
  # the list of available packages with their versions
  packages(filter: ClusterKitNodeApi_PackageDescription_Filter_Input, sort: [ClusterKitNodeApi_PackageDescription_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_PackageDescription_Connection

  # the list of configured node templates
  nodeTemplates(filter: ClusterKitNodeApi_NodeTemplate_Filter_Input, sort: [ClusterKitNodeApi_NodeTemplate_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_NodeTemplate_Connection

  # the list of configured cluster migrator templates
  migratorTemplates(filter: ClusterKitNodeApi_MigratorTemplate_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplate_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_MigratorTemplate_Connection

  # the list of seed addresses
  seedAddresses: [String]

  # the list of nuget feeds
  nugetFeeds(filter: ClusterKitNodeApi_NugetFeed_Filter_Input, sort: [ClusterKitNodeApi_NugetFeed_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_NugetFeed_Connection
  id: ID
}

# The release configuration description
input ClusterKitNodeApi_ReleaseConfiguration_Input {
  # the list of available packages with their versions
  packages: [ClusterKitNodeApi_PackageDescription_Input]

  # the list of configured node templates
  nodeTemplates: [ClusterKitNodeApi_NodeTemplate_Input]

  # the list of configured cluster migrator templates
  migratorTemplates: [ClusterKitNodeApi_MigratorTemplate_Input]

  # the list of seed addresses
  seedAddresses: [String]

  # the list of nuget feeds
  nugetFeeds: [ClusterKitNodeApi_NugetFeed_Input]
}

# The list of connected ClusterKitNodeApi_Release
#  The cluster configuration with all program modules versions, node templates and configurations
type ClusterKitNodeApi_Release_Connection implements IClusterKitNodeApi_Release_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_Release_Edge]
}

# The ClusterKitNodeApi_Release in a connected list
#  The cluster configuration with all program modules versions, node templates and configurations
type ClusterKitNodeApi_Release_Edge implements IClusterKitNodeApi_Release_Edge {
  # A value to use with paging positioning
  cursor: String

  # The cluster configuration with all program modules versions, node templates and configurations
  node: ClusterKitNodeApi_Release
}

input ClusterKitNodeApi_Release_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_Release_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_Release_Filter_Input

  # id exactly equals to the parameter, id: The release id
  id: Int

  # id not equals to the parameter, id: The release id
  id_not: Int

  # id is less then the parameter, id: The release id
  id_lt: Int

  # id is less then or equal to the parameter, id: The release id
  id_lte: Int

  # id is greater then the parameter, id: The release id
  id_gt: Int

  # id is greater then or equal to the parameter, id: The release id
  id_gte: Int

  # majorVersion exactly equals to the parameter, majorVersion: the release major version number
  majorVersion: Int

  # majorVersion not equals to the parameter, majorVersion: the release major version number
  majorVersion_not: Int

  # majorVersion is less then the parameter, majorVersion: the release major version number
  majorVersion_lt: Int

  # majorVersion is less then or equal to the parameter, majorVersion: the release major version number
  majorVersion_lte: Int

  # majorVersion is greater then the parameter, majorVersion: the release major version number
  majorVersion_gt: Int

  # majorVersion is greater then or equal to the parameter, majorVersion: the release major version number
  majorVersion_gte: Int

  # minorVersion exactly equals to the parameter, minorVersion: the release minor version number
  minorVersion: Int

  # minorVersion not equals to the parameter, minorVersion: the release minor version number
  minorVersion_not: Int

  # minorVersion is less then the parameter, minorVersion: the release minor version number
  minorVersion_lt: Int

  # minorVersion is less then or equal to the parameter, minorVersion: the release minor version number
  minorVersion_lte: Int

  # minorVersion is greater then the parameter, minorVersion: the release minor version number
  minorVersion_gt: Int

  # minorVersion is greater then or equal to the parameter, minorVersion: the release minor version number
  minorVersion_gte: Int

  # name exactly equals to the parameter, name: the release name
  name: String

  # name not equals to the parameter, name: the release name
  name_not: String

  # name is a substring of the parameter, name: the release name
  name_in: String

  # name is not a substring of the parameter, name: the release name
  name_not_in: String

  # name contains the parameter as substring, name: the release name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the release name
  name_not_contains: String

  # name starts with the parameter value, name: the release name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the release name
  name_not_starts_with: String

  # name ends with the parameter value, name: the release name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the release name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the release name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the release name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the release name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the release name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the release name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the release name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the release name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the release name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the release name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the release name
  name_l_not_ends_with: String

  # notes exactly equals to the parameter, notes: the release notes
  notes: String

  # notes not equals to the parameter, notes: the release notes
  notes_not: String

  # notes is a substring of the parameter, notes: the release notes
  notes_in: String

  # notes is not a substring of the parameter, notes: the release notes
  notes_not_in: String

  # notes contains the parameter as substring, notes: the release notes
  notes_contains: String

  # notes doesn't contain the parameter as substring, notes: the release notes
  notes_not_contains: String

  # notes starts with the parameter value, notes: the release notes
  notes_starts_with: String

  # notes doesn't start with the parameter value, notes: the release notes
  notes_not_starts_with: String

  # notes ends with the parameter value, notes: the release notes
  notes_ends_with: String

  # notes doesn't end with the parameter value, notes: the release notes
  notes_not_ends_with: String

  # notes lowercased equals the parameter, notes: the release notes
  notes_l: String

  # notes lowercased doesn't equal the parameter, notes: the release notes
  notes_l_not: String

  # notes lowercased is a substring of the parameter, notes: the release notes
  notes_l_in: String

  # notes lowercased is not a substring of the parameter, notes: the release notes
  notes_l_not_in: String

  # notes lowercased contains the parameter as substring, notes: the release notes
  notes_l_contains: String

  # notes lowercased doesn't contain the parameter as substring, notes: the release notes
  notes_l_not_contains: String

  # notes lowercased starts with the parameter value, notes: the release notes
  notes_l_starts_with: String

  # notes lowercased doesn't start with the parameter value, notes: the release notes
  notes_l_not_starts_with: String

  # notes lowercased ends with the parameter value, notes: the release notes
  notes_l_ends_with: String

  # notes lowercased doesn't end with the parameter value, notes: the release notes
  notes_l_not_ends_with: String

  # created exactly equals to the parameter, created: Release creation date
  created: Date

  # created not equals to the parameter, created: Release creation date
  created_not: Date

  # created is less then the parameter, created: Release creation date
  created_lt: Date

  # created is less then or equal to the parameter, created: Release creation date
  created_lte: Date

  # created is greater then the parameter, created: Release creation date
  created_gt: Date

  # created is greater then or equal to the parameter, created: Release creation date
  created_gte: Date

  # started exactly equals to the parameter, started: Release start date (the date
  # when cluster was switched on this configuration first time)
  started: Date

  # started not equals to the parameter, started: Release start date (the date
  # when cluster was switched on this configuration first time)
  started_not: Date

  # started is less then the parameter, started: Release start date (the date when
  # cluster was switched on this configuration first time)
  started_lt: Date

  # started is less then or equal to the parameter, started: Release start date
  # (the date when cluster was switched on this configuration first time)
  started_lte: Date

  # started is greater then the parameter, started: Release start date (the date
  # when cluster was switched on this configuration first time)
  started_gt: Date

  # started is greater then or equal to the parameter, started: Release start date
  # (the date when cluster was switched on this configuration first time)
  started_gte: Date

  # finished exactly equals to the parameter, finished: Release finish date (the
  # date when cluster was switched from this configuration last time)
  finished: Date

  # finished not equals to the parameter, finished: Release finish date (the date
  # when cluster was switched from this configuration last time)
  finished_not: Date

  # finished is less then the parameter, finished: Release finish date (the date
  # when cluster was switched from this configuration last time)
  finished_lt: Date

  # finished is less then or equal to the parameter, finished: Release finish date
  # (the date when cluster was switched from this configuration last time)
  finished_lte: Date

  # finished is greater then the parameter, finished: Release finish date (the
  # date when cluster was switched from this configuration last time)
  finished_gt: Date

  # finished is greater then or equal to the parameter, finished: Release finish
  # date (the date when cluster was switched from this configuration last time)
  finished_gte: Date

  # state exactly equals to the parameter, state: The release state
  state: ClusterKitNodeApi_EnReleaseState

  # state not equals to the parameter, state: The release state
  state_not: ClusterKitNodeApi_EnReleaseState

  # isStable exactly equals to the parameter, isStable: A value indicating whether this release was considered stable
  isStable: Boolean

  # isStable not equals to the parameter, isStable: A value indicating whether this release was considered stable
  isStable_not: Boolean
}

# The cluster configuration with all program modules versions, node templates and configurations
input ClusterKitNodeApi_Release_Input {
  # The release id
  id: Int

  # the release major version number
  majorVersion: Int

  # the release minor version number
  minorVersion: Int

  # the release name
  name: String

  # the release notes
  notes: String

  # the release configuration
  configuration: ClusterKitNodeApi_ReleaseConfiguration_Input

  # the list of migration operations
  operations: [ClusterKitNodeApi_MigrationOperation_Input]

  # the list of migration errors
  errors: [ClusterKitNodeApi_MigrationError_Input]
}

type ClusterKitNodeApi_Release_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_Release
  edge: ClusterKitNodeApi_Release_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_Release_Sort {
  id_asc
  id_desc
  majorVersion_asc
  majorVersion_desc
  minorVersion_asc
  minorVersion_desc
  name_asc
  name_desc
  notes_asc
  notes_desc
  created_asc
  created_desc
  started_asc
  started_desc
  finished_asc
  finished_desc
  state_asc
  state_desc
  isStable_asc
  isStable_desc
}

# The resource state according to the migration
type ClusterKitNodeApi_ResourceMigrationState implements IClusterKitNodeApi_ResourceMigrationState, Node {
  # the migration source position for this resource type
  sourcePoint: String

  # the migration destination position for this resource type
  destinationPoint: String

  # the resource current position
  position: ClusterKitNodeApi_EnResourcePosition

  # a value indicating what release can execute migration to source release point
  migrationToSourceExecutor: ClusterKitNodeApi_EnMigrationSide

  # a value indicating what release can execute migration to destination release point
  migrationToDestinationExecutor: ClusterKitNodeApi_EnMigrationSide

  # the human readable resource name
  name: String

  # the resource identification
  code: String

  # the current migration point of the resource
  currentPoint: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ResourceMigrationState
#  The resource state according to the migration
type ClusterKitNodeApi_ResourceMigrationState_Connection implements IClusterKitNodeApi_ResourceMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ResourceMigrationState_Edge]
}

# The ClusterKitNodeApi_ResourceMigrationState in a connected list
#  The resource state according to the migration
type ClusterKitNodeApi_ResourceMigrationState_Edge implements IClusterKitNodeApi_ResourceMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The resource state according to the migration
  node: ClusterKitNodeApi_ResourceMigrationState
}

input ClusterKitNodeApi_ResourceMigrationState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ResourceMigrationState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ResourceMigrationState_Filter_Input

  # sourcePoint exactly equals to the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint: String

  # sourcePoint not equals to the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_not: String

  # sourcePoint is a substring of the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_in: String

  # sourcePoint is not a substring of the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_not_in: String

  # sourcePoint contains the parameter as substring, sourcePoint: the migration source position for this resource type
  sourcePoint_contains: String

  # sourcePoint doesn't contain the parameter as substring, sourcePoint: the migration source position for this resource type
  sourcePoint_not_contains: String

  # sourcePoint starts with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_starts_with: String

  # sourcePoint doesn't start with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_not_starts_with: String

  # sourcePoint ends with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_ends_with: String

  # sourcePoint doesn't end with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_not_ends_with: String

  # sourcePoint lowercased equals the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_l: String

  # sourcePoint lowercased doesn't equal the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_l_not: String

  # sourcePoint lowercased is a substring of the parameter, sourcePoint: the migration source position for this resource type
  sourcePoint_l_in: String

  # sourcePoint lowercased is not a substring of the parameter, sourcePoint: the
  # migration source position for this resource type
  sourcePoint_l_not_in: String

  # sourcePoint lowercased contains the parameter as substring, sourcePoint: the
  # migration source position for this resource type
  sourcePoint_l_contains: String

  # sourcePoint lowercased doesn't contain the parameter as substring,
  # sourcePoint: the migration source position for this resource type
  sourcePoint_l_not_contains: String

  # sourcePoint lowercased starts with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_l_starts_with: String

  # sourcePoint lowercased doesn't start with the parameter value, sourcePoint:
  # the migration source position for this resource type
  sourcePoint_l_not_starts_with: String

  # sourcePoint lowercased ends with the parameter value, sourcePoint: the migration source position for this resource type
  sourcePoint_l_ends_with: String

  # sourcePoint lowercased doesn't end with the parameter value, sourcePoint: the
  # migration source position for this resource type
  sourcePoint_l_not_ends_with: String

  # destinationPoint exactly equals to the parameter, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint: String

  # destinationPoint not equals to the parameter, destinationPoint: the migration destination position for this resource type
  destinationPoint_not: String

  # destinationPoint is a substring of the parameter, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_in: String

  # destinationPoint is not a substring of the parameter, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_not_in: String

  # destinationPoint contains the parameter as substring, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_contains: String

  # destinationPoint doesn't contain the parameter as substring, destinationPoint:
  # the migration destination position for this resource type
  destinationPoint_not_contains: String

  # destinationPoint starts with the parameter value, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_starts_with: String

  # destinationPoint doesn't start with the parameter value, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_not_starts_with: String

  # destinationPoint ends with the parameter value, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_ends_with: String

  # destinationPoint doesn't end with the parameter value, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_not_ends_with: String

  # destinationPoint lowercased equals the parameter, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_l: String

  # destinationPoint lowercased doesn't equal the parameter, destinationPoint: the
  # migration destination position for this resource type
  destinationPoint_l_not: String

  # destinationPoint lowercased is a substring of the parameter, destinationPoint:
  # the migration destination position for this resource type
  destinationPoint_l_in: String

  # destinationPoint lowercased is not a substring of the parameter,
  # destinationPoint: the migration destination position for this resource type
  destinationPoint_l_not_in: String

  # destinationPoint lowercased contains the parameter as substring,
  # destinationPoint: the migration destination position for this resource type
  destinationPoint_l_contains: String

  # destinationPoint lowercased doesn't contain the parameter as substring,
  # destinationPoint: the migration destination position for this resource type
  destinationPoint_l_not_contains: String

  # destinationPoint lowercased starts with the parameter value, destinationPoint:
  # the migration destination position for this resource type
  destinationPoint_l_starts_with: String

  # destinationPoint lowercased doesn't start with the parameter value,
  # destinationPoint: the migration destination position for this resource type
  destinationPoint_l_not_starts_with: String

  # destinationPoint lowercased ends with the parameter value, destinationPoint:
  # the migration destination position for this resource type
  destinationPoint_l_ends_with: String

  # destinationPoint lowercased doesn't end with the parameter value,
  # destinationPoint: the migration destination position for this resource type
  destinationPoint_l_not_ends_with: String

  # position exactly equals to the parameter, position: the resource current position
  position: ClusterKitNodeApi_EnResourcePosition

  # position not equals to the parameter, position: the resource current position
  position_not: ClusterKitNodeApi_EnResourcePosition

  # migrationToSourceExecutor exactly equals to the parameter,
  # migrationToSourceExecutor: a value indicating what release can execute
  # migration to source release point
  migrationToSourceExecutor: ClusterKitNodeApi_EnMigrationSide

  # migrationToSourceExecutor not equals to the parameter,
  # migrationToSourceExecutor: a value indicating what release can execute
  # migration to source release point
  migrationToSourceExecutor_not: ClusterKitNodeApi_EnMigrationSide

  # migrationToDestinationExecutor exactly equals to the parameter,
  # migrationToDestinationExecutor: a value indicating what release can execute
  # migration to destination release point
  migrationToDestinationExecutor: ClusterKitNodeApi_EnMigrationSide

  # migrationToDestinationExecutor not equals to the parameter,
  # migrationToDestinationExecutor: a value indicating what release can execute
  # migration to destination release point
  migrationToDestinationExecutor_not: ClusterKitNodeApi_EnMigrationSide

  # name exactly equals to the parameter, name: the human readable resource name
  name: String

  # name not equals to the parameter, name: the human readable resource name
  name_not: String

  # name is a substring of the parameter, name: the human readable resource name
  name_in: String

  # name is not a substring of the parameter, name: the human readable resource name
  name_not_in: String

  # name contains the parameter as substring, name: the human readable resource name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the human readable resource name
  name_not_contains: String

  # name starts with the parameter value, name: the human readable resource name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the human readable resource name
  name_not_starts_with: String

  # name ends with the parameter value, name: the human readable resource name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the human readable resource name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the human readable resource name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the human readable resource name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the human readable resource name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the human readable resource name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the human readable resource name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the human readable resource name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the human readable resource name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the human readable resource name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the human readable resource name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the human readable resource name
  name_l_not_ends_with: String

  # code exactly equals to the parameter, code: the resource identification
  code: String

  # code not equals to the parameter, code: the resource identification
  code_not: String

  # code is a substring of the parameter, code: the resource identification
  code_in: String

  # code is not a substring of the parameter, code: the resource identification
  code_not_in: String

  # code contains the parameter as substring, code: the resource identification
  code_contains: String

  # code doesn't contain the parameter as substring, code: the resource identification
  code_not_contains: String

  # code starts with the parameter value, code: the resource identification
  code_starts_with: String

  # code doesn't start with the parameter value, code: the resource identification
  code_not_starts_with: String

  # code ends with the parameter value, code: the resource identification
  code_ends_with: String

  # code doesn't end with the parameter value, code: the resource identification
  code_not_ends_with: String

  # code lowercased equals the parameter, code: the resource identification
  code_l: String

  # code lowercased doesn't equal the parameter, code: the resource identification
  code_l_not: String

  # code lowercased is a substring of the parameter, code: the resource identification
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: the resource identification
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: the resource identification
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: the resource identification
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: the resource identification
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: the resource identification
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: the resource identification
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: the resource identification
  code_l_not_ends_with: String

  # currentPoint exactly equals to the parameter, currentPoint: the current migration point of the resource
  currentPoint: String

  # currentPoint not equals to the parameter, currentPoint: the current migration point of the resource
  currentPoint_not: String

  # currentPoint is a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_in: String

  # currentPoint is not a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_not_in: String

  # currentPoint contains the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_contains: String

  # currentPoint doesn't contain the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_not_contains: String

  # currentPoint starts with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_starts_with: String

  # currentPoint doesn't start with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_not_starts_with: String

  # currentPoint ends with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_ends_with: String

  # currentPoint doesn't end with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_not_ends_with: String

  # currentPoint lowercased equals the parameter, currentPoint: the current migration point of the resource
  currentPoint_l: String

  # currentPoint lowercased doesn't equal the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_not: String

  # currentPoint lowercased is a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_in: String

  # currentPoint lowercased is not a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_not_in: String

  # currentPoint lowercased contains the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_l_contains: String

  # currentPoint lowercased doesn't contain the parameter as substring,
  # currentPoint: the current migration point of the resource
  currentPoint_l_not_contains: String

  # currentPoint lowercased starts with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_starts_with: String

  # currentPoint lowercased doesn't start with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_not_starts_with: String

  # currentPoint lowercased ends with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_ends_with: String

  # currentPoint lowercased doesn't end with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_not_ends_with: String
}

enum ClusterKitNodeApi_ResourceMigrationState_Sort {
  sourcePoint_asc
  sourcePoint_desc
  destinationPoint_asc
  destinationPoint_desc
  position_asc
  position_desc
  migrationToSourceExecutor_asc
  migrationToSourceExecutor_desc
  migrationToDestinationExecutor_asc
  migrationToDestinationExecutor_desc
  name_asc
  name_desc
  code_asc
  code_desc
  currentPoint_asc
  currentPoint_desc
}

# The resource description
type ClusterKitNodeApi_ResourceReleaseState implements IClusterKitNodeApi_ResourceReleaseState, Node {
  # the human readable resource name
  name: String

  # the resource identification
  code: String

  # the current migration point of the resource
  currentPoint: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ResourceReleaseState
#  The resource description
type ClusterKitNodeApi_ResourceReleaseState_Connection implements IClusterKitNodeApi_ResourceReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ResourceReleaseState_Edge]
}

# The ClusterKitNodeApi_ResourceReleaseState in a connected list
#  The resource description
type ClusterKitNodeApi_ResourceReleaseState_Edge implements IClusterKitNodeApi_ResourceReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String

  # The resource description
  node: ClusterKitNodeApi_ResourceReleaseState
}

input ClusterKitNodeApi_ResourceReleaseState_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ResourceReleaseState_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ResourceReleaseState_Filter_Input

  # name exactly equals to the parameter, name: the human readable resource name
  name: String

  # name not equals to the parameter, name: the human readable resource name
  name_not: String

  # name is a substring of the parameter, name: the human readable resource name
  name_in: String

  # name is not a substring of the parameter, name: the human readable resource name
  name_not_in: String

  # name contains the parameter as substring, name: the human readable resource name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the human readable resource name
  name_not_contains: String

  # name starts with the parameter value, name: the human readable resource name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the human readable resource name
  name_not_starts_with: String

  # name ends with the parameter value, name: the human readable resource name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the human readable resource name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the human readable resource name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the human readable resource name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the human readable resource name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the human readable resource name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the human readable resource name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the human readable resource name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the human readable resource name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the human readable resource name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the human readable resource name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the human readable resource name
  name_l_not_ends_with: String

  # code exactly equals to the parameter, code: the resource identification
  code: String

  # code not equals to the parameter, code: the resource identification
  code_not: String

  # code is a substring of the parameter, code: the resource identification
  code_in: String

  # code is not a substring of the parameter, code: the resource identification
  code_not_in: String

  # code contains the parameter as substring, code: the resource identification
  code_contains: String

  # code doesn't contain the parameter as substring, code: the resource identification
  code_not_contains: String

  # code starts with the parameter value, code: the resource identification
  code_starts_with: String

  # code doesn't start with the parameter value, code: the resource identification
  code_not_starts_with: String

  # code ends with the parameter value, code: the resource identification
  code_ends_with: String

  # code doesn't end with the parameter value, code: the resource identification
  code_not_ends_with: String

  # code lowercased equals the parameter, code: the resource identification
  code_l: String

  # code lowercased doesn't equal the parameter, code: the resource identification
  code_l_not: String

  # code lowercased is a substring of the parameter, code: the resource identification
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: the resource identification
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: the resource identification
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: the resource identification
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: the resource identification
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: the resource identification
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: the resource identification
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: the resource identification
  code_l_not_ends_with: String

  # currentPoint exactly equals to the parameter, currentPoint: the current migration point of the resource
  currentPoint: String

  # currentPoint not equals to the parameter, currentPoint: the current migration point of the resource
  currentPoint_not: String

  # currentPoint is a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_in: String

  # currentPoint is not a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_not_in: String

  # currentPoint contains the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_contains: String

  # currentPoint doesn't contain the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_not_contains: String

  # currentPoint starts with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_starts_with: String

  # currentPoint doesn't start with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_not_starts_with: String

  # currentPoint ends with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_ends_with: String

  # currentPoint doesn't end with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_not_ends_with: String

  # currentPoint lowercased equals the parameter, currentPoint: the current migration point of the resource
  currentPoint_l: String

  # currentPoint lowercased doesn't equal the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_not: String

  # currentPoint lowercased is a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_in: String

  # currentPoint lowercased is not a substring of the parameter, currentPoint: the current migration point of the resource
  currentPoint_l_not_in: String

  # currentPoint lowercased contains the parameter as substring, currentPoint: the current migration point of the resource
  currentPoint_l_contains: String

  # currentPoint lowercased doesn't contain the parameter as substring,
  # currentPoint: the current migration point of the resource
  currentPoint_l_not_contains: String

  # currentPoint lowercased starts with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_starts_with: String

  # currentPoint lowercased doesn't start with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_not_starts_with: String

  # currentPoint lowercased ends with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_ends_with: String

  # currentPoint lowercased doesn't end with the parameter value, currentPoint: the current migration point of the resource
  currentPoint_l_not_ends_with: String
}

enum ClusterKitNodeApi_ResourceReleaseState_Sort {
  name_asc
  name_desc
  code_asc
  code_desc
  currentPoint_asc
  currentPoint_desc
}

# The overall resource migration state
type ClusterKitNodeApi_ResourceState implements IClusterKitNodeApi_ResourceState, Node {
  # the current resource state with active migration
  migrationState: ClusterKitNodeApi_MigrationActorMigrationState

  # the current resource state without active migration
  releaseState: ClusterKitNodeApi_MigrationActorReleaseState

  # a value indicating whether some resource operation is in progress
  operationIsInProgress: Boolean

  # a value indicating whether a new migration can be initiated
  canCreateMigration: Boolean

  # a value indicating whether resource can be migrated
  canMigrateResources: Boolean

  # a value indicating whether node update can be initiated. The nodes will be updated to the destination release.
  canUpdateNodesToDestination: Boolean

  # a value indicating whether node update can be initiated. The nodes will be updated to the source release.
  canUpdateNodesToSource: Boolean

  # a value indicating whether current migration can be canceled at this stage
  canCancelMigration: Boolean

  # a value indicating whether current migration can be finished at this stage
  canFinishMigration: Boolean
  id: ID
}

# The request to update resources
input ClusterKitNodeApi_ResourceUpgradeRequest_Input {
  # the list of resources to update
  resources: [ClusterKitNodeApi_ResourceUpgrade_Input]
}

# The command to update resource
input ClusterKitNodeApi_ResourceUpgrade_Input {
  # The code of migrator template
  templateCode: String

  # The type name of the migrator
  migratorTypeName: String

  # The resource code
  resourceCode: String

  # The update target
  target: ClusterKitNodeApi_EnMigrationSide
}

# Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_Role implements IClusterKitNodeApi_Role, Node {
  # The role uid
  uid: Uid

  # The role name
  name: String

  # The list of granted privileges
  allowedScope: [String]

  # The list of denied privileges (the user will not acquire this privileges, even if they will be granted via other roles)
  deniedScope: [String]

  # The list of users assigned to this role
  users(filter: ClusterKitNodeApi_User_Filter_Input, sort: [ClusterKitNodeApi_User_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_User_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_Role
#  Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_Role_Connection implements IClusterKitNodeApi_Role_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_Role_Edge]
}

# The ClusterKitNodeApi_Role in a connected list
#  Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_Role_Edge implements IClusterKitNodeApi_Role_Edge {
  # A value to use with paging positioning
  cursor: String

  # Security role. The amount of privileges assigned to the user
  node: ClusterKitNodeApi_Role
}

input ClusterKitNodeApi_Role_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_Role_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_Role_Filter_Input

  # uid exactly equals to the parameter, uid: The role uid
  uid: Uid

  # uid not equals to the parameter, uid: The role uid
  uid_not: Uid

  # name exactly equals to the parameter, name: The role name
  name: String

  # name not equals to the parameter, name: The role name
  name_not: String

  # name is a substring of the parameter, name: The role name
  name_in: String

  # name is not a substring of the parameter, name: The role name
  name_not_in: String

  # name contains the parameter as substring, name: The role name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The role name
  name_not_contains: String

  # name starts with the parameter value, name: The role name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The role name
  name_not_starts_with: String

  # name ends with the parameter value, name: The role name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The role name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The role name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The role name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The role name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The role name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The role name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The role name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The role name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The role name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The role name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The role name
  name_l_not_ends_with: String
}

# Security role. The amount of privileges assigned to the user
input ClusterKitNodeApi_Role_Input {
  # The role uid
  uid: Uid

  # The role name
  name: String

  # The list of granted privileges
  allowedScope: [String]

  # The list of denied privileges (the user will not acquire this privileges, even if they will be granted via other roles)
  deniedScope: [String]
}

type ClusterKitNodeApi_Role_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_Role
  edge: ClusterKitNodeApi_Role_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_Role_Sort {
  uid_asc
  uid_desc
  name_asc
  name_desc
}

# The main ClusterKit node managing methods
type ClusterKitNodeApi_Root implements IClusterKitNodeApi_Root, Node {
  # the cluster management
  clusterManagement: ClusterKitNodeApi_ClusterManagement

  # The packages in the Nuget repository
  nugetPackages(filter: ClusterKitNodeApi_NugetPackageFamily_Filter_Input, sort: [ClusterKitNodeApi_NugetPackageFamily_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_NugetPackageFamily_Connection

  # The list of known active nodes
  getActiveNodeDescriptions(filter: ClusterKitNodeApi_NodeDescription_Filter_Input, sort: [ClusterKitNodeApi_NodeDescription_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_NodeDescription_Connection

  # Current cluster node template usage for debug purposes
  getTemplateStatistics: ClusterKitNodeApi_TemplatesStatistics

  # the cluster migration management
  migrations(filter: ClusterKitNodeApi_Migration_Filter_Input, sort: [ClusterKitNodeApi_Migration_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_Migration_Connection

  # ClusterKit managing system security roles
  releases(filter: ClusterKitNodeApi_Release_Filter_Input, sort: [ClusterKitNodeApi_Release_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_Release_Connection

  # ClusterKit managing system security roles
  roles(filter: ClusterKitNodeApi_Role_Filter_Input, sort: [ClusterKitNodeApi_Role_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_Role_Connection

  # ClusterKit managing system users
  users(filter: ClusterKitNodeApi_User_Filter_Input, sort: [ClusterKitNodeApi_User_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_User_Connection
  id: ID
}

# Overall debug data of current cluster node template use
type ClusterKitNodeApi_TemplatesStatistics implements IClusterKitNodeApi_TemplatesStatistics, Node {
  # node templates statistics data
  templates(filter: ClusterKitNodeApi_TemplatesStatisticsData_Filter_Input, sort: [ClusterKitNodeApi_TemplatesStatisticsData_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_TemplatesStatisticsData_Connection
  id: ID
}

# Statistics data for template
type ClusterKitNodeApi_TemplatesStatisticsData implements IClusterKitNodeApi_TemplatesStatisticsData, Node {
  # current active node count
  activeNodes: Int

  # currently configured maximum required active nodes count
  maximumRequiredNodes: Int

  # currently configured minimum required active nodes count
  minimumRequiredNodes: Int

  # name of the node template
  name: String

  # the number of currently active nodes, that need to be upgraded
  obsoleteNodes: Int

  # the number of nodes that are in upgrade process now
  startingNodes: Int

  # the number of nodes that are in upgrade process now
  upgradingNodes: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_TemplatesStatisticsData
#  Statistics data for template
type ClusterKitNodeApi_TemplatesStatisticsData_Connection implements IClusterKitNodeApi_TemplatesStatisticsData_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_TemplatesStatisticsData_Edge]
}

# The ClusterKitNodeApi_TemplatesStatisticsData in a connected list
#  Statistics data for template
type ClusterKitNodeApi_TemplatesStatisticsData_Edge implements IClusterKitNodeApi_TemplatesStatisticsData_Edge {
  # A value to use with paging positioning
  cursor: String

  # Statistics data for template
  node: ClusterKitNodeApi_TemplatesStatisticsData
}

input ClusterKitNodeApi_TemplatesStatisticsData_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_TemplatesStatisticsData_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_TemplatesStatisticsData_Filter_Input

  # activeNodes exactly equals to the parameter, activeNodes: current active node count
  activeNodes: Int

  # activeNodes not equals to the parameter, activeNodes: current active node count
  activeNodes_not: Int

  # activeNodes is less then the parameter, activeNodes: current active node count
  activeNodes_lt: Int

  # activeNodes is less then or equal to the parameter, activeNodes: current active node count
  activeNodes_lte: Int

  # activeNodes is greater then the parameter, activeNodes: current active node count
  activeNodes_gt: Int

  # activeNodes is greater then or equal to the parameter, activeNodes: current active node count
  activeNodes_gte: Int

  # maximumRequiredNodes exactly equals to the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes: Int

  # maximumRequiredNodes not equals to the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_not: Int

  # maximumRequiredNodes is less then the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_lt: Int

  # maximumRequiredNodes is less then or equal to the parameter,
  # maximumRequiredNodes: currently configured maximum required active nodes count
  maximumRequiredNodes_lte: Int

  # maximumRequiredNodes is greater then the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_gt: Int

  # maximumRequiredNodes is greater then or equal to the parameter,
  # maximumRequiredNodes: currently configured maximum required active nodes count
  maximumRequiredNodes_gte: Int

  # minimumRequiredNodes exactly equals to the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes: Int

  # minimumRequiredNodes not equals to the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_not: Int

  # minimumRequiredNodes is less then the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_lt: Int

  # minimumRequiredNodes is less then or equal to the parameter,
  # minimumRequiredNodes: currently configured minimum required active nodes count
  minimumRequiredNodes_lte: Int

  # minimumRequiredNodes is greater then the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_gt: Int

  # minimumRequiredNodes is greater then or equal to the parameter,
  # minimumRequiredNodes: currently configured minimum required active nodes count
  minimumRequiredNodes_gte: Int

  # name exactly equals to the parameter, name: name of the node template
  name: String

  # name not equals to the parameter, name: name of the node template
  name_not: String

  # name is a substring of the parameter, name: name of the node template
  name_in: String

  # name is not a substring of the parameter, name: name of the node template
  name_not_in: String

  # name contains the parameter as substring, name: name of the node template
  name_contains: String

  # name doesn't contain the parameter as substring, name: name of the node template
  name_not_contains: String

  # name starts with the parameter value, name: name of the node template
  name_starts_with: String

  # name doesn't start with the parameter value, name: name of the node template
  name_not_starts_with: String

  # name ends with the parameter value, name: name of the node template
  name_ends_with: String

  # name doesn't end with the parameter value, name: name of the node template
  name_not_ends_with: String

  # name lowercased equals the parameter, name: name of the node template
  name_l: String

  # name lowercased doesn't equal the parameter, name: name of the node template
  name_l_not: String

  # name lowercased is a substring of the parameter, name: name of the node template
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: name of the node template
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: name of the node template
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: name of the node template
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: name of the node template
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: name of the node template
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: name of the node template
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: name of the node template
  name_l_not_ends_with: String

  # obsoleteNodes exactly equals to the parameter, obsoleteNodes: the number of
  # currently active nodes, that need to be upgraded
  obsoleteNodes: Int

  # obsoleteNodes not equals to the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_not: Int

  # obsoleteNodes is less then the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_lt: Int

  # obsoleteNodes is less then or equal to the parameter, obsoleteNodes: the
  # number of currently active nodes, that need to be upgraded
  obsoleteNodes_lte: Int

  # obsoleteNodes is greater then the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_gt: Int

  # obsoleteNodes is greater then or equal to the parameter, obsoleteNodes: the
  # number of currently active nodes, that need to be upgraded
  obsoleteNodes_gte: Int

  # startingNodes exactly equals to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes: Int

  # startingNodes not equals to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_not: Int

  # startingNodes is less then the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_lt: Int

  # startingNodes is less then or equal to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_lte: Int

  # startingNodes is greater then the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_gt: Int

  # startingNodes is greater then or equal to the parameter, startingNodes: the
  # number of nodes that are in upgrade process now
  startingNodes_gte: Int

  # upgradingNodes exactly equals to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes: Int

  # upgradingNodes not equals to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_not: Int

  # upgradingNodes is less then the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_lt: Int

  # upgradingNodes is less then or equal to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_lte: Int

  # upgradingNodes is greater then the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_gt: Int

  # upgradingNodes is greater then or equal to the parameter, upgradingNodes: the
  # number of nodes that are in upgrade process now
  upgradingNodes_gte: Int
}

enum ClusterKitNodeApi_TemplatesStatisticsData_Sort {
  activeNodes_asc
  activeNodes_desc
  maximumRequiredNodes_asc
  maximumRequiredNodes_desc
  minimumRequiredNodes_asc
  minimumRequiredNodes_desc
  name_asc
  name_desc
  obsoleteNodes_asc
  obsoleteNodes_desc
  startingNodes_asc
  startingNodes_desc
  upgradingNodes_asc
  upgradingNodes_desc
}

# The web ui user
type ClusterKitNodeApi_User implements IClusterKitNodeApi_User, Node {
  # The list of roles assigned to this user
  roles(filter: ClusterKitNodeApi_Role_Filter_Input, sort: [ClusterKitNodeApi_Role_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_Role_Connection

  # The user uid
  uid: Uid

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
  id: ID
}

# The list of connected ClusterKitNodeApi_User
#  The web ui user
type ClusterKitNodeApi_User_Connection implements IClusterKitNodeApi_User_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_User_Edge]
}

# The ClusterKitNodeApi_User in a connected list
#  The web ui user
type ClusterKitNodeApi_User_Edge implements IClusterKitNodeApi_User_Edge {
  # A value to use with paging positioning
  cursor: String

  # The web ui user
  node: ClusterKitNodeApi_User
}

input ClusterKitNodeApi_User_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_User_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_User_Filter_Input

  # uid exactly equals to the parameter, uid: The user uid
  uid: Uid

  # uid not equals to the parameter, uid: The user uid
  uid_not: Uid

  # activeTill exactly equals to the parameter, activeTill: A date, till which
  # user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # activeTill not equals to the parameter, activeTill: A date, till which user is
  # active. After this date the user will be blocked. Null for unlimited work.
  activeTill_not: Date

  # activeTill is less then the parameter, activeTill: A date, till which user is
  # active. After this date the user will be blocked. Null for unlimited work.
  activeTill_lt: Date

  # activeTill is less then or equal to the parameter, activeTill: A date, till
  # which user is active. After this date the user will be blocked. Null for
  # unlimited work.
  activeTill_lte: Date

  # activeTill is greater then the parameter, activeTill: A date, till which user
  # is active. After this date the user will be blocked. Null for unlimited work.
  activeTill_gt: Date

  # activeTill is greater then or equal to the parameter, activeTill: A date, till
  # which user is active. After this date the user will be blocked. Null for
  # unlimited work.
  activeTill_gte: Date

  # blockedTill exactly equals to the parameter, blockedTill: A date, till which
  # user is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill: Date

  # blockedTill not equals to the parameter, blockedTill: A date, till which user
  # is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_not: Date

  # blockedTill is less then the parameter, blockedTill: A date, till which user
  # is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_lt: Date

  # blockedTill is less then or equal to the parameter, blockedTill: A date, till
  # which user is temporary blocked. After this date the user will be blocked.
  # Null for unlimited work.
  blockedTill_lte: Date

  # blockedTill is greater then the parameter, blockedTill: A date, till which
  # user is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_gt: Date

  # blockedTill is greater then or equal to the parameter, blockedTill: A date,
  # till which user is temporary blocked. After this date the user will be
  # blocked. Null for unlimited work.
  blockedTill_gte: Date

  # isBlocked exactly equals to the parameter, isBlocked: A value indicating
  # whether current user is currently manually blocked
  isBlocked: Boolean

  # isBlocked not equals to the parameter, isBlocked: A value indicating whether current user is currently manually blocked
  isBlocked_not: Boolean

  # isDeleted exactly equals to the parameter, isDeleted: A value indicating
  # whether current user is currently manually blocked
  isDeleted: Boolean

  # isDeleted not equals to the parameter, isDeleted: A value indicating whether current user is currently manually blocked
  isDeleted_not: Boolean

  # login exactly equals to the parameter, login: The user login
  login: String

  # login not equals to the parameter, login: The user login
  login_not: String

  # login is a substring of the parameter, login: The user login
  login_in: String

  # login is not a substring of the parameter, login: The user login
  login_not_in: String

  # login contains the parameter as substring, login: The user login
  login_contains: String

  # login doesn't contain the parameter as substring, login: The user login
  login_not_contains: String

  # login starts with the parameter value, login: The user login
  login_starts_with: String

  # login doesn't start with the parameter value, login: The user login
  login_not_starts_with: String

  # login ends with the parameter value, login: The user login
  login_ends_with: String

  # login doesn't end with the parameter value, login: The user login
  login_not_ends_with: String

  # login lowercased equals the parameter, login: The user login
  login_l: String

  # login lowercased doesn't equal the parameter, login: The user login
  login_l_not: String

  # login lowercased is a substring of the parameter, login: The user login
  login_l_in: String

  # login lowercased is not a substring of the parameter, login: The user login
  login_l_not_in: String

  # login lowercased contains the parameter as substring, login: The user login
  login_l_contains: String

  # login lowercased doesn't contain the parameter as substring, login: The user login
  login_l_not_contains: String

  # login lowercased starts with the parameter value, login: The user login
  login_l_starts_with: String

  # login lowercased doesn't start with the parameter value, login: The user login
  login_l_not_starts_with: String

  # login lowercased ends with the parameter value, login: The user login
  login_l_ends_with: String

  # login lowercased doesn't end with the parameter value, login: The user login
  login_l_not_ends_with: String
}

# The web ui user
input ClusterKitNodeApi_User_Input {
  # The user uid
  uid: Uid

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
}

type ClusterKitNodeApi_User_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_User
  edge: ClusterKitNodeApi_User_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_User_Sort {
  uid_asc
  uid_desc
  activeTill_asc
  activeTill_desc
  blockedTill_asc
  blockedTill_desc
  isBlocked_asc
  isBlocked_desc
  isDeleted_asc
  isDeleted_desc
  login_asc
  login_desc
}

input ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationCancel_Input {
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationFinish_Input {
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationNodesUpdate_Input {
  # The update direction
  target: ClusterKitNodeApi_EnMigrationSide
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationResourceUpdate_Input {
  # The list of resources to update
  request: ClusterKitNodeApi_ResourceUpgradeRequest_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_check_Input {
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_Release_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_delete_Input {
  # The object's id
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_setObsolete_Input {
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_setReady_Input {
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_setStable_Input {
  id: Int
  isStable: Boolean
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_releases_update_Input {
  # The object's id
  id: Int

  # The object's data
  newNode: ClusterKitNodeApi_Release_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_roles_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_Role_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_roles_grantToUser_Input {
  userUid: Uid
  roleUid: Uid
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_roles_update_Input {
  # The object's id
  id: Uid

  # The object's data
  newNode: ClusterKitNodeApi_Role_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_roles_withdrawFromUser_Input {
  userUid: Uid
  roleUid: Uid
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_upgradeNode_Input {
  address: String
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_users_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_User_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_users_grantRole_Input {
  userUid: Uid
  roleUid: Uid
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_users_resetPassword_Input {
  id: Uid
  password: String
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_users_update_Input {
  # The object's id
  id: Uid

  # The object's data
  newNode: ClusterKitNodeApi_User_Input
  clientMutationId: String
}

input ClusterKitNodeApi_clusterKitNodesApi_users_withdrawRole_Input {
  userUid: Uid
  roleUid: Uid
  clientMutationId: String
}

input ClusterKitNodeApi_me_changePassword_Input {
  # The user current password
  oldPassword: String

  # The user new password
  newPassword: String
  clientMutationId: String
}

# The `Date` scalar type represents a timestamp provided in UTC. `Date` expects
# timestamps to be formatted in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar Date

scalar Decimal

# ClusterKit node monitoring
interface IClusterKitMonitoring {
  id: ID

  # ClusterKit node monitoring
  clusterKitMonitoringApi: IClusterKitMonitoring_Root

  # The node global searcher according to Relay specification
  __node(
    # The node global id
    id: ID
  ): Node
}

# Global cluster actors tree scan result
interface IClusterKitMonitoring_ClusterTree {
  id: ID

  # Gets the list of nodes
  nodes(filter: ClusterKitMonitoring_Pair_System_String_Node__Filter_Input, sort: [ClusterKitMonitoring_Pair_System_String_Node__Sort], id: String, offset: Int, limit: Int): IClusterKitMonitoring_Pair_System_String_Node__Connection

  # Gets the sum of queue size across tree
  queueSizeSum: Int

  # Gets the maximum queue size among tree nodes
  maxQueueSize: Int
}

# The actor's description
interface IClusterKitMonitoring_Node {
  id: ID

  # the actor's type
  actorType: String

  # the actor's last message
  currentMessage: String

  # the actor's dispatcher id
  dispatcherId: String

  # the actor's dispatcher type
  dispatcherType: String

  # the maximum queue size among it's children
  maxQueueSize: Int

  # the actor's name
  name: String

  # the actor's queue size
  queueSize: Int

  # the maximum queue size among it's children
  queueSizeSum: Int

  # the actor's children
  children(filter: ClusterKitMonitoring_Node_Filter_Input, sort: [ClusterKitMonitoring_Node_Sort], id: String, offset: Int, limit: Int): IClusterKitMonitoring_Node_Connection
}

# The list of connected ClusterKitMonitoring_Node
#  The actor's description
interface IClusterKitMonitoring_Node_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitMonitoring_Node_Edge]
}

# The ClusterKitMonitoring_Node in a connected list
#  The actor's description
interface IClusterKitMonitoring_Node_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitMonitoring_Node
}

# Represents a dictionary key-value pair
interface IClusterKitMonitoring_Pair_System_String_Node_ {
  id: ID

  # Gets a dictionary key
  key: String

  # Gets a dictionary value
  value: IClusterKitMonitoring_Node
}

# The list of connected ClusterKitMonitoring_Pair_System_String_Node_
#  Represents a dictionary key-value pair
interface IClusterKitMonitoring_Pair_System_String_Node__Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitMonitoring_Pair_System_String_Node__Edge]
}

# The ClusterKitMonitoring_Pair_System_String_Node_ in a connected list
#  Represents a dictionary key-value pair
interface IClusterKitMonitoring_Pair_System_String_Node__Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitMonitoring_Pair_System_String_Node_
}

# ClusterKit monitoring api
interface IClusterKitMonitoring_Root {
  id: ID

  # Gets the last cluster scan result. Changes as system receives the scan results from nodes
  getClusterTree: IClusterKitMonitoring_ClusterTree
}

# The root provider
interface IClusterKitNodeApi {
  id: ID

  # The ClusterKit node managing API
  clusterKitNodesApi: IClusterKitNodeApi_Root

  # The current user
  me: IClusterKitNodeApi_CurrentUserApi

  # The node global searcher according to Relay specification
  __node(
    # The node global id
    id: ID
  ): Node
}

# Akka system address
interface IClusterKitNodeApi_AkkaAddress {
  id: ID

  # the address string representation
  asString: String

  # the address host
  host: String

  # the address port
  port: Int

  # the address protocol
  protocol: String

  # the address system name
  system: String
}

# Short user description
interface IClusterKitNodeApi_ClusterKitUserDescription {
  id: ID

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
}

# Publishes access to the authenticated user information
interface IClusterKitNodeApi_ClusterManagement {
  id: ID

  # The current cluster resources state
  resourceState: IClusterKitNodeApi_ResourceState

  # The current cluster release
  currentRelease: IClusterKitNodeApi_Release

  # The current cluster release
  currentMigration: IClusterKitNodeApi_Migration
}

# The compatible node template
interface IClusterKitNodeApi_CompatibleTemplate {
  id: ID

  # the relation id
  __id: Int

  # the compatible release id
  compatibleReleaseId: Int

  # the parent release id
  releaseId: Int

  # the template code
  templateCode: String

  # the compatible release
  compatibleRelease: IClusterKitNodeApi_Release

  # the parent release
  release: IClusterKitNodeApi_Release
}

# The list of connected ClusterKitNodeApi_CompatibleTemplate
#  The compatible node template
interface IClusterKitNodeApi_CompatibleTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_CompatibleTemplate_Edge]
}

# The ClusterKitNodeApi_CompatibleTemplate in a connected list
#  The compatible node template
interface IClusterKitNodeApi_CompatibleTemplate_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_CompatibleTemplate
}

# Publishes access to the authenticated user information
interface IClusterKitNodeApi_CurrentUserApi {
  id: ID

  # Authenticated user
  clusterKitUser: IClusterKitNodeApi_ClusterKitUserDescription

  # The current user privileges
  clusterKitUserPrivileges: [String]

  # The current application privileges
  clusterKitClientPrivileges: [String]
}

# The mutation error description
interface IClusterKitNodeApi_ErrorDescription {
  id: ID

  # The error number
  number: Int

  # The related field name
  field: String

  # The error message
  message: String
}

# The list of connected ClusterKitNodeApi_ErrorDescription
#  The mutation error description
interface IClusterKitNodeApi_ErrorDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_ErrorDescription_Edge]
}

# The ClusterKitNodeApi_ErrorDescription in a connected list
#  The mutation error description
interface IClusterKitNodeApi_ErrorDescription_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_ErrorDescription
}

# The history record describing cluster migration
interface IClusterKitNodeApi_Migration {
  id: ID

  # The migration id
  __id: Int

  # a value indicating that current migration is in process
  isActive: Boolean

  # the migration state
  state: ClusterKitNodeApi_EnMigrationState

  # the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection

  # the migration start time
  started: Date

  # the migration finish time
  finished: Date

  # the list of migration operations
  operations(filter: ClusterKitNodeApi_MigrationOperation_Filter_Input, sort: [ClusterKitNodeApi_MigrationOperation_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_MigrationOperation_Connection

  # the list of migration errors
  errors(filter: ClusterKitNodeApi_MigrationError_Filter_Input, sort: [ClusterKitNodeApi_MigrationError_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_MigrationError_Connection

  # the previous release id
  fromReleaseId: Int

  # the new release id
  toReleaseId: Int

  # the previous release
  fromRelease: IClusterKitNodeApi_Release

  # the new release
  toRelease: IClusterKitNodeApi_Release
}

# The MigrationActor state with active migration
interface IClusterKitNodeApi_MigrationActorMigrationState {
  id: ID

  # the current migration position
  position: ClusterKitNodeApi_EnMigrationActorMigrationPosition

  # the list of migration states
  templateStates(filter: ClusterKitNodeApi_MigratorTemplateMigrationState_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplateMigrationState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_MigratorTemplateMigrationState_Connection
}

# The MigrationActor state with no active migration
interface IClusterKitNodeApi_MigrationActorReleaseState {
  id: ID

  # the list of template states
  states(filter: ClusterKitNodeApi_MigratorTemplateReleaseState_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplateReleaseState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_MigratorTemplateReleaseState_Connection
}

# The error description during the resource check and/or migration
interface IClusterKitNodeApi_MigrationError {
  id: ID

  # the error occurrence time
  created: Date

  # the resource name
  errorMessage: String

  # the error stack trace
  errorStackTrace: String

  # the migration id
  __id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: IClusterKitNodeApi_Release

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
}

# The list of connected ClusterKitNodeApi_MigrationError
#  The error description during the resource check and/or migration
interface IClusterKitNodeApi_MigrationError_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigrationError_Edge]
}

# The ClusterKitNodeApi_MigrationError in a connected list
#  The error description during the resource check and/or migration
interface IClusterKitNodeApi_MigrationError_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigrationError
}

# The cluster migration operation
interface IClusterKitNodeApi_MigrationOperation {
  id: ID

  # the operation execution start time
  started: Date

  # the operation execution finish time
  finished: Date

  # the source migration point
  sourcePoint: String

  # the destination migration point
  destinationPoint: String

  # the execution error id
  errorId: Int

  # the execution error
  error: IClusterKitNodeApi_MigrationError

  # the migration id
  __id: Int

  # the migration id
  migrationId: Int

  # the release id
  releaseId: Int

  # the release
  release: IClusterKitNodeApi_Release

  # the migrator template code
  migratorTemplateCode: String

  # the migrator template name
  migratorTemplateName: String

  # the migrator type name
  migratorTypeName: String

  # the migrator name
  migratorName: String

  # the resource code
  resourceCode: String

  # the resource name
  resourceName: String
}

# The list of connected ClusterKitNodeApi_MigrationOperation
#  The cluster migration operation
interface IClusterKitNodeApi_MigrationOperation_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigrationOperation_Edge]
}

# The ClusterKitNodeApi_MigrationOperation in a connected list
#  The cluster migration operation
interface IClusterKitNodeApi_MigrationOperation_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigrationOperation
}

# The list of connected ClusterKitNodeApi_Migration
#  The history record describing cluster migration
interface IClusterKitNodeApi_Migration_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_Migration_Edge]
}

# The ClusterKitNodeApi_Migration in a connected list
#  The history record describing cluster migration
interface IClusterKitNodeApi_Migration_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_Migration
}

# The migrator state according to the migration
interface IClusterKitNodeApi_MigratorMigrationState {
  id: ID

  # the migrator type name
  typeName: String

  # the migrator name
  name: String

  # the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # the list of resources states
  resources(filter: ClusterKitNodeApi_ResourceMigrationState_Filter_Input, sort: [ClusterKitNodeApi_ResourceMigrationState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_ResourceMigrationState_Connection

  # the migration direction
  direction: ClusterKitNodeApi_EnMigrationDirection
}

# The list of connected ClusterKitNodeApi_MigratorMigrationState
#  The migrator state according to the migration
interface IClusterKitNodeApi_MigratorMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigratorMigrationState_Edge]
}

# The ClusterKitNodeApi_MigratorMigrationState in a connected list
#  The migrator state according to the migration
interface IClusterKitNodeApi_MigratorMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigratorMigrationState
}

# The state of migrators resources
interface IClusterKitNodeApi_MigratorReleaseState {
  id: ID

  # the migrator type name
  typeName: String

  # the migrator name
  name: String

  # the migrator defined migration points
  migrationPoints: [String]

  # the last defined point for current release
  lastDefinedPoint: String

  # the state of defined resources
  resources(filter: ClusterKitNodeApi_ResourceReleaseState_Filter_Input, sort: [ClusterKitNodeApi_ResourceReleaseState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_ResourceReleaseState_Connection
}

# The list of connected ClusterKitNodeApi_MigratorReleaseState
#  The state of migrators resources
interface IClusterKitNodeApi_MigratorReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigratorReleaseState_Edge]
}

# The ClusterKitNodeApi_MigratorReleaseState in a connected list
#  The state of migrators resources
interface IClusterKitNodeApi_MigratorReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigratorReleaseState
}

# A cluster migrator template definition
interface IClusterKitNodeApi_MigratorTemplate {
  id: ID

  # The program readable migrator template name
  code: String

  # The akka configuration for migrator
  configuration: String

  # The human readable migrator template name
  name: String

  # The migrator description for other users
  notes: String

  # The priority weight for migrator, when deciding witch migrator should be
  # called first. During cluster upgrade process migrators a called from most
  # prioritised to less. During downgrade in backwards order.
  priority: Float

  # The list of package requirements
  packageRequirements(filter: ClusterKitNodeApi_PackageRequirement_Filter_Input, sort: [ClusterKitNodeApi_PackageRequirement_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_PackageRequirement_Connection

  # The list of packages to install for current template
  packagesToInstall(filter: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input, sort: [ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection
}

# The migrator template state according to the migration
interface IClusterKitNodeApi_MigratorTemplateMigrationState {
  id: ID

  # the template code
  code: String

  # the migrator template from source release
  sourceTemplate: IClusterKitNodeApi_MigratorTemplate

  # the migrator template from destination release
  destinationTemplate: IClusterKitNodeApi_MigratorTemplate

  # the current migrator position
  position: ClusterKitNodeApi_EnMigratorPosition

  # the list of states of migratorsn
  migrators(filter: ClusterKitNodeApi_MigratorMigrationState_Filter_Input, sort: [ClusterKitNodeApi_MigratorMigrationState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_MigratorMigrationState_Connection
}

# The list of connected ClusterKitNodeApi_MigratorTemplateMigrationState
#  The migrator template state according to the migration
interface IClusterKitNodeApi_MigratorTemplateMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigratorTemplateMigrationState_Edge]
}

# The ClusterKitNodeApi_MigratorTemplateMigrationState in a connected list
#  The migrator template state according to the migration
interface IClusterKitNodeApi_MigratorTemplateMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigratorTemplateMigrationState
}

# The state of resources of the migrator template
interface IClusterKitNodeApi_MigratorTemplateReleaseState {
  id: ID

  # the template code
  code: String

  # the migrator template
  template: IClusterKitNodeApi_MigratorTemplate

  # the migrator states
  migratorsStates(filter: ClusterKitNodeApi_MigratorReleaseState_Filter_Input, sort: [ClusterKitNodeApi_MigratorReleaseState_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_MigratorReleaseState_Connection
}

# The list of connected ClusterKitNodeApi_MigratorTemplateReleaseState
#  The state of resources of the migrator template
interface IClusterKitNodeApi_MigratorTemplateReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigratorTemplateReleaseState_Edge]
}

# The ClusterKitNodeApi_MigratorTemplateReleaseState in a connected list
#  The state of resources of the migrator template
interface IClusterKitNodeApi_MigratorTemplateReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigratorTemplateReleaseState
}

# The list of connected ClusterKitNodeApi_MigratorTemplate
#  A cluster migrator template definition
interface IClusterKitNodeApi_MigratorTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_MigratorTemplate_Edge]
}

# The ClusterKitNodeApi_MigratorTemplate in a connected list
#  A cluster migrator template definition
interface IClusterKitNodeApi_MigratorTemplate_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_MigratorTemplate
}

# The standard mutation result
interface IClusterKitNodeApi_MutationResult_System_Boolean_ {
  id: ID

  # The mutated object result
  result: Boolean

  # The list of mutation errors
  errors(filter: ClusterKitNodeApi_ErrorDescription_Filter_Input, sort: [ClusterKitNodeApi_ErrorDescription_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_ErrorDescription_Connection
}

# Description of node configuration
interface IClusterKitNodeApi_NodeDescription {
  id: ID

  # symbolic container type code
  containerType: String

  # a value indicating whether the current node is cluster leader
  isClusterLeader: Boolean

  # a value indicating whether software and or configuration is obsolete and needed to be upgraded
  isObsolete: Boolean

  # a value indicating whether this is complete description
  isInitialized: Boolean

  # the list of roles, where current node is leader
  leaderInRoles: [String]

  # The node's address
  nodeAddress: IClusterKitNodeApi_AkkaAddress

  # request id to indicate node instance startup
  nodeId: Uid

  # node template code
  nodeTemplate: String

  # the installed release id
  releaseId: Int

  # the list of cluster roles
  roles: [String]

  # node start time
  startTimeStamp: Int
}

# The list of connected ClusterKitNodeApi_NodeDescription
#  Description of node configuration
interface IClusterKitNodeApi_NodeDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_NodeDescription_Edge]
}

# The ClusterKitNodeApi_NodeDescription in a connected list
#  Description of node configuration
interface IClusterKitNodeApi_NodeDescription_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_NodeDescription
}

# Node template description
interface IClusterKitNodeApi_NodeTemplate {
  id: ID

  # The program readable node template name
  code: String

  # The akka configuration template for node
  configuration: String

  # The list of container types to install node templates
  containerTypes: [String]

  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances: Int

  # The human readable node template name
  name: String

  # The template description for other users
  notes: String

  # The priority weight for service, when deciding witch template should be brought up
  priority: Float

  # The list of package requirements
  packageRequirements(filter: ClusterKitNodeApi_PackageRequirement_Filter_Input, sort: [ClusterKitNodeApi_PackageRequirement_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_PackageRequirement_Connection

  # The list of packages to install for current template
  packagesToInstall(filter: ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Filter_Input, sort: [ClusterKitNodeApi_Pair_System_String_List_PackageDescription___Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection

  # A value indicating whether no other nodes from previous releases are compatible
  forceUpdate: Boolean
}

# The list of connected ClusterKitNodeApi_NodeTemplate
#  Node template description
interface IClusterKitNodeApi_NodeTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_NodeTemplate_Edge]
}

# The ClusterKitNodeApi_NodeTemplate in a connected list
#  Node template description
interface IClusterKitNodeApi_NodeTemplate_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_NodeTemplate
}

# The link to the nuget feed to download updates
interface IClusterKitNodeApi_NugetFeed {
  id: ID

  # The seed url address
  address: String

  # The user password for basic authentication
  password: String

  # The  type of feed
  type: ClusterKitNodeApi_EnFeedType

  # The username for basic authentication
  userName: String
}

# The list of connected ClusterKitNodeApi_NugetFeed
#  The link to the nuget feed to download updates
interface IClusterKitNodeApi_NugetFeed_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_NugetFeed_Edge]
}

# The ClusterKitNodeApi_NugetFeed in a connected list
#  The link to the nuget feed to download updates
interface IClusterKitNodeApi_NugetFeed_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_NugetFeed
}

# Short description of NuGet package family
interface IClusterKitNodeApi_NugetPackageFamily {
  id: ID

  # The package id (name and version)
  __id: String

  # The package name
  name: String

  # The package version
  version: String

  # The list of available versions
  availableVersions: [String]
}

# The list of connected ClusterKitNodeApi_NugetPackageFamily
#  Short description of NuGet package family
interface IClusterKitNodeApi_NugetPackageFamily_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_NugetPackageFamily_Edge]
}

# The ClusterKitNodeApi_NugetPackageFamily in a connected list
#  Short description of NuGet package family
interface IClusterKitNodeApi_NugetPackageFamily_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_NugetPackageFamily
}

# Short description of NuGet package
interface IClusterKitNodeApi_PackageDescription {
  id: ID

  # the package Id
  __id: String

  # the package version
  version: String
}

# The list of connected ClusterKitNodeApi_PackageDescription
#  Short description of NuGet package
interface IClusterKitNodeApi_PackageDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_PackageDescription_Edge]
}

# The ClusterKitNodeApi_PackageDescription in a connected list
#  Short description of NuGet package
interface IClusterKitNodeApi_PackageDescription_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_PackageDescription
}

# The package requirement for the template
interface IClusterKitNodeApi_PackageRequirement {
  id: ID

  # the Nuget package id
  __id: String

  # the required specific version (in case of null the default version for release will be used)
  specificVersion: String
}

# The list of connected ClusterKitNodeApi_PackageRequirement
#  The package requirement for the template
interface IClusterKitNodeApi_PackageRequirement_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_PackageRequirement_Edge]
}

# The ClusterKitNodeApi_PackageRequirement in a connected list
#  The package requirement for the template
interface IClusterKitNodeApi_PackageRequirement_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_PackageRequirement
}

# Represents a dictionary key-value pair
interface IClusterKitNodeApi_Pair_System_String_List_PackageDescription__ {
  id: ID

  # Gets a dictionary key
  key: String

  # Gets a dictionary value
  value(filter: ClusterKitNodeApi_PackageDescription_Filter_Input, sort: [ClusterKitNodeApi_PackageDescription_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_PackageDescription_Connection
}

# The list of connected ClusterKitNodeApi_Pair_System_String_List_PackageDescription__
#  Represents a dictionary key-value pair
interface IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Edge]
}

# The ClusterKitNodeApi_Pair_System_String_List_PackageDescription__ in a connected list
#  Represents a dictionary key-value pair
interface IClusterKitNodeApi_Pair_System_String_List_PackageDescription___Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_Pair_System_String_List_PackageDescription__
}

# The cluster configuration with all program modules versions, node templates and configurations
interface IClusterKitNodeApi_Release {
  id: ID

  # The release id
  __id: Int

  # the release major version number
  majorVersion: Int

  # the release minor version number
  minorVersion: Int

  # the release name
  name: String

  # the release notes
  notes: String

  # Release creation date
  created: Date

  # Release start date (the date when cluster was switched on this configuration first time)
  started: Date

  # Release finish date (the date when cluster was switched from this configuration last time)
  finished: Date

  # The release state
  state: ClusterKitNodeApi_EnReleaseState

  # A value indicating whether this release was considered stable
  isStable: Boolean

  # the release configuration
  configuration: IClusterKitNodeApi_ReleaseConfiguration

  # the list of compatible node templates
  compatibleTemplates(filter: ClusterKitNodeApi_CompatibleTemplate_Filter_Input, sort: [ClusterKitNodeApi_CompatibleTemplate_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_CompatibleTemplate_Connection

  # the list of migration operations
  operations(filter: ClusterKitNodeApi_MigrationOperation_Filter_Input, sort: [ClusterKitNodeApi_MigrationOperation_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_MigrationOperation_Connection

  # the list of migration errors
  errors(filter: ClusterKitNodeApi_MigrationError_Filter_Input, sort: [ClusterKitNodeApi_MigrationError_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_MigrationError_Connection
}

# The release configuration description
interface IClusterKitNodeApi_ReleaseConfiguration {
  id: ID

  # the list of available packages with their versions
  packages(filter: ClusterKitNodeApi_PackageDescription_Filter_Input, sort: [ClusterKitNodeApi_PackageDescription_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_PackageDescription_Connection

  # the list of configured node templates
  nodeTemplates(filter: ClusterKitNodeApi_NodeTemplate_Filter_Input, sort: [ClusterKitNodeApi_NodeTemplate_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_NodeTemplate_Connection

  # the list of configured cluster migrator templates
  migratorTemplates(filter: ClusterKitNodeApi_MigratorTemplate_Filter_Input, sort: [ClusterKitNodeApi_MigratorTemplate_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_MigratorTemplate_Connection

  # the list of seed addresses
  seedAddresses: [String]

  # the list of nuget feeds
  nugetFeeds(filter: ClusterKitNodeApi_NugetFeed_Filter_Input, sort: [ClusterKitNodeApi_NugetFeed_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_NugetFeed_Connection
}

# The list of connected ClusterKitNodeApi_Release
#  The cluster configuration with all program modules versions, node templates and configurations
interface IClusterKitNodeApi_Release_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_Release_Edge]
}

# The ClusterKitNodeApi_Release in a connected list
#  The cluster configuration with all program modules versions, node templates and configurations
interface IClusterKitNodeApi_Release_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_Release
}

# The resource state according to the migration
interface IClusterKitNodeApi_ResourceMigrationState {
  id: ID

  # the migration source position for this resource type
  sourcePoint: String

  # the migration destination position for this resource type
  destinationPoint: String

  # the resource current position
  position: ClusterKitNodeApi_EnResourcePosition

  # a value indicating what release can execute migration to source release point
  migrationToSourceExecutor: ClusterKitNodeApi_EnMigrationSide

  # a value indicating what release can execute migration to destination release point
  migrationToDestinationExecutor: ClusterKitNodeApi_EnMigrationSide

  # the human readable resource name
  name: String

  # the resource identification
  code: String

  # the current migration point of the resource
  currentPoint: String
}

# The list of connected ClusterKitNodeApi_ResourceMigrationState
#  The resource state according to the migration
interface IClusterKitNodeApi_ResourceMigrationState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_ResourceMigrationState_Edge]
}

# The ClusterKitNodeApi_ResourceMigrationState in a connected list
#  The resource state according to the migration
interface IClusterKitNodeApi_ResourceMigrationState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_ResourceMigrationState
}

# The resource description
interface IClusterKitNodeApi_ResourceReleaseState {
  id: ID

  # the human readable resource name
  name: String

  # the resource identification
  code: String

  # the current migration point of the resource
  currentPoint: String
}

# The list of connected ClusterKitNodeApi_ResourceReleaseState
#  The resource description
interface IClusterKitNodeApi_ResourceReleaseState_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_ResourceReleaseState_Edge]
}

# The ClusterKitNodeApi_ResourceReleaseState in a connected list
#  The resource description
interface IClusterKitNodeApi_ResourceReleaseState_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_ResourceReleaseState
}

# The overall resource migration state
interface IClusterKitNodeApi_ResourceState {
  id: ID

  # the current resource state with active migration
  migrationState: IClusterKitNodeApi_MigrationActorMigrationState

  # the current resource state without active migration
  releaseState: IClusterKitNodeApi_MigrationActorReleaseState

  # a value indicating whether some resource operation is in progress
  operationIsInProgress: Boolean

  # a value indicating whether a new migration can be initiated
  canCreateMigration: Boolean

  # a value indicating whether resource can be migrated
  canMigrateResources: Boolean

  # a value indicating whether node update can be initiated. The nodes will be updated to the destination release.
  canUpdateNodesToDestination: Boolean

  # a value indicating whether node update can be initiated. The nodes will be updated to the source release.
  canUpdateNodesToSource: Boolean

  # a value indicating whether current migration can be canceled at this stage
  canCancelMigration: Boolean

  # a value indicating whether current migration can be finished at this stage
  canFinishMigration: Boolean
}

# Security role. The amount of privileges assigned to the user
interface IClusterKitNodeApi_Role {
  id: ID

  # The role uid
  uid: Uid

  # The role name
  name: String

  # The list of granted privileges
  allowedScope: [String]

  # The list of denied privileges (the user will not acquire this privileges, even if they will be granted via other roles)
  deniedScope: [String]

  # The list of users assigned to this role
  users(filter: ClusterKitNodeApi_User_Filter_Input, sort: [ClusterKitNodeApi_User_Sort], id: Uid, offset: Int, limit: Int): IClusterKitNodeApi_User_Connection
}

# The list of connected ClusterKitNodeApi_Role
#  Security role. The amount of privileges assigned to the user
interface IClusterKitNodeApi_Role_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_Role_Edge]
}

# The ClusterKitNodeApi_Role in a connected list
#  Security role. The amount of privileges assigned to the user
interface IClusterKitNodeApi_Role_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_Role
}

# The main ClusterKit node managing methods
interface IClusterKitNodeApi_Root {
  id: ID

  # the cluster management
  clusterManagement: IClusterKitNodeApi_ClusterManagement

  # The packages in the Nuget repository
  nugetPackages(filter: ClusterKitNodeApi_NugetPackageFamily_Filter_Input, sort: [ClusterKitNodeApi_NugetPackageFamily_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_NugetPackageFamily_Connection

  # The list of known active nodes
  getActiveNodeDescriptions(filter: ClusterKitNodeApi_NodeDescription_Filter_Input, sort: [ClusterKitNodeApi_NodeDescription_Sort], id: Uid, offset: Int, limit: Int): IClusterKitNodeApi_NodeDescription_Connection

  # Current cluster node template usage for debug purposes
  getTemplateStatistics: IClusterKitNodeApi_TemplatesStatistics

  # the cluster migration management
  migrations(filter: ClusterKitNodeApi_Migration_Filter_Input, sort: [ClusterKitNodeApi_Migration_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_Migration_Connection

  # ClusterKit managing system security roles
  releases(filter: ClusterKitNodeApi_Release_Filter_Input, sort: [ClusterKitNodeApi_Release_Sort], id: Int, offset: Int, limit: Int): IClusterKitNodeApi_Release_Connection

  # ClusterKit managing system security roles
  roles(filter: ClusterKitNodeApi_Role_Filter_Input, sort: [ClusterKitNodeApi_Role_Sort], id: Uid, offset: Int, limit: Int): IClusterKitNodeApi_Role_Connection

  # ClusterKit managing system users
  users(filter: ClusterKitNodeApi_User_Filter_Input, sort: [ClusterKitNodeApi_User_Sort], id: Uid, offset: Int, limit: Int): IClusterKitNodeApi_User_Connection
}

# Overall debug data of current cluster node template use
interface IClusterKitNodeApi_TemplatesStatistics {
  id: ID

  # node templates statistics data
  templates(filter: ClusterKitNodeApi_TemplatesStatisticsData_Filter_Input, sort: [ClusterKitNodeApi_TemplatesStatisticsData_Sort], id: String, offset: Int, limit: Int): IClusterKitNodeApi_TemplatesStatisticsData_Connection
}

# Statistics data for template
interface IClusterKitNodeApi_TemplatesStatisticsData {
  id: ID

  # current active node count
  activeNodes: Int

  # currently configured maximum required active nodes count
  maximumRequiredNodes: Int

  # currently configured minimum required active nodes count
  minimumRequiredNodes: Int

  # name of the node template
  name: String

  # the number of currently active nodes, that need to be upgraded
  obsoleteNodes: Int

  # the number of nodes that are in upgrade process now
  startingNodes: Int

  # the number of nodes that are in upgrade process now
  upgradingNodes: Int
}

# The list of connected ClusterKitNodeApi_TemplatesStatisticsData
#  Statistics data for template
interface IClusterKitNodeApi_TemplatesStatisticsData_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_TemplatesStatisticsData_Edge]
}

# The ClusterKitNodeApi_TemplatesStatisticsData in a connected list
#  Statistics data for template
interface IClusterKitNodeApi_TemplatesStatisticsData_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_TemplatesStatisticsData
}

# The web ui user
interface IClusterKitNodeApi_User {
  id: ID

  # The list of roles assigned to this user
  roles(filter: ClusterKitNodeApi_Role_Filter_Input, sort: [ClusterKitNodeApi_Role_Sort], id: Uid, offset: Int, limit: Int): IClusterKitNodeApi_Role_Connection

  # The user uid
  uid: Uid

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
}

# The list of connected ClusterKitNodeApi_User
#  The web ui user
interface IClusterKitNodeApi_User_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [IClusterKitNodeApi_User_Edge]
}

# The ClusterKitNodeApi_User in a connected list
#  The web ui user
interface IClusterKitNodeApi_User_Edge {
  # A value to use with paging positioning
  cursor: String
  node: IClusterKitNodeApi_User
}

# The list of all detected mutations
type Mutations {
  # Initiates the new actor system scan
  ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan(input: ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan_Input): Boolean_MutationPayload

  # Manual node reboot request
  ClusterKitNodeApi_clusterKitNodesApi_upgradeNode(input: ClusterKitNodeApi_clusterKitNodesApi_upgradeNode_Input): ClusterKitNodeApi_MutationResult_System_Boolean__MutationPayload

  # checks the draft release if it can be moved to ready state.
  ClusterKitNodeApi_clusterKitNodesApi_releases_check(input: ClusterKitNodeApi_clusterKitNodesApi_releases_check_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # moves release state from "draft" to "ready"
  ClusterKitNodeApi_clusterKitNodesApi_releases_setReady(input: ClusterKitNodeApi_clusterKitNodesApi_releases_setReady_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # moves release state from "ready" to "obsolete"
  ClusterKitNodeApi_clusterKitNodesApi_releases_setObsolete(input: ClusterKitNodeApi_clusterKitNodesApi_releases_setObsolete_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # moves release state from "draft" to "ready"
  ClusterKitNodeApi_clusterKitNodesApi_releases_setStable(input: ClusterKitNodeApi_clusterKitNodesApi_releases_setStable_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # Creates the new draft release
  ClusterKitNodeApi_clusterKitNodesApi_releases_create(input: ClusterKitNodeApi_clusterKitNodesApi_releases_create_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # Creates the new draft release
  ClusterKitNodeApi_clusterKitNodesApi_releases_update(input: ClusterKitNodeApi_clusterKitNodesApi_releases_update_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # Creates the new draft release
  ClusterKitNodeApi_clusterKitNodesApi_releases_delete(input: ClusterKitNodeApi_clusterKitNodesApi_releases_delete_Input): ClusterKitNodeApi_Release_NodeMutationPayload

  # Grants a new role to the user
  ClusterKitNodeApi_clusterKitNodesApi_roles_grantToUser(input: ClusterKitNodeApi_clusterKitNodesApi_roles_grantToUser_Input): ClusterKitNodeApi_Role_NodeMutationPayload

  # Withdraws the role from the user
  ClusterKitNodeApi_clusterKitNodesApi_roles_withdrawFromUser(input: ClusterKitNodeApi_clusterKitNodesApi_roles_withdrawFromUser_Input): ClusterKitNodeApi_Role_NodeMutationPayload

  # Creates the new managing system role
  ClusterKitNodeApi_clusterKitNodesApi_roles_create(input: ClusterKitNodeApi_clusterKitNodesApi_roles_create_Input): ClusterKitNodeApi_Role_NodeMutationPayload

  # Creates the new managing system role
  ClusterKitNodeApi_clusterKitNodesApi_roles_update(input: ClusterKitNodeApi_clusterKitNodesApi_roles_update_Input): ClusterKitNodeApi_Role_NodeMutationPayload

  # Resets the user password
  ClusterKitNodeApi_clusterKitNodesApi_users_resetPassword(input: ClusterKitNodeApi_clusterKitNodesApi_users_resetPassword_Input): ClusterKitNodeApi_User_NodeMutationPayload

  # Grants a new role to the user
  ClusterKitNodeApi_clusterKitNodesApi_users_grantRole(input: ClusterKitNodeApi_clusterKitNodesApi_users_grantRole_Input): ClusterKitNodeApi_User_NodeMutationPayload

  # Withdraws the role from the user
  ClusterKitNodeApi_clusterKitNodesApi_users_withdrawRole(input: ClusterKitNodeApi_clusterKitNodesApi_users_withdrawRole_Input): ClusterKitNodeApi_User_NodeMutationPayload

  # Creates the new user
  ClusterKitNodeApi_clusterKitNodesApi_users_create(input: ClusterKitNodeApi_clusterKitNodesApi_users_create_Input): ClusterKitNodeApi_User_NodeMutationPayload

  # Creates the new user
  ClusterKitNodeApi_clusterKitNodesApi_users_update(input: ClusterKitNodeApi_clusterKitNodesApi_users_update_Input): ClusterKitNodeApi_User_NodeMutationPayload

  # Cancels the current migration
  ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationCancel(input: ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationCancel_Input): Boolean_MutationPayload

  # Finishes the current migration
  ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationFinish(input: ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationFinish_Input): Boolean_MutationPayload

  # Updates resources in the cluster
  ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationResourceUpdate(input: ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationResourceUpdate_Input): Boolean_MutationPayload

  # Initiate cluster node update procedure
  ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationNodesUpdate(input: ClusterKitNodeApi_clusterKitNodesApi_clusterManagement_migrationNodesUpdate_Input): Boolean_MutationPayload

  # Changes the current user password
  ClusterKitNodeApi_me_changePassword(input: ClusterKitNodeApi_me_changePassword_Input): ClusterKitNodeApi_MutationResult_System_Boolean__MutationPayload
}

# The Node interface as described in Relay documentation
interface Node {
  # The node id
  id: ID
}

# The root query type
type Query implements Node {
  # The united api access
  api: ClusterKitMonitoring_ClusterKitNodeApi
  id: ID

  # The node global searcher according to Relay specification
  node(
    # The node global id
    id: ID
  ): Node
}

# The Uid / Guid representation
scalar Uid
