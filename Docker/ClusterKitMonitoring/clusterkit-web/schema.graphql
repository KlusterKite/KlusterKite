schema {
  query: Query
  mutation: Mutations
}

type Boolean_MutationPayload {
  result: Boolean
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

# Global cluster actors tree scan result
type ClusterKitMonitoring__ClusterKitMonitoringClusterTree implements Node {
  # Gets the list of nodes
  nodes(filter: ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Filter_Input, sort: [ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Sort], id: String, offset: Int, limit: Int): ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Connection

  # Gets the sum of queue size across tree
  queueSizeSum: Int

  # Gets the maximum queue size among tree nodes
  maxQueueSize: Int
  id: ID
}

# Represents a dictionary key-value pair
type ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node_ implements Node {
  # Gets a dictionary key
  key: String

  # Gets a dictionary value
  value: ClusterKitMonitoring_ClusterKitMonitoringNode
  id: ID
}

# The list of connected ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node_
#  Represents a dictionary key-value pair
type ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Edge]
}

# The ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node_ in a connected list
#  Represents a dictionary key-value pair
type ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Edge {
  # A value to use with paging positioning
  cursor: String

  # Represents a dictionary key-value pair
  node: ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node_
}

input ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Filter_Input

  # key exactly equals to the parameter, key: Gets a dictionary key
  key: String

  # key not equals to the parameter, key: Gets a dictionary key
  key_not: String

  # key is a substring of the parameter, key: Gets a dictionary key
  key_in: String

  # key is not a substring of the parameter, key: Gets a dictionary key
  key_not_in: String

  # key contains the parameter as substring, key: Gets a dictionary key
  key_contains: String

  # key doesn't contain the parameter as substring, key: Gets a dictionary key
  key_not_contains: String

  # key starts with the parameter value, key: Gets a dictionary key
  key_starts_with: String

  # key doesn't start with the parameter value, key: Gets a dictionary key
  key_not_starts_with: String

  # key ends with the parameter value, key: Gets a dictionary key
  key_ends_with: String

  # key doesn't end with the parameter value, key: Gets a dictionary key
  key_not_ends_with: String

  # key lowercased equals the parameter, key: Gets a dictionary key
  key_l: String

  # key lowercased doesn't equal the parameter, key: Gets a dictionary key
  key_l_not: String

  # key lowercased is a substring of the parameter, key: Gets a dictionary key
  key_l_in: String

  # key lowercased is not a substring of the parameter, key: Gets a dictionary key
  key_l_not_in: String

  # key lowercased contains the parameter as substring, key: Gets a dictionary key
  key_l_contains: String

  # key lowercased doesn't contain the parameter as substring, key: Gets a dictionary key
  key_l_not_contains: String

  # key lowercased starts with the parameter value, key: Gets a dictionary key
  key_l_starts_with: String

  # key lowercased doesn't start with the parameter value, key: Gets a dictionary key
  key_l_not_starts_with: String

  # key lowercased ends with the parameter value, key: Gets a dictionary key
  key_l_ends_with: String

  # key lowercased doesn't end with the parameter value, key: Gets a dictionary key
  key_l_not_ends_with: String
}

enum ClusterKitMonitoring_ClusterKit_API_Client_Converters_Pair_System_String__ClusterKit_Monitoring_Client_Messages_Node__Sort {
  key_asc
  key_desc
}

input ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan_Input {
  clientMutationId: String
}

# The actor's description
type ClusterKitMonitoring_ClusterKitMonitoringNode implements Node {
  # the actor's type
  actorType: String

  # the actor's last message
  currentMessage: String

  # the actor's dispatcher id
  dispatcherId: String

  # the actor's dispatcher type
  dispatcherType: String

  # the maximum queue size among it's children
  maxQueueSize: Int

  # the actor's name
  name: String

  # the actor's queue size
  queueSize: Int

  # the maximum queue size among it's children
  queueSizeSum: Int

  # the actor's children
  children(filter: ClusterKitMonitoring_ClusterKitMonitoringNode_Filter_Input, sort: [ClusterKitMonitoring_ClusterKitMonitoringNode_Sort], id: String, offset: Int, limit: Int): ClusterKitMonitoring_ClusterKitMonitoringNode_Connection
  id: ID
}

# The list of connected ClusterKitMonitoring_ClusterKitMonitoringNode
#  The actor's description
type ClusterKitMonitoring_ClusterKitMonitoringNode_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitMonitoring_ClusterKitMonitoringNode_Edge]
}

# The ClusterKitMonitoring_ClusterKitMonitoringNode in a connected list
#  The actor's description
type ClusterKitMonitoring_ClusterKitMonitoringNode_Edge {
  # A value to use with paging positioning
  cursor: String

  # The actor's description
  node: ClusterKitMonitoring_ClusterKitMonitoringNode
}

input ClusterKitMonitoring_ClusterKitMonitoringNode_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitMonitoring_ClusterKitMonitoringNode_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitMonitoring_ClusterKitMonitoringNode_Filter_Input

  # actorType exactly equals to the parameter, actorType: the actor's type
  actorType: String

  # actorType not equals to the parameter, actorType: the actor's type
  actorType_not: String

  # actorType is a substring of the parameter, actorType: the actor's type
  actorType_in: String

  # actorType is not a substring of the parameter, actorType: the actor's type
  actorType_not_in: String

  # actorType contains the parameter as substring, actorType: the actor's type
  actorType_contains: String

  # actorType doesn't contain the parameter as substring, actorType: the actor's type
  actorType_not_contains: String

  # actorType starts with the parameter value, actorType: the actor's type
  actorType_starts_with: String

  # actorType doesn't start with the parameter value, actorType: the actor's type
  actorType_not_starts_with: String

  # actorType ends with the parameter value, actorType: the actor's type
  actorType_ends_with: String

  # actorType doesn't end with the parameter value, actorType: the actor's type
  actorType_not_ends_with: String

  # actorType lowercased equals the parameter, actorType: the actor's type
  actorType_l: String

  # actorType lowercased doesn't equal the parameter, actorType: the actor's type
  actorType_l_not: String

  # actorType lowercased is a substring of the parameter, actorType: the actor's type
  actorType_l_in: String

  # actorType lowercased is not a substring of the parameter, actorType: the actor's type
  actorType_l_not_in: String

  # actorType lowercased contains the parameter as substring, actorType: the actor's type
  actorType_l_contains: String

  # actorType lowercased doesn't contain the parameter as substring, actorType: the actor's type
  actorType_l_not_contains: String

  # actorType lowercased starts with the parameter value, actorType: the actor's type
  actorType_l_starts_with: String

  # actorType lowercased doesn't start with the parameter value, actorType: the actor's type
  actorType_l_not_starts_with: String

  # actorType lowercased ends with the parameter value, actorType: the actor's type
  actorType_l_ends_with: String

  # actorType lowercased doesn't end with the parameter value, actorType: the actor's type
  actorType_l_not_ends_with: String

  # currentMessage exactly equals to the parameter, currentMessage: the actor's last message
  currentMessage: String

  # currentMessage not equals to the parameter, currentMessage: the actor's last message
  currentMessage_not: String

  # currentMessage is a substring of the parameter, currentMessage: the actor's last message
  currentMessage_in: String

  # currentMessage is not a substring of the parameter, currentMessage: the actor's last message
  currentMessage_not_in: String

  # currentMessage contains the parameter as substring, currentMessage: the actor's last message
  currentMessage_contains: String

  # currentMessage doesn't contain the parameter as substring, currentMessage: the actor's last message
  currentMessage_not_contains: String

  # currentMessage starts with the parameter value, currentMessage: the actor's last message
  currentMessage_starts_with: String

  # currentMessage doesn't start with the parameter value, currentMessage: the actor's last message
  currentMessage_not_starts_with: String

  # currentMessage ends with the parameter value, currentMessage: the actor's last message
  currentMessage_ends_with: String

  # currentMessage doesn't end with the parameter value, currentMessage: the actor's last message
  currentMessage_not_ends_with: String

  # currentMessage lowercased equals the parameter, currentMessage: the actor's last message
  currentMessage_l: String

  # currentMessage lowercased doesn't equal the parameter, currentMessage: the actor's last message
  currentMessage_l_not: String

  # currentMessage lowercased is a substring of the parameter, currentMessage: the actor's last message
  currentMessage_l_in: String

  # currentMessage lowercased is not a substring of the parameter, currentMessage: the actor's last message
  currentMessage_l_not_in: String

  # currentMessage lowercased contains the parameter as substring, currentMessage: the actor's last message
  currentMessage_l_contains: String

  # currentMessage lowercased doesn't contain the parameter as substring, currentMessage: the actor's last message
  currentMessage_l_not_contains: String

  # currentMessage lowercased starts with the parameter value, currentMessage: the actor's last message
  currentMessage_l_starts_with: String

  # currentMessage lowercased doesn't start with the parameter value, currentMessage: the actor's last message
  currentMessage_l_not_starts_with: String

  # currentMessage lowercased ends with the parameter value, currentMessage: the actor's last message
  currentMessage_l_ends_with: String

  # currentMessage lowercased doesn't end with the parameter value, currentMessage: the actor's last message
  currentMessage_l_not_ends_with: String

  # dispatcherId exactly equals to the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId: String

  # dispatcherId not equals to the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_not: String

  # dispatcherId is a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_in: String

  # dispatcherId is not a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_not_in: String

  # dispatcherId contains the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_contains: String

  # dispatcherId doesn't contain the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_not_contains: String

  # dispatcherId starts with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_starts_with: String

  # dispatcherId doesn't start with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_not_starts_with: String

  # dispatcherId ends with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_ends_with: String

  # dispatcherId doesn't end with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_not_ends_with: String

  # dispatcherId lowercased equals the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l: String

  # dispatcherId lowercased doesn't equal the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not: String

  # dispatcherId lowercased is a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_in: String

  # dispatcherId lowercased is not a substring of the parameter, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_in: String

  # dispatcherId lowercased contains the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_l_contains: String

  # dispatcherId lowercased doesn't contain the parameter as substring, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_contains: String

  # dispatcherId lowercased starts with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_starts_with: String

  # dispatcherId lowercased doesn't start with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_starts_with: String

  # dispatcherId lowercased ends with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_ends_with: String

  # dispatcherId lowercased doesn't end with the parameter value, dispatcherId: the actor's dispatcher id
  dispatcherId_l_not_ends_with: String

  # dispatcherType exactly equals to the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType: String

  # dispatcherType not equals to the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_not: String

  # dispatcherType is a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_in: String

  # dispatcherType is not a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_not_in: String

  # dispatcherType contains the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_contains: String

  # dispatcherType doesn't contain the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_not_contains: String

  # dispatcherType starts with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_starts_with: String

  # dispatcherType doesn't start with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_not_starts_with: String

  # dispatcherType ends with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_ends_with: String

  # dispatcherType doesn't end with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_not_ends_with: String

  # dispatcherType lowercased equals the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l: String

  # dispatcherType lowercased doesn't equal the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not: String

  # dispatcherType lowercased is a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_in: String

  # dispatcherType lowercased is not a substring of the parameter, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_in: String

  # dispatcherType lowercased contains the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_l_contains: String

  # dispatcherType lowercased doesn't contain the parameter as substring, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_contains: String

  # dispatcherType lowercased starts with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_starts_with: String

  # dispatcherType lowercased doesn't start with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_starts_with: String

  # dispatcherType lowercased ends with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_ends_with: String

  # dispatcherType lowercased doesn't end with the parameter value, dispatcherType: the actor's dispatcher type
  dispatcherType_l_not_ends_with: String

  # maxQueueSize exactly equals to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize: Int

  # maxQueueSize not equals to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_not: Int

  # maxQueueSize is less then the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_lt: Int

  # maxQueueSize is less then or equal to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_lte: Int

  # maxQueueSize is greater then the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_gt: Int

  # maxQueueSize is greater then or equal to the parameter, maxQueueSize: the maximum queue size among it's children
  maxQueueSize_gte: Int

  # name exactly equals to the parameter, name: the actor's name
  name: String

  # name not equals to the parameter, name: the actor's name
  name_not: String

  # name is a substring of the parameter, name: the actor's name
  name_in: String

  # name is not a substring of the parameter, name: the actor's name
  name_not_in: String

  # name contains the parameter as substring, name: the actor's name
  name_contains: String

  # name doesn't contain the parameter as substring, name: the actor's name
  name_not_contains: String

  # name starts with the parameter value, name: the actor's name
  name_starts_with: String

  # name doesn't start with the parameter value, name: the actor's name
  name_not_starts_with: String

  # name ends with the parameter value, name: the actor's name
  name_ends_with: String

  # name doesn't end with the parameter value, name: the actor's name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: the actor's name
  name_l: String

  # name lowercased doesn't equal the parameter, name: the actor's name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: the actor's name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: the actor's name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: the actor's name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: the actor's name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: the actor's name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: the actor's name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: the actor's name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: the actor's name
  name_l_not_ends_with: String

  # queueSize exactly equals to the parameter, queueSize: the actor's queue size
  queueSize: Int

  # queueSize not equals to the parameter, queueSize: the actor's queue size
  queueSize_not: Int

  # queueSize is less then the parameter, queueSize: the actor's queue size
  queueSize_lt: Int

  # queueSize is less then or equal to the parameter, queueSize: the actor's queue size
  queueSize_lte: Int

  # queueSize is greater then the parameter, queueSize: the actor's queue size
  queueSize_gt: Int

  # queueSize is greater then or equal to the parameter, queueSize: the actor's queue size
  queueSize_gte: Int

  # queueSizeSum exactly equals to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum: Int

  # queueSizeSum not equals to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_not: Int

  # queueSizeSum is less then the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_lt: Int

  # queueSizeSum is less then or equal to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_lte: Int

  # queueSizeSum is greater then the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_gt: Int

  # queueSizeSum is greater then or equal to the parameter, queueSizeSum: the maximum queue size among it's children
  queueSizeSum_gte: Int
}

enum ClusterKitMonitoring_ClusterKitMonitoringNode_Sort {
  actorType_asc
  actorType_desc
  currentMessage_asc
  currentMessage_desc
  dispatcherId_asc
  dispatcherId_desc
  dispatcherType_asc
  dispatcherType_desc
  maxQueueSize_asc
  maxQueueSize_desc
  name_asc
  name_desc
  queueSize_asc
  queueSize_desc
  queueSizeSum_asc
  queueSizeSum_desc
}

# ClusterKit node monitoring
# The root provider
type ClusterKitMonitoring_ClusterKitNodeApi implements Node {
  # ClusterKit node monitoring
  clusterKitMonitoringApi: ClusterKitMonitoring_Root

  # The ClusterKit node managing API
  nodeManagerData: ClusterKitNodeApi_ClusterKitNodeManagement

  # The current user
  me: ClusterKitNodeApi_ClusterKit_NodeManager_CurrentUserApi
  id: ID

  # The node global searcher according to Relay specification
  __node(
    # The node global id
    id: ID
  ): Node
}

# ClusterKit monitoring api
type ClusterKitMonitoring_Root implements Node {
  # Gets the last cluster scan result. Changes as system receives the scan results from nodes
  getClusterTree: ClusterKitMonitoring__ClusterKitMonitoringClusterTree
  id: ID
}

# Akka system address
type ClusterKitNodeApi_AkkaAddress implements Node {
  # the address string representation
  asString: String

  # the address host
  host: String

  # the address port
  port: Int

  # the address protocol
  protocol: String

  # the address system name
  system: String
  id: ID
}

type ClusterKitNodeApi_ClusterKit_API_Client_MutationResult_System_Boolean_ implements Node {
  # The mutated object result
  result: Boolean

  # The list of mutation errors
  errors(filter: ClusterKitNodeApi_ErrorDescription_Filter_Input, sort: [ClusterKitNodeApi_ErrorDescription_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_ErrorDescription_Connection
  id: ID
}

type ClusterKitNodeApi_ClusterKit_API_Client_MutationResult_System_Boolean__MutationPayload {
  result: ClusterKitNodeApi_ClusterKit_API_Client_MutationResult_System_Boolean_
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKit_NodeManager_Client_ORM_NugetFeed_EnFeedType {
  Public
  Private
}

type ClusterKitNodeApi_ClusterKit_NodeManager_CurrentUserApi implements Node {
  # Authenticated user
  clusterKitUser: ClusterKitNodeApi_ClusterKitUserDescription

  # The current user privileges
  clusterKitUserPrivileges: [String]

  # The current application privileges
  clusterKitClientPrivileges: [String]
  id: ID
}

# Description of node configuration
type ClusterKitNodeApi_ClusterKitNodeDescription implements Node {
  # symbolic container type code
  containerType: String

  # a value indicating whether the current node is cluster leader
  isClusterLeader: Boolean

  # a value indicating whether software and or configuration is obsolete and needed to be upgraded
  isObsolete: Boolean

  # a value indicating whether this is complete description
  isInitialized: Boolean

  # the list of roles, where current node is leader
  leaderInRoles: [String]

  # The list of descriptions of installed modules
  modules(filter: ClusterKitNodeApi_ClusterKitPackageDescription_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitPackageDescription_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitPackageDescription_Connection

  # The node's address
  nodeAddress: ClusterKitNodeApi_AkkaAddress

  # request id to indicate node instance startup
  nodeId: Uid

  # node template code
  nodeTemplate: String

  # current node template version
  nodeTemplateVersion: Int

  # the list of cluster roles
  roles: [String]

  # node start time
  startTimeStamp: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitNodeDescription
#  Description of node configuration
type ClusterKitNodeApi_ClusterKitNodeDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitNodeDescription_Edge]
}

# The ClusterKitNodeApi_ClusterKitNodeDescription in a connected list
#  Description of node configuration
type ClusterKitNodeApi_ClusterKitNodeDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # Description of node configuration
  node: ClusterKitNodeApi_ClusterKitNodeDescription
}

input ClusterKitNodeApi_ClusterKitNodeDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitNodeDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitNodeDescription_Filter_Input

  # containerType exactly equals to the parameter, containerType: symbolic container type code
  containerType: String

  # containerType not equals to the parameter, containerType: symbolic container type code
  containerType_not: String

  # containerType is a substring of the parameter, containerType: symbolic container type code
  containerType_in: String

  # containerType is not a substring of the parameter, containerType: symbolic container type code
  containerType_not_in: String

  # containerType contains the parameter as substring, containerType: symbolic container type code
  containerType_contains: String

  # containerType doesn't contain the parameter as substring, containerType: symbolic container type code
  containerType_not_contains: String

  # containerType starts with the parameter value, containerType: symbolic container type code
  containerType_starts_with: String

  # containerType doesn't start with the parameter value, containerType: symbolic container type code
  containerType_not_starts_with: String

  # containerType ends with the parameter value, containerType: symbolic container type code
  containerType_ends_with: String

  # containerType doesn't end with the parameter value, containerType: symbolic container type code
  containerType_not_ends_with: String

  # containerType lowercased equals the parameter, containerType: symbolic container type code
  containerType_l: String

  # containerType lowercased doesn't equal the parameter, containerType: symbolic container type code
  containerType_l_not: String

  # containerType lowercased is a substring of the parameter, containerType: symbolic container type code
  containerType_l_in: String

  # containerType lowercased is not a substring of the parameter, containerType: symbolic container type code
  containerType_l_not_in: String

  # containerType lowercased contains the parameter as substring, containerType: symbolic container type code
  containerType_l_contains: String

  # containerType lowercased doesn't contain the parameter as substring, containerType: symbolic container type code
  containerType_l_not_contains: String

  # containerType lowercased starts with the parameter value, containerType: symbolic container type code
  containerType_l_starts_with: String

  # containerType lowercased doesn't start with the parameter value, containerType: symbolic container type code
  containerType_l_not_starts_with: String

  # containerType lowercased ends with the parameter value, containerType: symbolic container type code
  containerType_l_ends_with: String

  # containerType lowercased doesn't end with the parameter value, containerType: symbolic container type code
  containerType_l_not_ends_with: String

  # isClusterLeader exactly equals to the parameter, isClusterLeader: a value
  # indicating whether the current node is cluster leader
  isClusterLeader: Boolean

  # isClusterLeader not equals to the parameter, isClusterLeader: a value
  # indicating whether the current node is cluster leader
  isClusterLeader_not: Boolean

  # isObsolete exactly equals to the parameter, isObsolete: a value indicating
  # whether software and or configuration is obsolete and needed to be upgraded
  isObsolete: Boolean

  # isObsolete not equals to the parameter, isObsolete: a value indicating whether
  # software and or configuration is obsolete and needed to be upgraded
  isObsolete_not: Boolean

  # isInitialized exactly equals to the parameter, isInitialized: a value indicating whether this is complete description
  isInitialized: Boolean

  # isInitialized not equals to the parameter, isInitialized: a value indicating whether this is complete description
  isInitialized_not: Boolean

  # nodeId exactly equals to the parameter, nodeId: request id to indicate node instance startup
  nodeId: Uid

  # nodeId not equals to the parameter, nodeId: request id to indicate node instance startup
  nodeId_not: Uid

  # nodeTemplate exactly equals to the parameter, nodeTemplate: node template code
  nodeTemplate: String

  # nodeTemplate not equals to the parameter, nodeTemplate: node template code
  nodeTemplate_not: String

  # nodeTemplate is a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_in: String

  # nodeTemplate is not a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_not_in: String

  # nodeTemplate contains the parameter as substring, nodeTemplate: node template code
  nodeTemplate_contains: String

  # nodeTemplate doesn't contain the parameter as substring, nodeTemplate: node template code
  nodeTemplate_not_contains: String

  # nodeTemplate starts with the parameter value, nodeTemplate: node template code
  nodeTemplate_starts_with: String

  # nodeTemplate doesn't start with the parameter value, nodeTemplate: node template code
  nodeTemplate_not_starts_with: String

  # nodeTemplate ends with the parameter value, nodeTemplate: node template code
  nodeTemplate_ends_with: String

  # nodeTemplate doesn't end with the parameter value, nodeTemplate: node template code
  nodeTemplate_not_ends_with: String

  # nodeTemplate lowercased equals the parameter, nodeTemplate: node template code
  nodeTemplate_l: String

  # nodeTemplate lowercased doesn't equal the parameter, nodeTemplate: node template code
  nodeTemplate_l_not: String

  # nodeTemplate lowercased is a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_l_in: String

  # nodeTemplate lowercased is not a substring of the parameter, nodeTemplate: node template code
  nodeTemplate_l_not_in: String

  # nodeTemplate lowercased contains the parameter as substring, nodeTemplate: node template code
  nodeTemplate_l_contains: String

  # nodeTemplate lowercased doesn't contain the parameter as substring, nodeTemplate: node template code
  nodeTemplate_l_not_contains: String

  # nodeTemplate lowercased starts with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_starts_with: String

  # nodeTemplate lowercased doesn't start with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_not_starts_with: String

  # nodeTemplate lowercased ends with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_ends_with: String

  # nodeTemplate lowercased doesn't end with the parameter value, nodeTemplate: node template code
  nodeTemplate_l_not_ends_with: String

  # nodeTemplateVersion exactly equals to the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion: Int

  # nodeTemplateVersion not equals to the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion_not: Int

  # nodeTemplateVersion is less then the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion_lt: Int

  # nodeTemplateVersion is less then or equal to the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion_lte: Int

  # nodeTemplateVersion is greater then the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion_gt: Int

  # nodeTemplateVersion is greater then or equal to the parameter, nodeTemplateVersion: current node template version
  nodeTemplateVersion_gte: Int

  # startTimeStamp exactly equals to the parameter, startTimeStamp: node start time
  startTimeStamp: Int

  # startTimeStamp not equals to the parameter, startTimeStamp: node start time
  startTimeStamp_not: Int

  # startTimeStamp is less then the parameter, startTimeStamp: node start time
  startTimeStamp_lt: Int

  # startTimeStamp is less then or equal to the parameter, startTimeStamp: node start time
  startTimeStamp_lte: Int

  # startTimeStamp is greater then the parameter, startTimeStamp: node start time
  startTimeStamp_gt: Int

  # startTimeStamp is greater then or equal to the parameter, startTimeStamp: node start time
  startTimeStamp_gte: Int
}

enum ClusterKitNodeApi_ClusterKitNodeDescription_Sort {
  containerType_asc
  containerType_desc
  isClusterLeader_asc
  isClusterLeader_desc
  isObsolete_asc
  isObsolete_desc
  isInitialized_asc
  isInitialized_desc
  nodeId_asc
  nodeId_desc
  nodeTemplate_asc
  nodeTemplate_desc
  nodeTemplateVersion_asc
  nodeTemplateVersion_desc
  startTimeStamp_asc
  startTimeStamp_desc
}

# The main ClusterKit node managing methods
type ClusterKitNodeApi_ClusterKitNodeManagement implements Node {
  # The list of available packages from local cluster repository
  getPackages(filter: ClusterKitNodeApi_ClusterKitPackageDescription_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitPackageDescription_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitPackageDescription_Connection

  # Current cluster node template usage for debug purposes
  getTemplateStatistics: ClusterKitNodeApi_ClusterKitTemplatesUsageStatistics

  # The list of known active nodes
  getActiveNodeDescriptions(filter: ClusterKitNodeApi_ClusterKitNodeDescription_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitNodeDescription_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitNodeDescription_Connection

  # Node templates
  nodeTemplates(filter: ClusterKitNodeApi_ClusterKitNodeTemplate_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitNodeTemplate_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitNodeTemplate_Connection

  # Node templates
  nugetFeeds(filter: ClusterKitNodeApi_ClusterKitNugetFeed_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitNugetFeed_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitNugetFeed_Connection

  # Node templates
  seedAddresses(filter: ClusterKitNodeApi_ClusterKitSeedAddress_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitSeedAddress_Sort], id: Int, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitSeedAddress_Connection

  # ClusterKit managing system users
  users(filter: ClusterKitNodeApi_ClusterKitUser_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitUser_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitUser_Connection

  # ClusterKit managing system security roles
  roles(filter: ClusterKitNodeApi_ClusterKitRole_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitRole_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitRole_Connection
  id: ID
}

# Node template description
type ClusterKitNodeApi_ClusterKitNodeTemplate implements Node {
  # The program readable node template name
  code: String

  # The akka configuration template for node
  configuration: String

  # The list of container types to install node templates
  containerTypes: [String]

  # The unique template identification number
  __id: Int

  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances: Int

  # The human readable node template name
  name: String

  # The list of nuget packages to install (along with there dependencies)
  packages: [String]

  # The priority weight for service, when deciding witch template should be brought up
  priority: Float

  # The template version
  version: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitNodeTemplate
#  Node template description
type ClusterKitNodeApi_ClusterKitNodeTemplate_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitNodeTemplate_Edge]
}

# The ClusterKitNodeApi_ClusterKitNodeTemplate in a connected list
#  Node template description
type ClusterKitNodeApi_ClusterKitNodeTemplate_Edge {
  # A value to use with paging positioning
  cursor: String

  # Node template description
  node: ClusterKitNodeApi_ClusterKitNodeTemplate
}

input ClusterKitNodeApi_ClusterKitNodeTemplate_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitNodeTemplate_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitNodeTemplate_Filter_Input

  # code exactly equals to the parameter, code: The program readable node template name
  code: String

  # code not equals to the parameter, code: The program readable node template name
  code_not: String

  # code is a substring of the parameter, code: The program readable node template name
  code_in: String

  # code is not a substring of the parameter, code: The program readable node template name
  code_not_in: String

  # code contains the parameter as substring, code: The program readable node template name
  code_contains: String

  # code doesn't contain the parameter as substring, code: The program readable node template name
  code_not_contains: String

  # code starts with the parameter value, code: The program readable node template name
  code_starts_with: String

  # code doesn't start with the parameter value, code: The program readable node template name
  code_not_starts_with: String

  # code ends with the parameter value, code: The program readable node template name
  code_ends_with: String

  # code doesn't end with the parameter value, code: The program readable node template name
  code_not_ends_with: String

  # code lowercased equals the parameter, code: The program readable node template name
  code_l: String

  # code lowercased doesn't equal the parameter, code: The program readable node template name
  code_l_not: String

  # code lowercased is a substring of the parameter, code: The program readable node template name
  code_l_in: String

  # code lowercased is not a substring of the parameter, code: The program readable node template name
  code_l_not_in: String

  # code lowercased contains the parameter as substring, code: The program readable node template name
  code_l_contains: String

  # code lowercased doesn't contain the parameter as substring, code: The program readable node template name
  code_l_not_contains: String

  # code lowercased starts with the parameter value, code: The program readable node template name
  code_l_starts_with: String

  # code lowercased doesn't start with the parameter value, code: The program readable node template name
  code_l_not_starts_with: String

  # code lowercased ends with the parameter value, code: The program readable node template name
  code_l_ends_with: String

  # code lowercased doesn't end with the parameter value, code: The program readable node template name
  code_l_not_ends_with: String

  # configuration exactly equals to the parameter, configuration: The akka configuration template for node
  configuration: String

  # configuration not equals to the parameter, configuration: The akka configuration template for node
  configuration_not: String

  # configuration is a substring of the parameter, configuration: The akka configuration template for node
  configuration_in: String

  # configuration is not a substring of the parameter, configuration: The akka configuration template for node
  configuration_not_in: String

  # configuration contains the parameter as substring, configuration: The akka configuration template for node
  configuration_contains: String

  # configuration doesn't contain the parameter as substring, configuration: The akka configuration template for node
  configuration_not_contains: String

  # configuration starts with the parameter value, configuration: The akka configuration template for node
  configuration_starts_with: String

  # configuration doesn't start with the parameter value, configuration: The akka configuration template for node
  configuration_not_starts_with: String

  # configuration ends with the parameter value, configuration: The akka configuration template for node
  configuration_ends_with: String

  # configuration doesn't end with the parameter value, configuration: The akka configuration template for node
  configuration_not_ends_with: String

  # configuration lowercased equals the parameter, configuration: The akka configuration template for node
  configuration_l: String

  # configuration lowercased doesn't equal the parameter, configuration: The akka configuration template for node
  configuration_l_not: String

  # configuration lowercased is a substring of the parameter, configuration: The akka configuration template for node
  configuration_l_in: String

  # configuration lowercased is not a substring of the parameter, configuration: The akka configuration template for node
  configuration_l_not_in: String

  # configuration lowercased contains the parameter as substring, configuration: The akka configuration template for node
  configuration_l_contains: String

  # configuration lowercased doesn't contain the parameter as substring,
  # configuration: The akka configuration template for node
  configuration_l_not_contains: String

  # configuration lowercased starts with the parameter value, configuration: The akka configuration template for node
  configuration_l_starts_with: String

  # configuration lowercased doesn't start with the parameter value, configuration: The akka configuration template for node
  configuration_l_not_starts_with: String

  # configuration lowercased ends with the parameter value, configuration: The akka configuration template for node
  configuration_l_ends_with: String

  # configuration lowercased doesn't end with the parameter value, configuration: The akka configuration template for node
  configuration_l_not_ends_with: String

  # id exactly equals to the parameter, id: The unique template identification number
  id: Int

  # id not equals to the parameter, id: The unique template identification number
  id_not: Int

  # id is less then the parameter, id: The unique template identification number
  id_lt: Int

  # id is less then or equal to the parameter, id: The unique template identification number
  id_lte: Int

  # id is greater then the parameter, id: The unique template identification number
  id_gt: Int

  # id is greater then or equal to the parameter, id: The unique template identification number
  id_gte: Int

  # maximumNeededInstances exactly equals to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # maximumNeededInstances not equals to the parameter, maximumNeededInstances:
  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_not: Int

  # maximumNeededInstances is less then the parameter, maximumNeededInstances: The
  # maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_lt: Int

  # maximumNeededInstances is less then or equal to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_lte: Int

  # maximumNeededInstances is greater then the parameter, maximumNeededInstances:
  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_gt: Int

  # maximumNeededInstances is greater then or equal to the parameter,
  # maximumNeededInstances: The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances_gte: Int

  # minimumRequiredInstances exactly equals to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances: Int

  # minimumRequiredInstances not equals to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_not: Int

  # minimumRequiredInstances is less then the parameter, minimumRequiredInstances:
  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances_lt: Int

  # minimumRequiredInstances is less then or equal to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_lte: Int

  # minimumRequiredInstances is greater then the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_gt: Int

  # minimumRequiredInstances is greater then or equal to the parameter,
  # minimumRequiredInstances: The minimum number of working node type required for
  # cluster to work
  minimumRequiredInstances_gte: Int

  # name exactly equals to the parameter, name: The human readable node template name
  name: String

  # name not equals to the parameter, name: The human readable node template name
  name_not: String

  # name is a substring of the parameter, name: The human readable node template name
  name_in: String

  # name is not a substring of the parameter, name: The human readable node template name
  name_not_in: String

  # name contains the parameter as substring, name: The human readable node template name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The human readable node template name
  name_not_contains: String

  # name starts with the parameter value, name: The human readable node template name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The human readable node template name
  name_not_starts_with: String

  # name ends with the parameter value, name: The human readable node template name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The human readable node template name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The human readable node template name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The human readable node template name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The human readable node template name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The human readable node template name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The human readable node template name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The human readable node template name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The human readable node template name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The human readable node template name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The human readable node template name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The human readable node template name
  name_l_not_ends_with: String

  # priority exactly equals to the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority: Float

  # priority not equals to the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_not: Float

  # priority is less then the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_lt: Float

  # priority is less then or equal to the parameter, priority: The priority weight
  # for service, when deciding witch template should be brought up
  priority_lte: Float

  # priority is greater then the parameter, priority: The priority weight for
  # service, when deciding witch template should be brought up
  priority_gt: Float

  # priority is greater then or equal to the parameter, priority: The priority
  # weight for service, when deciding witch template should be brought up
  priority_gte: Float

  # version exactly equals to the parameter, version: The template version
  version: Int

  # version not equals to the parameter, version: The template version
  version_not: Int

  # version is less then the parameter, version: The template version
  version_lt: Int

  # version is less then or equal to the parameter, version: The template version
  version_lte: Int

  # version is greater then the parameter, version: The template version
  version_gt: Int

  # version is greater then or equal to the parameter, version: The template version
  version_gte: Int
}

# Node template description
input ClusterKitNodeApi_ClusterKitNodeTemplate_Input {
  # The program readable node template name
  code: String

  # The akka configuration template for node
  configuration: String

  # The list of container types to install node templates
  containerTypes: [String]

  # The unique template identification number
  id: Int

  # The maximum number of working nodes that is reasonable for cluster
  maximumNeededInstances: Int

  # The minimum number of working node type required for cluster to work
  minimumRequiredInstances: Int

  # The human readable node template name
  name: String

  # The list of nuget packages to install (along with there dependencies)
  packages: [String]

  # The priority weight for service, when deciding witch template should be brought up
  priority: Float

  # The template version
  version: Int
}

type ClusterKitNodeApi_ClusterKitNodeTemplate_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_ClusterKitNodeTemplate
  edge: ClusterKitNodeApi_ClusterKitNodeTemplate_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKitNodeTemplate_Sort {
  code_asc
  code_desc
  configuration_asc
  configuration_desc
  id_asc
  id_desc
  maximumNeededInstances_asc
  maximumNeededInstances_desc
  minimumRequiredInstances_asc
  minimumRequiredInstances_desc
  name_asc
  name_desc
  priority_asc
  priority_desc
  version_asc
  version_desc
}

# The link to the nuget feed to download updates
type ClusterKitNodeApi_ClusterKitNugetFeed implements Node {
  # The seed url address
  address: String

  # The unique address identification number
  __id: Int

  # The user password for basic authentication
  password: String

  # The  type of feed
  type: ClusterKitNodeApi_ClusterKit_NodeManager_Client_ORM_NugetFeed_EnFeedType

  # The username for basic authentication
  userName: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitNugetFeed
#  The link to the nuget feed to download updates
type ClusterKitNodeApi_ClusterKitNugetFeed_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitNugetFeed_Edge]
}

# The ClusterKitNodeApi_ClusterKitNugetFeed in a connected list
#  The link to the nuget feed to download updates
type ClusterKitNodeApi_ClusterKitNugetFeed_Edge {
  # A value to use with paging positioning
  cursor: String

  # The link to the nuget feed to download updates
  node: ClusterKitNodeApi_ClusterKitNugetFeed
}

input ClusterKitNodeApi_ClusterKitNugetFeed_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitNugetFeed_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitNugetFeed_Filter_Input

  # address exactly equals to the parameter, address: The seed url address
  address: String

  # address not equals to the parameter, address: The seed url address
  address_not: String

  # address is a substring of the parameter, address: The seed url address
  address_in: String

  # address is not a substring of the parameter, address: The seed url address
  address_not_in: String

  # address contains the parameter as substring, address: The seed url address
  address_contains: String

  # address doesn't contain the parameter as substring, address: The seed url address
  address_not_contains: String

  # address starts with the parameter value, address: The seed url address
  address_starts_with: String

  # address doesn't start with the parameter value, address: The seed url address
  address_not_starts_with: String

  # address ends with the parameter value, address: The seed url address
  address_ends_with: String

  # address doesn't end with the parameter value, address: The seed url address
  address_not_ends_with: String

  # address lowercased equals the parameter, address: The seed url address
  address_l: String

  # address lowercased doesn't equal the parameter, address: The seed url address
  address_l_not: String

  # address lowercased is a substring of the parameter, address: The seed url address
  address_l_in: String

  # address lowercased is not a substring of the parameter, address: The seed url address
  address_l_not_in: String

  # address lowercased contains the parameter as substring, address: The seed url address
  address_l_contains: String

  # address lowercased doesn't contain the parameter as substring, address: The seed url address
  address_l_not_contains: String

  # address lowercased starts with the parameter value, address: The seed url address
  address_l_starts_with: String

  # address lowercased doesn't start with the parameter value, address: The seed url address
  address_l_not_starts_with: String

  # address lowercased ends with the parameter value, address: The seed url address
  address_l_ends_with: String

  # address lowercased doesn't end with the parameter value, address: The seed url address
  address_l_not_ends_with: String

  # id exactly equals to the parameter, id: The unique address identification number
  id: Int

  # id not equals to the parameter, id: The unique address identification number
  id_not: Int

  # id is less then the parameter, id: The unique address identification number
  id_lt: Int

  # id is less then or equal to the parameter, id: The unique address identification number
  id_lte: Int

  # id is greater then the parameter, id: The unique address identification number
  id_gt: Int

  # id is greater then or equal to the parameter, id: The unique address identification number
  id_gte: Int

  # password exactly equals to the parameter, password: The user password for basic authentication
  password: String

  # password not equals to the parameter, password: The user password for basic authentication
  password_not: String

  # password is a substring of the parameter, password: The user password for basic authentication
  password_in: String

  # password is not a substring of the parameter, password: The user password for basic authentication
  password_not_in: String

  # password contains the parameter as substring, password: The user password for basic authentication
  password_contains: String

  # password doesn't contain the parameter as substring, password: The user password for basic authentication
  password_not_contains: String

  # password starts with the parameter value, password: The user password for basic authentication
  password_starts_with: String

  # password doesn't start with the parameter value, password: The user password for basic authentication
  password_not_starts_with: String

  # password ends with the parameter value, password: The user password for basic authentication
  password_ends_with: String

  # password doesn't end with the parameter value, password: The user password for basic authentication
  password_not_ends_with: String

  # password lowercased equals the parameter, password: The user password for basic authentication
  password_l: String

  # password lowercased doesn't equal the parameter, password: The user password for basic authentication
  password_l_not: String

  # password lowercased is a substring of the parameter, password: The user password for basic authentication
  password_l_in: String

  # password lowercased is not a substring of the parameter, password: The user password for basic authentication
  password_l_not_in: String

  # password lowercased contains the parameter as substring, password: The user password for basic authentication
  password_l_contains: String

  # password lowercased doesn't contain the parameter as substring, password: The user password for basic authentication
  password_l_not_contains: String

  # password lowercased starts with the parameter value, password: The user password for basic authentication
  password_l_starts_with: String

  # password lowercased doesn't start with the parameter value, password: The user password for basic authentication
  password_l_not_starts_with: String

  # password lowercased ends with the parameter value, password: The user password for basic authentication
  password_l_ends_with: String

  # password lowercased doesn't end with the parameter value, password: The user password for basic authentication
  password_l_not_ends_with: String

  # type exactly equals to the parameter, type: The  type of feed
  type: ClusterKitNodeApi_ClusterKit_NodeManager_Client_ORM_NugetFeed_EnFeedType

  # type not equals to the parameter, type: The  type of feed
  type_not: ClusterKitNodeApi_ClusterKit_NodeManager_Client_ORM_NugetFeed_EnFeedType

  # userName exactly equals to the parameter, userName: The username for basic authentication
  userName: String

  # userName not equals to the parameter, userName: The username for basic authentication
  userName_not: String

  # userName is a substring of the parameter, userName: The username for basic authentication
  userName_in: String

  # userName is not a substring of the parameter, userName: The username for basic authentication
  userName_not_in: String

  # userName contains the parameter as substring, userName: The username for basic authentication
  userName_contains: String

  # userName doesn't contain the parameter as substring, userName: The username for basic authentication
  userName_not_contains: String

  # userName starts with the parameter value, userName: The username for basic authentication
  userName_starts_with: String

  # userName doesn't start with the parameter value, userName: The username for basic authentication
  userName_not_starts_with: String

  # userName ends with the parameter value, userName: The username for basic authentication
  userName_ends_with: String

  # userName doesn't end with the parameter value, userName: The username for basic authentication
  userName_not_ends_with: String

  # userName lowercased equals the parameter, userName: The username for basic authentication
  userName_l: String

  # userName lowercased doesn't equal the parameter, userName: The username for basic authentication
  userName_l_not: String

  # userName lowercased is a substring of the parameter, userName: The username for basic authentication
  userName_l_in: String

  # userName lowercased is not a substring of the parameter, userName: The username for basic authentication
  userName_l_not_in: String

  # userName lowercased contains the parameter as substring, userName: The username for basic authentication
  userName_l_contains: String

  # userName lowercased doesn't contain the parameter as substring, userName: The username for basic authentication
  userName_l_not_contains: String

  # userName lowercased starts with the parameter value, userName: The username for basic authentication
  userName_l_starts_with: String

  # userName lowercased doesn't start with the parameter value, userName: The username for basic authentication
  userName_l_not_starts_with: String

  # userName lowercased ends with the parameter value, userName: The username for basic authentication
  userName_l_ends_with: String

  # userName lowercased doesn't end with the parameter value, userName: The username for basic authentication
  userName_l_not_ends_with: String
}

# The link to the nuget feed to download updates
input ClusterKitNodeApi_ClusterKitNugetFeed_Input {
  # The seed url address
  address: String

  # The unique address identification number
  id: Int

  # The user password for basic authentication
  password: String

  # The  type of feed
  type: ClusterKitNodeApi_ClusterKit_NodeManager_Client_ORM_NugetFeed_EnFeedType

  # The username for basic authentication
  userName: String
}

type ClusterKitNodeApi_ClusterKitNugetFeed_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_ClusterKitNugetFeed
  edge: ClusterKitNodeApi_ClusterKitNugetFeed_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKitNugetFeed_Sort {
  address_asc
  address_desc
  id_asc
  id_desc
  password_asc
  password_desc
  type_asc
  type_desc
  userName_asc
  userName_desc
}

# Short description of NuGet package
type ClusterKitNodeApi_ClusterKitPackageDescription implements Node {
  # The package id (name and version)
  __id: String

  # The package name
  name: String

  # The package version
  version: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitPackageDescription
#  Short description of NuGet package
type ClusterKitNodeApi_ClusterKitPackageDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitPackageDescription_Edge]
}

# The ClusterKitNodeApi_ClusterKitPackageDescription in a connected list
#  Short description of NuGet package
type ClusterKitNodeApi_ClusterKitPackageDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # Short description of NuGet package
  node: ClusterKitNodeApi_ClusterKitPackageDescription
}

input ClusterKitNodeApi_ClusterKitPackageDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitPackageDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitPackageDescription_Filter_Input

  # id exactly equals to the parameter, id: The package id (name and version)
  id: String

  # id not equals to the parameter, id: The package id (name and version)
  id_not: String

  # id is a substring of the parameter, id: The package id (name and version)
  id_in: String

  # id is not a substring of the parameter, id: The package id (name and version)
  id_not_in: String

  # id contains the parameter as substring, id: The package id (name and version)
  id_contains: String

  # id doesn't contain the parameter as substring, id: The package id (name and version)
  id_not_contains: String

  # id starts with the parameter value, id: The package id (name and version)
  id_starts_with: String

  # id doesn't start with the parameter value, id: The package id (name and version)
  id_not_starts_with: String

  # id ends with the parameter value, id: The package id (name and version)
  id_ends_with: String

  # id doesn't end with the parameter value, id: The package id (name and version)
  id_not_ends_with: String

  # id lowercased equals the parameter, id: The package id (name and version)
  id_l: String

  # id lowercased doesn't equal the parameter, id: The package id (name and version)
  id_l_not: String

  # id lowercased is a substring of the parameter, id: The package id (name and version)
  id_l_in: String

  # id lowercased is not a substring of the parameter, id: The package id (name and version)
  id_l_not_in: String

  # id lowercased contains the parameter as substring, id: The package id (name and version)
  id_l_contains: String

  # id lowercased doesn't contain the parameter as substring, id: The package id (name and version)
  id_l_not_contains: String

  # id lowercased starts with the parameter value, id: The package id (name and version)
  id_l_starts_with: String

  # id lowercased doesn't start with the parameter value, id: The package id (name and version)
  id_l_not_starts_with: String

  # id lowercased ends with the parameter value, id: The package id (name and version)
  id_l_ends_with: String

  # id lowercased doesn't end with the parameter value, id: The package id (name and version)
  id_l_not_ends_with: String

  # name exactly equals to the parameter, name: The package name
  name: String

  # name not equals to the parameter, name: The package name
  name_not: String

  # name is a substring of the parameter, name: The package name
  name_in: String

  # name is not a substring of the parameter, name: The package name
  name_not_in: String

  # name contains the parameter as substring, name: The package name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The package name
  name_not_contains: String

  # name starts with the parameter value, name: The package name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The package name
  name_not_starts_with: String

  # name ends with the parameter value, name: The package name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The package name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The package name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The package name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The package name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The package name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The package name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The package name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The package name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The package name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The package name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The package name
  name_l_not_ends_with: String

  # version exactly equals to the parameter, version: The package version
  version: String

  # version not equals to the parameter, version: The package version
  version_not: String

  # version is a substring of the parameter, version: The package version
  version_in: String

  # version is not a substring of the parameter, version: The package version
  version_not_in: String

  # version contains the parameter as substring, version: The package version
  version_contains: String

  # version doesn't contain the parameter as substring, version: The package version
  version_not_contains: String

  # version starts with the parameter value, version: The package version
  version_starts_with: String

  # version doesn't start with the parameter value, version: The package version
  version_not_starts_with: String

  # version ends with the parameter value, version: The package version
  version_ends_with: String

  # version doesn't end with the parameter value, version: The package version
  version_not_ends_with: String

  # version lowercased equals the parameter, version: The package version
  version_l: String

  # version lowercased doesn't equal the parameter, version: The package version
  version_l_not: String

  # version lowercased is a substring of the parameter, version: The package version
  version_l_in: String

  # version lowercased is not a substring of the parameter, version: The package version
  version_l_not_in: String

  # version lowercased contains the parameter as substring, version: The package version
  version_l_contains: String

  # version lowercased doesn't contain the parameter as substring, version: The package version
  version_l_not_contains: String

  # version lowercased starts with the parameter value, version: The package version
  version_l_starts_with: String

  # version lowercased doesn't start with the parameter value, version: The package version
  version_l_not_starts_with: String

  # version lowercased ends with the parameter value, version: The package version
  version_l_ends_with: String

  # version lowercased doesn't end with the parameter value, version: The package version
  version_l_not_ends_with: String
}

enum ClusterKitNodeApi_ClusterKitPackageDescription_Sort {
  id_asc
  id_desc
  name_asc
  name_desc
  version_asc
  version_desc
}

# Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_ClusterKitRole implements Node {
  # The role uid
  uid: Uid

  # The role name
  name: String

  # The list of granted privileges
  allowedScope: [String]

  # The list of denied privileges (the user will not acquire this privileges, even if they will be granted via other roles)
  deniedScope: [String]

  # The list of users assigned to this role
  users(filter: ClusterKitNodeApi_ClusterKitUser_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitUser_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitUser_Connection
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitRole
#  Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_ClusterKitRole_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitRole_Edge]
}

# The ClusterKitNodeApi_ClusterKitRole in a connected list
#  Security role. The amount of privileges assigned to the user
type ClusterKitNodeApi_ClusterKitRole_Edge {
  # A value to use with paging positioning
  cursor: String

  # Security role. The amount of privileges assigned to the user
  node: ClusterKitNodeApi_ClusterKitRole
}

input ClusterKitNodeApi_ClusterKitRole_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitRole_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitRole_Filter_Input

  # uid exactly equals to the parameter, uid: The role uid
  uid: Uid

  # uid not equals to the parameter, uid: The role uid
  uid_not: Uid

  # name exactly equals to the parameter, name: The role name
  name: String

  # name not equals to the parameter, name: The role name
  name_not: String

  # name is a substring of the parameter, name: The role name
  name_in: String

  # name is not a substring of the parameter, name: The role name
  name_not_in: String

  # name contains the parameter as substring, name: The role name
  name_contains: String

  # name doesn't contain the parameter as substring, name: The role name
  name_not_contains: String

  # name starts with the parameter value, name: The role name
  name_starts_with: String

  # name doesn't start with the parameter value, name: The role name
  name_not_starts_with: String

  # name ends with the parameter value, name: The role name
  name_ends_with: String

  # name doesn't end with the parameter value, name: The role name
  name_not_ends_with: String

  # name lowercased equals the parameter, name: The role name
  name_l: String

  # name lowercased doesn't equal the parameter, name: The role name
  name_l_not: String

  # name lowercased is a substring of the parameter, name: The role name
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: The role name
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: The role name
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: The role name
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: The role name
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: The role name
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: The role name
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: The role name
  name_l_not_ends_with: String
}

# Security role. The amount of privileges assigned to the user
input ClusterKitNodeApi_ClusterKitRole_Input {
  # The role uid
  uid: Uid

  # The role name
  name: String

  # The list of granted privileges
  allowedScope: [String]

  # The list of denied privileges (the user will not acquire this privileges, even if they will be granted via other roles)
  deniedScope: [String]
}

type ClusterKitNodeApi_ClusterKitRole_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_ClusterKitRole
  edge: ClusterKitNodeApi_ClusterKitRole_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKitRole_Sort {
  uid_asc
  uid_desc
  name_asc
  name_desc
}

# The address of fixed cluster seed for new node configuration
type ClusterKitNodeApi_ClusterKitSeedAddress implements Node {
  # The seed address in format of akka url
  address: String

  # The unique address identification number
  __id: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitSeedAddress
#  The address of fixed cluster seed for new node configuration
type ClusterKitNodeApi_ClusterKitSeedAddress_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitSeedAddress_Edge]
}

# The ClusterKitNodeApi_ClusterKitSeedAddress in a connected list
#  The address of fixed cluster seed for new node configuration
type ClusterKitNodeApi_ClusterKitSeedAddress_Edge {
  # A value to use with paging positioning
  cursor: String

  # The address of fixed cluster seed for new node configuration
  node: ClusterKitNodeApi_ClusterKitSeedAddress
}

input ClusterKitNodeApi_ClusterKitSeedAddress_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitSeedAddress_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitSeedAddress_Filter_Input

  # address exactly equals to the parameter, address: The seed address in format of akka url
  address: String

  # address not equals to the parameter, address: The seed address in format of akka url
  address_not: String

  # address is a substring of the parameter, address: The seed address in format of akka url
  address_in: String

  # address is not a substring of the parameter, address: The seed address in format of akka url
  address_not_in: String

  # address contains the parameter as substring, address: The seed address in format of akka url
  address_contains: String

  # address doesn't contain the parameter as substring, address: The seed address in format of akka url
  address_not_contains: String

  # address starts with the parameter value, address: The seed address in format of akka url
  address_starts_with: String

  # address doesn't start with the parameter value, address: The seed address in format of akka url
  address_not_starts_with: String

  # address ends with the parameter value, address: The seed address in format of akka url
  address_ends_with: String

  # address doesn't end with the parameter value, address: The seed address in format of akka url
  address_not_ends_with: String

  # address lowercased equals the parameter, address: The seed address in format of akka url
  address_l: String

  # address lowercased doesn't equal the parameter, address: The seed address in format of akka url
  address_l_not: String

  # address lowercased is a substring of the parameter, address: The seed address in format of akka url
  address_l_in: String

  # address lowercased is not a substring of the parameter, address: The seed address in format of akka url
  address_l_not_in: String

  # address lowercased contains the parameter as substring, address: The seed address in format of akka url
  address_l_contains: String

  # address lowercased doesn't contain the parameter as substring, address: The seed address in format of akka url
  address_l_not_contains: String

  # address lowercased starts with the parameter value, address: The seed address in format of akka url
  address_l_starts_with: String

  # address lowercased doesn't start with the parameter value, address: The seed address in format of akka url
  address_l_not_starts_with: String

  # address lowercased ends with the parameter value, address: The seed address in format of akka url
  address_l_ends_with: String

  # address lowercased doesn't end with the parameter value, address: The seed address in format of akka url
  address_l_not_ends_with: String

  # id exactly equals to the parameter, id: The unique address identification number
  id: Int

  # id not equals to the parameter, id: The unique address identification number
  id_not: Int

  # id is less then the parameter, id: The unique address identification number
  id_lt: Int

  # id is less then or equal to the parameter, id: The unique address identification number
  id_lte: Int

  # id is greater then the parameter, id: The unique address identification number
  id_gt: Int

  # id is greater then or equal to the parameter, id: The unique address identification number
  id_gte: Int
}

# The address of fixed cluster seed for new node configuration
input ClusterKitNodeApi_ClusterKitSeedAddress_Input {
  # The seed address in format of akka url
  address: String

  # The unique address identification number
  id: Int
}

type ClusterKitNodeApi_ClusterKitSeedAddress_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_ClusterKitSeedAddress
  edge: ClusterKitNodeApi_ClusterKitSeedAddress_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKitSeedAddress_Sort {
  address_asc
  address_desc
  id_asc
  id_desc
}

# Overall debug data of current cluster node template use
type ClusterKitNodeApi_ClusterKitTemplatesUsageStatistics implements Node {
  # node templates statistics data
  templates(filter: ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Sort], id: String, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Connection
  id: ID
}

# Statistics data for template
type ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData implements Node {
  #  current active node count
  activeNodes: Int

  # currently configured maximum required active nodes count
  maximumRequiredNodes: Int

  # currently configured minimum required active nodes count
  minimumRequiredNodes: Int

  # name of the node template
  name: String

  # the number of currently active nodes, that need to be upgraded
  obsoleteNodes: Int

  # the number of nodes that are in upgrade process now
  startingNodes: Int

  # the number of nodes that are in upgrade process now
  upgradingNodes: Int
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData
#  Statistics data for template
type ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Edge]
}

# The ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData in a connected list
#  Statistics data for template
type ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Edge {
  # A value to use with paging positioning
  cursor: String

  # Statistics data for template
  node: ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData
}

input ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Filter_Input

  # activeNodes exactly equals to the parameter, activeNodes:  current active node count
  activeNodes: Int

  # activeNodes not equals to the parameter, activeNodes:  current active node count
  activeNodes_not: Int

  # activeNodes is less then the parameter, activeNodes:  current active node count
  activeNodes_lt: Int

  # activeNodes is less then or equal to the parameter, activeNodes:  current active node count
  activeNodes_lte: Int

  # activeNodes is greater then the parameter, activeNodes:  current active node count
  activeNodes_gt: Int

  # activeNodes is greater then or equal to the parameter, activeNodes:  current active node count
  activeNodes_gte: Int

  # maximumRequiredNodes exactly equals to the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes: Int

  # maximumRequiredNodes not equals to the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_not: Int

  # maximumRequiredNodes is less then the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_lt: Int

  # maximumRequiredNodes is less then or equal to the parameter,
  # maximumRequiredNodes: currently configured maximum required active nodes count
  maximumRequiredNodes_lte: Int

  # maximumRequiredNodes is greater then the parameter, maximumRequiredNodes:
  # currently configured maximum required active nodes count
  maximumRequiredNodes_gt: Int

  # maximumRequiredNodes is greater then or equal to the parameter,
  # maximumRequiredNodes: currently configured maximum required active nodes count
  maximumRequiredNodes_gte: Int

  # minimumRequiredNodes exactly equals to the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes: Int

  # minimumRequiredNodes not equals to the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_not: Int

  # minimumRequiredNodes is less then the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_lt: Int

  # minimumRequiredNodes is less then or equal to the parameter,
  # minimumRequiredNodes: currently configured minimum required active nodes count
  minimumRequiredNodes_lte: Int

  # minimumRequiredNodes is greater then the parameter, minimumRequiredNodes:
  # currently configured minimum required active nodes count
  minimumRequiredNodes_gt: Int

  # minimumRequiredNodes is greater then or equal to the parameter,
  # minimumRequiredNodes: currently configured minimum required active nodes count
  minimumRequiredNodes_gte: Int

  # name exactly equals to the parameter, name: name of the node template
  name: String

  # name not equals to the parameter, name: name of the node template
  name_not: String

  # name is a substring of the parameter, name: name of the node template
  name_in: String

  # name is not a substring of the parameter, name: name of the node template
  name_not_in: String

  # name contains the parameter as substring, name: name of the node template
  name_contains: String

  # name doesn't contain the parameter as substring, name: name of the node template
  name_not_contains: String

  # name starts with the parameter value, name: name of the node template
  name_starts_with: String

  # name doesn't start with the parameter value, name: name of the node template
  name_not_starts_with: String

  # name ends with the parameter value, name: name of the node template
  name_ends_with: String

  # name doesn't end with the parameter value, name: name of the node template
  name_not_ends_with: String

  # name lowercased equals the parameter, name: name of the node template
  name_l: String

  # name lowercased doesn't equal the parameter, name: name of the node template
  name_l_not: String

  # name lowercased is a substring of the parameter, name: name of the node template
  name_l_in: String

  # name lowercased is not a substring of the parameter, name: name of the node template
  name_l_not_in: String

  # name lowercased contains the parameter as substring, name: name of the node template
  name_l_contains: String

  # name lowercased doesn't contain the parameter as substring, name: name of the node template
  name_l_not_contains: String

  # name lowercased starts with the parameter value, name: name of the node template
  name_l_starts_with: String

  # name lowercased doesn't start with the parameter value, name: name of the node template
  name_l_not_starts_with: String

  # name lowercased ends with the parameter value, name: name of the node template
  name_l_ends_with: String

  # name lowercased doesn't end with the parameter value, name: name of the node template
  name_l_not_ends_with: String

  # obsoleteNodes exactly equals to the parameter, obsoleteNodes: the number of
  # currently active nodes, that need to be upgraded
  obsoleteNodes: Int

  # obsoleteNodes not equals to the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_not: Int

  # obsoleteNodes is less then the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_lt: Int

  # obsoleteNodes is less then or equal to the parameter, obsoleteNodes: the
  # number of currently active nodes, that need to be upgraded
  obsoleteNodes_lte: Int

  # obsoleteNodes is greater then the parameter, obsoleteNodes: the number of currently active nodes, that need to be upgraded
  obsoleteNodes_gt: Int

  # obsoleteNodes is greater then or equal to the parameter, obsoleteNodes: the
  # number of currently active nodes, that need to be upgraded
  obsoleteNodes_gte: Int

  # startingNodes exactly equals to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes: Int

  # startingNodes not equals to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_not: Int

  # startingNodes is less then the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_lt: Int

  # startingNodes is less then or equal to the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_lte: Int

  # startingNodes is greater then the parameter, startingNodes: the number of nodes that are in upgrade process now
  startingNodes_gt: Int

  # startingNodes is greater then or equal to the parameter, startingNodes: the
  # number of nodes that are in upgrade process now
  startingNodes_gte: Int

  # upgradingNodes exactly equals to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes: Int

  # upgradingNodes not equals to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_not: Int

  # upgradingNodes is less then the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_lt: Int

  # upgradingNodes is less then or equal to the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_lte: Int

  # upgradingNodes is greater then the parameter, upgradingNodes: the number of nodes that are in upgrade process now
  upgradingNodes_gt: Int

  # upgradingNodes is greater then or equal to the parameter, upgradingNodes: the
  # number of nodes that are in upgrade process now
  upgradingNodes_gte: Int
}

enum ClusterKitNodeApi_ClusterKitTemplatesUsageStatisticsData_Sort {
  activeNodes_asc
  activeNodes_desc
  maximumRequiredNodes_asc
  maximumRequiredNodes_desc
  minimumRequiredNodes_asc
  minimumRequiredNodes_desc
  name_asc
  name_desc
  obsoleteNodes_asc
  obsoleteNodes_desc
  startingNodes_asc
  startingNodes_desc
  upgradingNodes_asc
  upgradingNodes_desc
}

# The web ui user
type ClusterKitNodeApi_ClusterKitUser implements Node {
  # The list of roles assigned to this user
  roles(filter: ClusterKitNodeApi_ClusterKitRole_Filter_Input, sort: [ClusterKitNodeApi_ClusterKitRole_Sort], id: Uid, offset: Int, limit: Int): ClusterKitNodeApi_ClusterKitRole_Connection

  # The user uid
  uid: Uid

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ClusterKitUser
#  The web ui user
type ClusterKitNodeApi_ClusterKitUser_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ClusterKitUser_Edge]
}

# The ClusterKitNodeApi_ClusterKitUser in a connected list
#  The web ui user
type ClusterKitNodeApi_ClusterKitUser_Edge {
  # A value to use with paging positioning
  cursor: String

  # The web ui user
  node: ClusterKitNodeApi_ClusterKitUser
}

input ClusterKitNodeApi_ClusterKitUser_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ClusterKitUser_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ClusterKitUser_Filter_Input

  # uid exactly equals to the parameter, uid: The user uid
  uid: Uid

  # uid not equals to the parameter, uid: The user uid
  uid_not: Uid

  # activeTill exactly equals to the parameter, activeTill: A date, till which
  # user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # activeTill not equals to the parameter, activeTill: A date, till which user is
  # active. After this date the user will be blocked. Null for unlimited work.
  activeTill_not: Date

  # activeTill is less then the parameter, activeTill: A date, till which user is
  # active. After this date the user will be blocked. Null for unlimited work.
  activeTill_lt: Date

  # activeTill is less then or equal to the parameter, activeTill: A date, till
  # which user is active. After this date the user will be blocked. Null for
  # unlimited work.
  activeTill_lte: Date

  # activeTill is greater then the parameter, activeTill: A date, till which user
  # is active. After this date the user will be blocked. Null for unlimited work.
  activeTill_gt: Date

  # activeTill is greater then or equal to the parameter, activeTill: A date, till
  # which user is active. After this date the user will be blocked. Null for
  # unlimited work.
  activeTill_gte: Date

  # blockedTill exactly equals to the parameter, blockedTill: A date, till which
  # user is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill: Date

  # blockedTill not equals to the parameter, blockedTill: A date, till which user
  # is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_not: Date

  # blockedTill is less then the parameter, blockedTill: A date, till which user
  # is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_lt: Date

  # blockedTill is less then or equal to the parameter, blockedTill: A date, till
  # which user is temporary blocked. After this date the user will be blocked.
  # Null for unlimited work.
  blockedTill_lte: Date

  # blockedTill is greater then the parameter, blockedTill: A date, till which
  # user is temporary blocked. After this date the user will be blocked. Null for
  # unlimited work.
  blockedTill_gt: Date

  # blockedTill is greater then or equal to the parameter, blockedTill: A date,
  # till which user is temporary blocked. After this date the user will be
  # blocked. Null for unlimited work.
  blockedTill_gte: Date

  # isBlocked exactly equals to the parameter, isBlocked: A value indicating
  # whether current user is currently manually blocked
  isBlocked: Boolean

  # isBlocked not equals to the parameter, isBlocked: A value indicating whether current user is currently manually blocked
  isBlocked_not: Boolean

  # isDeleted exactly equals to the parameter, isDeleted: A value indicating
  # whether current user is currently manually blocked
  isDeleted: Boolean

  # isDeleted not equals to the parameter, isDeleted: A value indicating whether current user is currently manually blocked
  isDeleted_not: Boolean

  # login exactly equals to the parameter, login: The user login
  login: String

  # login not equals to the parameter, login: The user login
  login_not: String

  # login is a substring of the parameter, login: The user login
  login_in: String

  # login is not a substring of the parameter, login: The user login
  login_not_in: String

  # login contains the parameter as substring, login: The user login
  login_contains: String

  # login doesn't contain the parameter as substring, login: The user login
  login_not_contains: String

  # login starts with the parameter value, login: The user login
  login_starts_with: String

  # login doesn't start with the parameter value, login: The user login
  login_not_starts_with: String

  # login ends with the parameter value, login: The user login
  login_ends_with: String

  # login doesn't end with the parameter value, login: The user login
  login_not_ends_with: String

  # login lowercased equals the parameter, login: The user login
  login_l: String

  # login lowercased doesn't equal the parameter, login: The user login
  login_l_not: String

  # login lowercased is a substring of the parameter, login: The user login
  login_l_in: String

  # login lowercased is not a substring of the parameter, login: The user login
  login_l_not_in: String

  # login lowercased contains the parameter as substring, login: The user login
  login_l_contains: String

  # login lowercased doesn't contain the parameter as substring, login: The user login
  login_l_not_contains: String

  # login lowercased starts with the parameter value, login: The user login
  login_l_starts_with: String

  # login lowercased doesn't start with the parameter value, login: The user login
  login_l_not_starts_with: String

  # login lowercased ends with the parameter value, login: The user login
  login_l_ends_with: String

  # login lowercased doesn't end with the parameter value, login: The user login
  login_l_not_ends_with: String
}

# The web ui user
input ClusterKitNodeApi_ClusterKitUser_Input {
  # The user uid
  uid: Uid

  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
}

type ClusterKitNodeApi_ClusterKitUser_NodeMutationPayload {
  deletedId: ID
  node: ClusterKitNodeApi_ClusterKitUser
  edge: ClusterKitNodeApi_ClusterKitUser_Edge
  errors: ClusterKitNodeApi_ErrorDescription_Connection
  clientMutationId: String
  api: ClusterKitMonitoring_ClusterKitNodeApi
}

enum ClusterKitNodeApi_ClusterKitUser_Sort {
  uid_asc
  uid_desc
  activeTill_asc
  activeTill_desc
  blockedTill_asc
  blockedTill_desc
  isBlocked_asc
  isBlocked_desc
  isDeleted_asc
  isDeleted_desc
  login_asc
  login_desc
}

# Short user description
type ClusterKitNodeApi_ClusterKitUserDescription implements Node {
  # A date, till which user is active. After this date the user will be blocked. Null for unlimited work.
  activeTill: Date

  # A date, till which user is temporary blocked. After this date the user will be blocked. Null for unlimited work.
  blockedTill: Date

  # A value indicating whether current user is currently manually blocked
  isBlocked: Boolean

  # A value indicating whether current user is currently manually blocked
  isDeleted: Boolean

  # The user login
  login: String
  id: ID
}

# The mutation error description
type ClusterKitNodeApi_ErrorDescription implements Node {
  # The error number
  number: Int

  # The related field name
  field: String

  # The error message
  message: String
  id: ID
}

# The list of connected ClusterKitNodeApi_ErrorDescription
#  The mutation error description
type ClusterKitNodeApi_ErrorDescription_Connection {
  # The total count of objects satisfying filter conditions
  count: Int

  # The list of edges according to filtering and paging conditions
  edges: [ClusterKitNodeApi_ErrorDescription_Edge]
}

# The ClusterKitNodeApi_ErrorDescription in a connected list
#  The mutation error description
type ClusterKitNodeApi_ErrorDescription_Edge {
  # A value to use with paging positioning
  cursor: String

  # The mutation error description
  node: ClusterKitNodeApi_ErrorDescription
}

input ClusterKitNodeApi_ErrorDescription_Filter_Input {
  # Combine filter conditions with logic "OR"
  OR: ClusterKitNodeApi_ErrorDescription_Filter_Input

  # Combine filter conditions with logic "AND"
  AND: ClusterKitNodeApi_ErrorDescription_Filter_Input

  # number exactly equals to the parameter, number: The error number
  number: Int

  # number not equals to the parameter, number: The error number
  number_not: Int

  # number is less then the parameter, number: The error number
  number_lt: Int

  # number is less then or equal to the parameter, number: The error number
  number_lte: Int

  # number is greater then the parameter, number: The error number
  number_gt: Int

  # number is greater then or equal to the parameter, number: The error number
  number_gte: Int

  # field exactly equals to the parameter, field: The related field name
  field: String

  # field not equals to the parameter, field: The related field name
  field_not: String

  # field is a substring of the parameter, field: The related field name
  field_in: String

  # field is not a substring of the parameter, field: The related field name
  field_not_in: String

  # field contains the parameter as substring, field: The related field name
  field_contains: String

  # field doesn't contain the parameter as substring, field: The related field name
  field_not_contains: String

  # field starts with the parameter value, field: The related field name
  field_starts_with: String

  # field doesn't start with the parameter value, field: The related field name
  field_not_starts_with: String

  # field ends with the parameter value, field: The related field name
  field_ends_with: String

  # field doesn't end with the parameter value, field: The related field name
  field_not_ends_with: String

  # field lowercased equals the parameter, field: The related field name
  field_l: String

  # field lowercased doesn't equal the parameter, field: The related field name
  field_l_not: String

  # field lowercased is a substring of the parameter, field: The related field name
  field_l_in: String

  # field lowercased is not a substring of the parameter, field: The related field name
  field_l_not_in: String

  # field lowercased contains the parameter as substring, field: The related field name
  field_l_contains: String

  # field lowercased doesn't contain the parameter as substring, field: The related field name
  field_l_not_contains: String

  # field lowercased starts with the parameter value, field: The related field name
  field_l_starts_with: String

  # field lowercased doesn't start with the parameter value, field: The related field name
  field_l_not_starts_with: String

  # field lowercased ends with the parameter value, field: The related field name
  field_l_ends_with: String

  # field lowercased doesn't end with the parameter value, field: The related field name
  field_l_not_ends_with: String

  # message exactly equals to the parameter, message: The error message
  message: String

  # message not equals to the parameter, message: The error message
  message_not: String

  # message is a substring of the parameter, message: The error message
  message_in: String

  # message is not a substring of the parameter, message: The error message
  message_not_in: String

  # message contains the parameter as substring, message: The error message
  message_contains: String

  # message doesn't contain the parameter as substring, message: The error message
  message_not_contains: String

  # message starts with the parameter value, message: The error message
  message_starts_with: String

  # message doesn't start with the parameter value, message: The error message
  message_not_starts_with: String

  # message ends with the parameter value, message: The error message
  message_ends_with: String

  # message doesn't end with the parameter value, message: The error message
  message_not_ends_with: String

  # message lowercased equals the parameter, message: The error message
  message_l: String

  # message lowercased doesn't equal the parameter, message: The error message
  message_l_not: String

  # message lowercased is a substring of the parameter, message: The error message
  message_l_in: String

  # message lowercased is not a substring of the parameter, message: The error message
  message_l_not_in: String

  # message lowercased contains the parameter as substring, message: The error message
  message_l_contains: String

  # message lowercased doesn't contain the parameter as substring, message: The error message
  message_l_not_contains: String

  # message lowercased starts with the parameter value, message: The error message
  message_l_starts_with: String

  # message lowercased doesn't start with the parameter value, message: The error message
  message_l_not_starts_with: String

  # message lowercased ends with the parameter value, message: The error message
  message_l_ends_with: String

  # message lowercased doesn't end with the parameter value, message: The error message
  message_l_not_ends_with: String
}

enum ClusterKitNodeApi_ErrorDescription_Sort {
  number_asc
  number_desc
  field_asc
  field_desc
  message_asc
  message_desc
}

input ClusterKitNodeApi_nodeManagerData_nodeTemplates_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitNodeTemplate_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_nodeTemplates_delete_Input {
  # The object's id
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_nodeTemplates_update_Input {
  # The object's id
  id: Int

  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitNodeTemplate_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_nugetFeeds_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitNugetFeed_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_nugetFeeds_delete_Input {
  # The object's id
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_nugetFeeds_update_Input {
  # The object's id
  id: Int

  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitNugetFeed_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_reloadPackages_Input {
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_roles_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitRole_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_roles_update_Input {
  # The object's id
  id: Uid

  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitRole_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_seedAddresses_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitSeedAddress_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_seedAddresses_delete_Input {
  # The object's id
  id: Int
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_seedAddresses_update_Input {
  # The object's id
  id: Int

  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitSeedAddress_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_upgradeNode_Input {
  address: String
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_users_create_Input {
  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitUser_Input
  clientMutationId: String
}

input ClusterKitNodeApi_nodeManagerData_users_update_Input {
  # The object's id
  id: Uid

  # The object's data
  newNode: ClusterKitNodeApi_ClusterKitUser_Input
  clientMutationId: String
}

# The `Date` scalar type represents a timestamp provided in UTC. `Date` expects
# timestamps to be formatted in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar Date

scalar Decimal

# The list of all detected mutations
type Mutations {
  # Initiates the new actor system scan
  ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan(input: ClusterKitMonitoring_clusterKitMonitoringApi_initiateScan_Input): Boolean_MutationPayload

  # Request to server to reload package list
  ClusterKitNodeApi_nodeManagerData_reloadPackages(input: ClusterKitNodeApi_nodeManagerData_reloadPackages_Input): ClusterKitNodeApi_ClusterKit_API_Client_MutationResult_System_Boolean__MutationPayload

  # Manual node upgrade request
  ClusterKitNodeApi_nodeManagerData_upgradeNode(input: ClusterKitNodeApi_nodeManagerData_upgradeNode_Input): ClusterKitNodeApi_ClusterKit_API_Client_MutationResult_System_Boolean__MutationPayload

  # Creates the new node template
  ClusterKitNodeApi_nodeManagerData_nodeTemplates_create(input: ClusterKitNodeApi_nodeManagerData_nodeTemplates_create_Input): ClusterKitNodeApi_ClusterKitNodeTemplate_NodeMutationPayload

  # Creates the new node template
  ClusterKitNodeApi_nodeManagerData_nodeTemplates_update(input: ClusterKitNodeApi_nodeManagerData_nodeTemplates_update_Input): ClusterKitNodeApi_ClusterKitNodeTemplate_NodeMutationPayload

  # Creates the new node template
  ClusterKitNodeApi_nodeManagerData_nodeTemplates_delete(input: ClusterKitNodeApi_nodeManagerData_nodeTemplates_delete_Input): ClusterKitNodeApi_ClusterKitNodeTemplate_NodeMutationPayload

  # Creates the new nuget feed link
  ClusterKitNodeApi_nodeManagerData_nugetFeeds_create(input: ClusterKitNodeApi_nodeManagerData_nugetFeeds_create_Input): ClusterKitNodeApi_ClusterKitNugetFeed_NodeMutationPayload

  # Creates the new nuget feed link
  ClusterKitNodeApi_nodeManagerData_nugetFeeds_update(input: ClusterKitNodeApi_nodeManagerData_nugetFeeds_update_Input): ClusterKitNodeApi_ClusterKitNugetFeed_NodeMutationPayload

  # Creates the new nuget feed link
  ClusterKitNodeApi_nodeManagerData_nugetFeeds_delete(input: ClusterKitNodeApi_nodeManagerData_nugetFeeds_delete_Input): ClusterKitNodeApi_ClusterKitNugetFeed_NodeMutationPayload

  # Creates the new seed address
  ClusterKitNodeApi_nodeManagerData_seedAddresses_create(input: ClusterKitNodeApi_nodeManagerData_seedAddresses_create_Input): ClusterKitNodeApi_ClusterKitSeedAddress_NodeMutationPayload

  # Creates the new seed address
  ClusterKitNodeApi_nodeManagerData_seedAddresses_update(input: ClusterKitNodeApi_nodeManagerData_seedAddresses_update_Input): ClusterKitNodeApi_ClusterKitSeedAddress_NodeMutationPayload

  # Creates the new seed address
  ClusterKitNodeApi_nodeManagerData_seedAddresses_delete(input: ClusterKitNodeApi_nodeManagerData_seedAddresses_delete_Input): ClusterKitNodeApi_ClusterKitSeedAddress_NodeMutationPayload

  # Creates the new user
  ClusterKitNodeApi_nodeManagerData_users_create(input: ClusterKitNodeApi_nodeManagerData_users_create_Input): ClusterKitNodeApi_ClusterKitUser_NodeMutationPayload

  # Creates the new user
  ClusterKitNodeApi_nodeManagerData_users_update(input: ClusterKitNodeApi_nodeManagerData_users_update_Input): ClusterKitNodeApi_ClusterKitUser_NodeMutationPayload

  # Creates the new managing system role
  ClusterKitNodeApi_nodeManagerData_roles_create(input: ClusterKitNodeApi_nodeManagerData_roles_create_Input): ClusterKitNodeApi_ClusterKitRole_NodeMutationPayload

  # Creates the new managing system role
  ClusterKitNodeApi_nodeManagerData_roles_update(input: ClusterKitNodeApi_nodeManagerData_roles_update_Input): ClusterKitNodeApi_ClusterKitRole_NodeMutationPayload
}

# The Node interface as described in Relay documentation
interface Node {
  # The node id
  id: ID
}

# The root query type
type Query implements Node {
  # The united api access
  api: ClusterKitMonitoring_ClusterKitNodeApi
  id: ID

  # The node global searcher according to Relay specification
  node(
    # The node global id
    id: ID
  ): Node
}

# The Uid / Guid representation
scalar Uid
